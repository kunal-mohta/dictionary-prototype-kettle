{"version":3,"sources":["../src/framework/core/js/Fluid.js","../src/framework/core/js/FluidPromises.js","../src/framework/core/js/FluidDocument.js","../src/framework/core/js/FluidDOMUtilities.js","../src/framework/core/js/JavaProperties.js","../src/framework/core/js/FluidDebugging.js","../src/framework/core/js/FluidIoC.js","../src/framework/core/js/DataBinding.js","../src/framework/core/js/ModelTransformation.js","../src/framework/core/js/ModelTransformationTransforms.js","../src/framework/core/js/jquery.keyboard-a11y.js","../src/framework/core/js/FluidView.js","../src/framework/core/js/FluidRequests.js","../src/framework/core/js/ResourceLoader.js"],"names":["fluid_3_0_0","fluid","$","transformInternal","source","togo","key","args","transit","j","length","regenerateCursor","segs","limit","sourceStrategy","i","makeArray","regenerateSources","sources","sourceStrategies","thisSource","undefined","push","version","Error","environment","global","window","self","invokeLater","func","setTimeout","defeatLogging","activityTracing","activityTrace","activityParser","renderOneActivity","activity","nowhile","message","index","lastIndex","match","exec","substring","renderActivity","activityStack","renderer","transform","singleThreadLocal","initFunc","value","newValue","threadLocal","globalThreadLocal","getActivityStack","root","describeActivity","logActivity","rendered","reverse","log","each","doLog","pushActivity","type","record","time","Date","getTime","passLogLevel","logLevel","TRACE","popActivity","popframes","pop","popped","FluidError","apply","this","arguments","stack","prototype","Object","create","logFailure","FAIL","concat","renderLoggingArg","arg","isPrimitive","isPlainObject","JSON","stringify","builtinFail","join","fail","failureEvent","fire","expect","name","target","members","isLogging","logLevelStack","priority","IMPORTANT","isLogLevel","isMarker","testLogLevel","setLogging","enabled","unshift","setLogLevel","popLogging","shift","console","debug","directArgs","userLogLevel","INFO","arg0","renderTimestamp","isValue","valueType","isArrayable","totest","jquery","toString","call","strict","string","constructor","hasOwnProperty","typeCode","isIoCReference","ref","charAt","indexOf","isDOMNode","obj","isComponent","componentConstructor","isUncopyable","isApplicable","identity","notImplemented","firstDefined","a","b","freshContainer","tocopy","copyRecurse","strategyRecursionBailout","copy","extend","pushArray","holder","member","topush","array","make_find","find_if","deffolt","disp","find","accumulate","list","fn","add","remove_if","splice","generate","n","generator","applyFunc","iota","count","first","getMembers","get","filterKeys","toFilter","keys","exclude","censorKeys","toCensor","makeFlatten","values","contains","thisValue","keyForValue","arrayToHash","el","stableSort","k","hashToArray","hash","keyName","newEl","flatten","element","clear","compareStringLength","ascending","parseInteger","isFinite","Number","NaN","roundToDecimal","num","scale","method","Math","round","sign","abs","freezeRecursive","tofreeze","freeze","marker","makeMarker","extra","VALUE","NO_VALUE","EXPAND","logLevelsSpec","FATAL","WARN","model","copyModel","parseEL","EL","String","split","composePath","prefix","suffix","composeSegments","lastDotIndex","path","lastIndexOf","getToTailPath","lastdot","getTailPath","requireDataBinding","setWithStrategy","getWithStrategy","resolvePathSegment","segment","origEnv","parseToSegments","pathToSegments","config","parser","parse","accessImpl","initSegs","returnSegs","traverser","initPos","uncess","accessSimple","traverseSimple","setSimple","getSimple","getImmediate","decodeAccessorArg","arg3","defaultGetConfig","defaultSetConfig","set","env","getGlobalValue","bind","fnName","invokeGlobalFunction","functionPath","registerGlobalFunction","setGlobalValue","registerNamespace","naimspace","existing","dumpEl","generateUniquePrefix","floor","random","fluid_prefix","fluidInstance","fluid_guid","allocateGuid","extremePriority","priorityTypes","last","before","after","extremalPriorities","none","testing","authoring","parsePriorityConstraint","constraint","fixedOnly","site","lookup","parsePriority","fixed","multiplier","extremal","renderPriority","parsed","compareByPriority","recA","recB","honourConstraint","firstConstraint","c","matchIndex","namespace","offset","temp","sortByPriority","oldFirstConstraint","applied","holders","slice","parsePriorityRecords","records","newElement","oldElement","event","identifyListener","listener","soft","$$fluid_guid","impersonateListener","origListener","newListener","sortListeners","listeners","oneNamespace","headHard","thisListener","softNamespace","resolveListener","listenerName","globalName","listenerFunc","nameComponent","that","typeName","id","nameEvent","eventName","makeEventFirer","options","lazyInit","byId","sortedListeners","addListener","listenerId","destroyed","thisListeners","eventId","ownerId","destroy","removeListener","rec","thisLis","lisrec","ret","preventable","fireEvent","component","firer","events","addListenerToFirer","wrapper","resolveListenerRecord","expandImmediate","material","mergeListeners","keydot","adderWrapper","eventFromRecord","eventSpec","eventKey","isIoCEvent","resolveEvent","instantiateFirers","mergeListenerPolicy","hasNamespace","arrayConcatPolicy","makeMergeListenersPolicy","merger","modelRelay","validateListenersImplemented","errors","componentSource","unique","pushSoftFailure","condition","typeTag","gradeTick","gradeTickStore","defaultsStore","resolveGradesImpl","gs","gradeNames","gradeName","gradeHash","isDynamic","rawDefaults","thisTick","lastTick","max","gradeChain","oGradeNames","resolveGradeStructure","defaultName","gradeStruct","hasGrade","resolveGrade","defaults","mergeArgs","mergePolicy","mergedDefaults","merge","mergedDefaultsCache","gradeNamesToKey","getMergedDefaults","searchGrades","upgradePrimitiveFunc","annotateListeners","componentName","onerec","invokers","entry","registerRawDefaults","optionsCopy","expandCompact","callerInfo","getCallerInfo","doIndexDefaults","indexSpec","requiredGrades","indexFunc","indexDefaults","indexName","gradedDefaults","makeComponentCreator","creator","initFunction","initComponent","blankGrades","emptyPolicy","derefMergePolicy","policy","compileMergePolicy","builtins","defaultValues","builtin","isDefaultValueMergePolicy","hasDefaults","test","mergeOneImpl","thisTarget","newPolicy","primitiveTarget","nomerge","fetchMergeChildren","thisPolicy","newSource","childPolicy","concreteTrundler","evaluateFully","strategy","replace","inEvaluationMarker","__CURRENTLY_IN_EVALUATION__","makeMergeStrategy","isTracing","tracing","pathCount","oldTarget","start","mul","newPolicyHolder","newSources","driveStrategy","pathSegs","seg","Array","compiled","makeMergeOptions","initter","simpleGingerBlock","recordType","block","simple","mergeRecordTypes","userOptions","transformOptions","transRec","transFunc","transformer","findMergeBlocks","mergeBlocks","transformOptionsBlocks","recordTypes","blocks","dedupeDistributionNamespaces","byNamespace","mergeBlock","ns","contextThat","deliverOptionsStrategy","computeComponentAccessor","computeDynamicComponents","defaultValueMerge","subcomponentRecord","user","distribution","applyChangeRequest","request","destroyValue","mergeComponentOptions","localOptions","computeMergePolicy","mergeOptions","rootMergePolicy","compiledPolicy","sharedMergePolicy","expandComponentOptions","baseMergeOptions","updateBlocks","generateExpandBlock","localRecord","invokeGradedFunction","spec","argumentMap","noNamespaceDistributionPrefix","mergeOneDistribution","distributeOptionsPolicy","oneSource","mergingArray","membersMergePolicy","invokerStrategies","invokersMergePolicy","oneInvoker","oneT","key2","distributeOptions","noexpand","onCreate","onDestroy","afterDestroy","computeNickName","initLittleComponent","receiver","lifecycleStatus","makeRootDestroy","exceptions","diagnoseFailedView","doDestroy","isDestroyed","parent","applier","initArgs","initDependents","error","initSubcomponentImpl","entryType","charStart","simpleCSSMatcher","regexp","RegExp","charToTag","","#",".","IoCSSMatcher","&","childSeg","parseSelector","selstring","trim","atNode","segMatch","thisNode","text","targetTag","fullAtNode","predList","childMatch","child","stringToRegExp","str","flags","stringTemplate","template","sort","re","jQuery","promise","onResolve","onReject","then","disposition","resolve","complete","reject","reason","which","queue","isPromise","toPromise","promiseOrValue","follow","map","mapped","makeSequencer","resolvedSources","returns","progressSequence","retValue","resumeSequence","processSequenceReject","resolved","accumulator","accumulateRejectionReason","resolveResult","invokeNext","makeSequenceStrategy","sequence","sequencer","makeTransformerStrategy","makeTransformer","payload","filterNamespaces","namespaces","fireTransformEvent","applyOp","node","trigger","triggerHandler","uaMatch","ua","toLowerCase","browser","matched","navigator","userAgent","msie","chrome","webkit","safari","NAMESPACE_KEY","getScopedData","data","setScopedData","lastFocusedElement","document","on","getLastFocusedElement","ENABLEMENT_KEY","state","nodeName","prop","initEnablement","resolveEventTarget","originalEvent","elem","changeElementValue","val","change","dom","getNextNode","iterator","firstChild","depth","nextSibling","parentNode","iterateDom","acceptor","allNodes","currentNode","prevNode","DOM_BAIL_DEPTH","nodeType","removeChild","isContainer","container","containee","getElementText","nodes","childNodes","nodeValue","unUnicode","unescapeProperties","code","parseInt","fromCharCode","pos","backpos","breakPos","parseJavaProperties","contin","valueComp","valueRaw","valueEsc","lines","line","breakpos","search","formatMessage","messageString","printImpl","small","out","output","big","indentChars","isFunction","maxRenderChars","SYNTHETIC_PROPERTY","getSafeProperty","date","zeropad","width","numstr","getHours","getMinutes","getSeconds","getMilliseconds","summarisePathCount","toReallyGo","condensePathCount","prefixes","prefixCount","detectStackStyle","e","style","stackStyle","opera","stacktrace","obtainException","decodeStack","exceptionDecoders","firefox","delimiter","atind","atDepth","lastslash","nextColon","filename","generatePadding","desc","getOwnPropertyDescriptor","prettyPrintJSON","indent","location","tagName","attr","visitComponentChildren","visitor","visited","flat","getContextHash","instantiator","shadow","idToShadow","contextHash","componentHasGrade","globalInstantiator","visitComponentsForMatching","getInstantiator","thatStack","contextHashes","visitorWrapper","getMemberNames","idToPath","visitComponentsForVisibility","memberNames","mountStrategy","toMount","invokerFromRecord","invokerec","invoker","makeInvoker","memberFromRecord","memberrecs","expanded","recordStrategy","optionsStrategy","recordPath","recordMaker","getForComponent","shadowForComponent","makeDistributionRecord","sourceRecord","sourcePath","targetSegs","exclusions","sourceType","exclusion","checkComponentRecord","filterBlocks","sourceBlocks","sourceSegs","removeSource","rescued","orig","noteCollectedDistribution","parentShadow","memberName","isCollectedDistribution","clearCollectedDistributions","collectDistributions","distributedBlocks","lastMember","matchIoCSelector","selector","registerCollectedClearer","collectedClearer","receiveDistributions","parentThat","getThatStack","rootComponent","shadows","thisThat","gradeNamesToHash","distributions","computeTreeDistance","path1","path2","computeDistributionPriority","targetThat","distributedBlock","targetStack","targetPath","sourceStack","distance","applyDistributions","preBlocks","targetShadow","preBlock","thatpos","selpos","mustMatchHere","selel","pred","context","queryIoCSelector","isIoCSSSelector","pushDistributions","targetHead","clearDistribution","clearDistributions","outDistributions","outDist","targetComponent","distributionId","extractSelectorHead","parsedSelector","parseExpectedOptionsPath","role","replicateProperty","property","targets","undistributableOptions","thatShadow","targetComp","targetRef","parseContextReference","headContext","resolveContext","fullExclusions","cacheShadowGrades","troo","ownScope","childrenScope","collectDistributedGrades","readyBlocks","gradeNamesList","accumulateDynamicGrades","applyDynamicGrades","oldGradeNames","newDefaults","seenGrades","defaultsBlock","newGradeNames","rawDynamic","plainDynamic","computeDynamicGrades","localDynamic","computeDynamicComponentKey","recordKey","sourceKey","registerDynamicRecord","cRecord","localSub","subcomponentLocal","createOnEvent","expandOptions","expandOneEvent","dynamicComponentCount","initDependent","recordListener","invokerStrategy","eventStrategyBlock","eventStrategy","memberStrategy","getConfig","strategies","funcResolverStrategy","makeGingerStrategy","singleRootType","typeNameToMemberName","computeGlobalMemberName","resolveRootComponent","clearComponent","recordKnownComponent","thisSeg","atval","parentPath","childPath","pathToComponent","subRecord","frameworkGrades","filterBuiltinGrades","dumpGradeNames","dumpThat","dumpThatStack","dumpComponentPath","pathForComponent","pathUtil","fast","innerContext","triggerMismatchedPathError","rawValue","renderContextReference","foundComponent","getFullStack","makeStackFetcher","fetcher","makeStackResolverOptions","clearListeners","constructScopeObjects","childShadow","clearChildrenScope","recordComponent","created","injectedPaths","modelTransactions","init","onComponentAttach","onComponentClear","recordRoot","clearConcreteComponent","injectedPath","otherParent","nested","destroyRecs","gchild","gchildname","constructRootComponents","rootShadow","resolveRootShadow","outerExpandOptions","defer","makeExpandOptions","expand","localRecordExpected","mergeRecordsToList","mergeRecords","addPolicyBuiltins","expandComponentOptionsImpl","initRecord","defaultCopy","expandList","fabricateDestroyMethod","nickName","assembleCreatorArguments","upDefaults","fakeThat","componentRecord","argMap","findKeys","funcName","instance","components","expander","invokeSpec","bindDeferredComponent","priorityForComponent","componentSort","assessTreeConstruction","unstableUp","markSubtree","construct","constructSingle","destroySingle","makeGradeLinkage","linkageName","inputNames","outputNames","componentForPath","probeToDistribution","probe","parsedPriority","registerProbes","probes","probeDistribution","deregisterProbes","probeName","thisistToApplicable","recthis","noThis","resolvedThis","resolvedFunc","changeToApplicable","mergeRecord","parseValidModelReference","changePath","modelSegs","recordToApplicable","standard","getGlobalValueNonComponent","invokePre","preExpand","finalArgs","expandImmediateImpl","makeTrackedListenerAdder","listenerEngine","callback","adder","checkFire","notall","argstruc","oldstruc","dispatchListener","indirectArgs","dispatchPre","resolveSoftNamespace","lastpos","badRec","transRecs","methodist","origin","expandEvents","oneEvent","isMultiple","isComposite","dispatcher","outerArgs","withEnvironment","envAdd","fetchContextReference","directModel","elResolver","externalFetcher","base","resolveExternal","noDereference","makeEnvironmentFetcher","envGetter","coerceToPrimitive","compactStringToRec","openPos","closePos","trail","body","expandPrefix","expandCompactString","active","rem","singularPenRecord","modelListeners","singularRecord","expandCompactRec","guardCircularExpansion","pen","extractEL","ELstyle","i1","i2","extractELWithContext","reference","endcpos","isNested","endpos","resolveContextValue","fetch","bareContextRefs","subs","all","fetchExpandChildren","expandExpander","isUnexpandable","expandSource","deliverer","recurse","isTrunk","defaultEL","makeExpandStrategy","inCreationMarker","ELStyle","preExpandRecurse","rootSegs","pushExpander","expanders","typeFunc","inLocal","contextStatus","invokeFunc","funcEntry","tree","makeEnvironmentStrategy","defaultCreatorStrategy","defaultFetchStrategy","traverseWithStrategy","accepted","getValueAndSegments","accessWithStrategy","makeTrundler","valueSeg","resolver","resolvers","trundler","getPathSegmentImpl","accept","escaped","globalAccept","firstdot","composeSegment","toappend","escapeSegment","matchSegments","toMatch","end","unescapedParser","compose","escapedParser","escapedGetConfig","escapedSetConfig","initRelayModel","deenlistModelComponent","isModelComplete","enlistModelComponent","enlist","clearTransactions","clearLinkCounts","relaysAlso","relayCount","sortCompleteLast","reca","recb","completeOnInit","operateInitialTransaction","mrec","transac","transId","getModelTransactionRec","transacs","recel","initiate","applierId","transaction","recs","initModelEvent","initModels","initModel","fireChangeRequest","modelComplete","commit","incomplete","parseModelReference","implicitRelay","modelPoint","nonModel","contextSegs","relays","externalChanges","recordChangeListener","sourceListener","modelChanged","registerRelayTransaction","targetApplier","npOptions","newTrans","transEl","relayRecursionBailout","registerDirectChangeRelay","linkId","transducer","sourceApplier","oldValue","changeRequest","trans","relay","newHolder","noRelayDeletesDirect","isRelay","transactional","connectModelRelay","enlistComponent","update","forwardAdapter","forwardApplier","backwardAdapter","parseSourceExclusionSpec","targetSpec","sourceSpec","excludeSource","includeSource","isExcludedChangeSource","excluded","fullSources","guardedAdapter","cond","transformToAdapter","basedTransform","transformWithRules","finalApplier","makeTransformPackage","componentThat","forwardCond","backwardCond","forwardHolder","backwardHolder","generateAdapters","forwardAdapterImpl","invertConfiguration","backwardAdapterImpl","runTransform","reset","makeHolderChangeApplier","isRelayApplier","invalidator","backwardApplier","implicitOptions","refCount","parseImplicitRelay","singleTransformToFull","singleTransform","withPath","inputPath","relayConditions","initOnly","liveOnly","never","always","parseRelayCondition","exclusionRec","parseModelRelay","mrrec","parsedSource","parsedTarget","forward","backward","transformPackage","noRelayDeletes","modelRec","innerValue","innerTrans","notifyExternal","allChanges","commitRelays","transactionId","updateRelays","updates","changeRecord","changes","establishModelRelay","optionsModel","optionsML","optionsMR","concludeTransaction","modelRelayEstablished","mergeModelListeners","preCommit","postCommit","changeApplierOptions","relayStyle","cullUnchanged","modelChangedToChange","invokeListener","resolveModelListener","registerModelListeners","paths","byTarget","parsedArray","segsArray","pathArray","fireChanges","isChangedPath","changeMap","setChangedPath","notePath","deltaMap","deltas","fetchChangeChildren","applyChangeStrategy","isSameValue","relError","targetSlot","sourceCode","targetCode","changedValue","unchanged","inverse","stepTargetAccess","startpos","oldTrunk","defaultAccessorConfig","resolverSetConfig","resolverGetConfig","applyHolderChangeRequest","atRoot","diff","modela","modelb","typea","typeb","holdera","holderb","outputMatches","matches","outSegs","matchChanges","specSegs","oldHolder","newRoot","oldRoot","wildcard","storeExternalChange","invalidPath","pathString","keySegs","keyString","notifyModelChanges","multiplePaths","invalidPaths","isNull","sourceExcluded","bindELMethods","emptyHolder","preFireChangeRequest","bindRequestChange","isObjectSimple","mergeChangeSources","globalSources","globalSource","ChangeApplier","transListeners","ation","localSource","defeatPost","instanceId","hasChangeSource","modelPairToChanges","changePathPrefix","diffOptions","modelPairToChangesImpl","changePathPrefixSegs","changeSegs","currentChangeSegs","pathToRule","literalValueToRule","input","composePaths","accumulateInputPath","inputPrefix","accumulateStandardInputPath","transformSpec","getValue","accumulateMultiInputPaths","inputVariables","v","literalValue","NONDEFAULT_OUTPUT_PATH_RETURN","setValue","userOutputPath","toset","outputPath","outputPrefix","resolveParam","def","matchValue","expected","actual","partialMatches","stats","invertPaths","oldOutput","prefixApplier","inputPrefixOp","outputPrefixOp","makePathStack","prefixName","newPath","doTransform","transformOpts","expdef","transformFn","transformArgs","inputs","transformed","doOutput","getPathSegment","getHeadPath","getFromHeadPath","matchPath","exact","spechead","pathhead","expandWildcards","q","queuedTransforms","pathOp","esCopy","hasWildcard","lookupType","result","maybePushWildcard","hw","sortByKeyLength","inObject","handleTransformStrategy","handleInvertStrategy","invertor","inverted","handleCollectStrategy","standardInput","multiInput","inputPaths","collector","collectInputPaths","collected","processRule","rule","transforms","transformHandler","collectedFlatSchemaOpts","makeStrategy","handleFn","rules","flatSchemaStrategy","flatSchema","defaultSchemaValue","schemaValue","isomorphicSchemaStrategy","decodeStrategy","isomorphic","schemaToCreatorStrategy","compareByPathLength","changea","changeb","pdiff","fireSortedChanges","setConfig","schemaStrategy","queuedChanges","rootSetConfig","typeStack","transformOne","transformMany","fluid_2_0_0","invertToIdentity","stringToNumber","isNaN","invert","numberToString","rounded","firstValue","factor","linearScale","extraInputs","factorPath","offsetPath","left","right","binaryLookup","===","!==","<=","<",">=",">","+","-","*","/","%","&&","||","binaryOp","operator","fun","true","false","compareMatches","speca","specb","matchDiff","valueMapper","defaultInputPath","matchedEntry","longFormMatch","noMatch","defaultOutputPath","outputValue","outputUndefinedValue","defaultOutputValue","valueFromDefaultPath","o","matchPower","option","inputValue","isArray","outOption","origInputValue","defaultInputValue","collect","arrayToSetMembership","presentValue","missingValue","outPath","outVal","invertWithType","newType","newOptions","oldKey","setMembershipToArray","outputArr","outputVal","applyPaths","operation","expandInnerValues","innerValues","expandedInner","indexArrayByKey","arr","newHash","pivot","newKey","keyType","content","deindexIntoArrayByKey","newArray","limitRange","min","excludeMin","excludeMax","notFound","parseIndexationOffset","originalIndex","invertArrayIndexation","dereference","transformName","parsedOffset","terms","free","quantize","ranges","rangeSpec","upperBound","NEGATIVE_INFINITY","inRange","stringToBoolean","booleanToString","JSONstringToObject","objectToJSONString","space","stringToDate","dateToString","isoString","toISOString","dateString","dateTimeToString","thatistBridge","peer","funcname","move","normalizeTabindexName","canHaveDefaultTabindex","elements","is","tabindex","hasAttr","toIndex","item","remove","removeAttr","attributeNode","getAttributeNode","specified","has","a11y","orientation","HORIZONTAL","VERTICAL","BOTH","UP_DOWN_KEYMAP","next","ui","keyCode","DOWN","previous","UP","LEFT_RIGHT_KEYMAP","RIGHT","LEFT","unwrap","makeElementsTabFocussable","idx","tabbable","CONTEXT_KEY","NO_SELECTION","cleanUpWhenLeavingContainer","selectionContext","activeItemIndex","onLeaveContainer","selectables","onUnselect","rememberSelectionState","drawSelection","elementToSelect","handler","eraseSelection","selectedElement","unselectElement","selectElement","newIndex","onSelect","selectableFocusHandler","evt","stopPropagation","selectableBlurHandler","selectablesTabindex","reifyIndex","sc_that","noWrap","focus","prepareShift","selElm","blur","focusNextElement","focusPreviousElement","arrowKeyHandler","keyMap","preventDefault","getKeyMapForDirection","direction","tabKeyHandler","TAB","shiftKey","focusIsLeavingContainer","containerFocusHandler","shouldOrig","autoSelectFirstItem","shouldSelect","containerBlurHandler","makeElementsSelectable","selectableElements","selectableSelector","selectablesUpdated","focusedItem","off","noBubbleListeners","refresh","keydown","selectable","select","toSelect","selectNext","selectPrevious","currentSelection","checkForModifier","binding","modifier","modifierKey","isCtrlKeyPresent","ctrlKey","isAltKeyPresent","altKey","isShiftKeyPresent","makeActivationHandler","activateHandler","Event","isDefaultPrevented","makeElementsActivatable","onActivateHandler","defaultKeys","bindings","additionalBindings","activatable","activate","ENTER","SPACE","dumpSelector","wrap","message1","checkTryCatchParameter","protocol","GETparams","param","notrycatch","userJQuery","containerSpec","fallible","ownerDocument","createDomBinder","selectors","cacheKey","thisContainer","allocateSimpleId","cache","locate","localContainer","selectorName","fastLocate","names","expectFilledSelector","initView","initDomBinder","expando","findAncestor","findForm","nodeIn","multiple","getElementsByName","scope","grep","checked","BINDING_ROOT_KEY","findData","bindFossils","fossils","boundPathForNode","applyBoundChange","fossil","jById","dokkument","getElementById","getId","simpleId","getDocument","labelAttribute","liveRegionMarkup","liveRegionId","generateLiveElement","ariaLabeller","dynamicLabel","live","liveEl","append","LABEL_KEY","getAriaLabeller","updateAriaLabel","dismissList","click","dismissFunc","globalDismissal","now","deadMansBlur","control","blurPending","lastCancel","canceller","noteProceeded","reArm","proceed","addExclusion","excludeEl","mousedown","cancelByDefault","backDelay","delay","canonUrl","url","explodeLocalisedName","fileName","locale","defaultLocale","lastDot","baseName","extension","exploded","shortSegs","resourceCache","pendingClass","fetchResources","resourceSpecs","operate","fetchResourcesImpl","resourceSpec","recurseFirer","href","amalgamateClasses","explodeForLocales","newRecord","localeExploded","condenseOneResource","localeCount","localeSpecs","localKey","lastNonError","fetchError","condenseForLocales","notifyResources","specs","classes","clazz","pending","pendingrec","canon","timeSuccessCallback","timeSuccess","success","startTime","clearResourceCache","handleCachedRequest","response","cached","$$firer$$","fetchClass","completeRequest","thisSpec","queued","completeTime","initTime","makeResourceCallback","resourceText","resourceKey","forceCache","textStatus","errorThrown","status","issueCachedRequest","ajax","composeCallbacks","internal","external","composePolicy","issueRequest","thisCallback","dataType","allSync","async","nodeId","callbackCalled","mozilla","primeCacheFromResources","resources","makeDefaultFetchOptions","successdisposer","failid","environmentdisposer","json","makeFetchExpander","disposer","resourceSpecCollector","fetchKey","deferredFetcher","disposed","onCreate.loadResources","resourceOptions","transformURL","resolveResources","onResourcesLoaded","resourceLoader","loadResources"],"mappings":";;;;;;;AA6BA,GAAIA,aAAcA,gBACdC,MAAQA,OAASD,aAErB,SAAWE,EAAGD,OACV,YAgbA,SAASE,mBAAkBC,OAAQC,KAAMC,IAAKC,MAE1C,IAAK,GADDC,SAAUJ,OAAOE,KACZG,EAAI,EAAGA,EAAIF,KAAKG,OAAS,IAAKD,EACnCD,QAAUD,KAAKE,EAAI,GAAGD,QAASF,IAEnCD,MAAKC,KAAOE,QA8iDhB,QAASG,kBAAiBP,OAAQQ,KAAMC,MAAOC,gBAC3C,IAAK,GAAIC,GAAI,EAAGA,EAAIF,QAASE,EACzBX,OAASU,eAAeV,OAAQQ,KAAKG,GAAIA,EAAGd,MAAMe,UAAUJ,MAEhE,OAAOR,QAGX,QAASa,mBAAkBC,QAASN,KAAMC,MAAOM,kBAE7C,IAAK,GADDd,SACKU,EAAI,EAAGA,EAAIG,QAAQR,SAAUK,EAAG,CACrC,GAAIK,YAAaT,iBAAiBO,QAAQH,GAAIH,KAAMC,MAAOM,iBAAiBJ,GACzDM,UAAfD,YACAf,KAAKiB,KAAKF,YAGlB,MAAOf,MAh/DXJ,MAAMsB,QAAU,iBAIhBtB,MAAMuB,MAAQA,MAEdvB,MAAMwB,aACFxB,MAAOA,OAGXA,MAAMyB,OAASzB,MAAMyB,QAA4B,mBAAXC,QAClCA,OAAyB,mBAATC,MAAuBA,QAM3C3B,MAAM4B,YAAc,SAAUC,MAC1B,MAAOC,YAAWD,KAAM,IAK5B7B,MAAM+B,eAAgB,EAKtB/B,MAAMgC,iBAAkB,EACxBhC,MAAMiC,gBAEN,IAAIC,gBAAiB,SAIrBlC,OAAMmC,kBAAoB,SAAUC,SAAUC,SAI1C,IAHA,GAAIjC,MAAOiC,WAAY,MAAa,cAChCC,QAAUF,SAASE,QACnBC,MAAQL,eAAeM,UAAY,IAC1B,CACT,GAAIC,OAAQP,eAAeQ,KAAKJ,QAChC,KAAIG,MAOA,KANA,IAAIpC,KAAMoC,MAAM,GAAGE,UAAU,EAC7BvC,MAAKiB,KAAKiB,QAAQK,UAAUJ,MAAOE,MAAMF,QACzCnC,KAAKiB,KAAKe,SAAS9B,KAAKD,MACxBkC,MAAQL,eAAeM,UAS/B,MAHID,OAAQD,QAAQ7B,QAChBL,KAAKiB,KAAKiB,QAAQK,UAAUJ,QAEzBnC,MAKXJ,MAAM4C,eAAiB,SAAUC,cAAeC,UAE5C,MADAA,UAAWA,UAAY9C,MAAMmC,kBACtBnC,MAAM+C,UAAUF,cAAeC,WAQ1C9C,MAAMgD,kBAAoB,SAAUC,UAChC,GAAIC,OAAQD,UACZ,OAAO,UAAUE,UACb,MAAoB/B,UAAb+B,SAAyBD,MAAQA,MAAQC,WAQxDnD,MAAMoD,YAAcpD,MAAMgD,kBAG1BhD,MAAMqD,kBAAoBrD,MAAMoD,YAAY,WACxC,WAKJpD,MAAMsD,iBAAmB,WACrB,GAAIC,MAAOvD,MAAMqD,mBAIjB,OAHKE,MAAKV,gBACNU,KAAKV,kBAEFU,KAAKV,eAKhB7C,MAAMwD,iBAAmBxD,MAAMsD,iBAG/BtD,MAAMyD,YAAc,SAAUrB,UAC1BA,SAAWA,UAAYpC,MAAMwD,kBAC7B,IAAIE,UAAW1D,MAAM4C,eAAeR,UAAUuB,SAC9C3D,OAAM4D,IAAI,sBACV5D,MAAM6D,KAAKH,SAAU,SAAUpD,MAC3BN,MAAM8D,MAAMxD,SAMpBN,MAAM+D,aAAe,SAAUC,KAAM1B,QAAShC,MAC1C,GAAI2D,SAAUD,KAAMA,KAAM1B,QAASA,QAAShC,KAAMA,KAAM4D,MAAM,GAAIC,OAAOC,UACrEpE,OAAMgC,iBACNhC,MAAMiC,cAAcZ,KAAK4C,QAEzBjE,MAAMqE,aAAarE,MAAMsE,SAASC,QAClCvE,MAAM8D,MAAM9D,MAAMmC,kBAAkB8B,QAAQ,GAEhD,IAAIpB,eAAgB7C,MAAMsD,kBAC1BT,eAAcxB,KAAK4C,SAIvBjE,MAAMwE,YAAc,SAAUC,WAC1BA,UAAYA,WAAa,EACrBzE,MAAMgC,iBACNhC,MAAMiC,cAAcZ,MAAMqD,IAAKD,WAEnC,IAAI5B,eAAgB7C,MAAMsD,mBACtBqB,OAAS9B,cAAcpC,OAASgE,SACpC5B,eAAcpC,OAASkE,OAAS,EAAI,EAAIA,QAI5C3E,MAAM4E,WAAa,WACf,GAAIxE,MAAOmB,MAAMsD,MAAMC,KAAMC,UAC7BD,MAAKxC,QAAUlC,KAAKkC,OACpB,KACI,KAAMlC,MACR,MAAOA,MACL0E,KAAKE,MAAQ5E,KAAK4E,MAEtB,MAAOF,OAEX9E,MAAM4E,WAAWK,UAAYC,OAAOC,OAAO5D,MAAM0D,WAGjDjF,MAAMoF,WAAa,SAAU9E,KAAM8B,UAC/BpC,MAAM4D,IAAIiB,MAAM,MAAO7E,MAAMsE,SAASe,KAAM,sBAAsBC,OAAOhF,OACzEN,MAAMyD,YAAYrB,WAGtBpC,MAAMuF,iBAAmB,SAAUC,KAC/B,MAAOxF,OAAMyF,YAAYD,OAASxF,MAAM0F,cAAcF,KAAOA,IAAMG,KAAKC,UAAUJ,MAItFxF,MAAM6F,YAAc,SAAUvF,MAC1B,GAAIgC,SAAUtC,MAAM+C,UAAUzC,KAAMN,MAAMuF,kBAAkBO,KAAK,GACjE,MAAM,IAAI9F,OAAM4E,WAAW,uDAAyDtC,UAUxFtC,MAAM+F,KAAO,WACT,GAAIzF,MAAON,MAAMe,UAAUgE,WACvB3C,SAAWpC,MAAMe,UAAUf,MAAMwD,mBACrCxD,OAAMwE,YAAYpC,SAAS3B,QACvBT,MAAMgG,aACNhG,MAAMgG,aAAaC,KAAK3F,KAAM8B,WAE9BpC,MAAMoF,WAAW9E,KAAM8B,UACvBpC,MAAM6F,YAAYvF,KAAM8B,YAKhCpC,MAAMkG,OAAS,SAAUC,KAAMC,OAAQC,SACnCrG,MAAM+C,UAAU/C,MAAMe,UAAUsF,SAAU,SAAUhG,KACrB,mBAAhB+F,QAAO/F,MACdL,MAAM+F,KAAKI,KAAO,+BAAiC9F,QAQ/DL,MAAMsG,UAAY,WACd,MAAOC,eAAc,GAAGC,SAAWxG,MAAMsE,SAASmC,UAAUD,UAIhExG,MAAM0G,WAAa,SAAUlB,KACzB,MAAOxF,OAAM2G,SAASnB,MAAyBpE,SAAjBoE,IAAIgB,UAQtCxG,MAAMqE,aAAe,SAAUuC,cAC3B,MAAOA,cAAaJ,UAAYD,cAAc,GAAGC,UAOrDxG,MAAM6G,WAAa,SAAUC,SACzB,GAAIxC,SACmB,kBAAZwC,SACPxC,SAAWtE,MAAMsE,SAASwC,QAAU,OAAS,aACtC9G,MAAM0G,WAAWI,SACxBxC,SAAWwC,QAEX9G,MAAM+F,KAAK,oCAAqCe,SAEpDP,cAAcQ,QAAQzC,UACtBtE,MAAM+B,eAAiB/B,MAAMsG,aAGjCtG,MAAMgH,YAAchH,MAAM6G,WAG1B7G,MAAMiH,WAAa,WACf,GAAI7G,MAAgC,IAAzBmG,cAAc9F,OAAe8F,cAAc,GAAKA,cAAcW,OAEzE,OADAlH,OAAM+B,eAAiB/B,MAAMsG,YACtBlG,MAMXJ,MAAM8D,MAAQ,SAAUxD,MACK,mBAAd,WACH6G,QAAQC,MACRD,QAAQC,MAAMvC,MAAMsC,QAAS7G,MACG,kBAAjB6G,SAAW,KAC1BA,QAAQvD,IAAIiB,MAAMsC,QAAS7G,QAWvCN,MAAM4D,IAAM,WACR,GAAIyD,YAAarH,MAAMe,UAAUgE,WAC7BuC,aAAetH,MAAMsE,SAASiD,IAIlC,IAHIvH,MAAM0G,WAAWW,WAAW,MAC5BC,aAAeD,WAAWH,SAE1BlH,MAAMqE,aAAaiD,cAAe,CAClC,GAAIE,MAAOxH,MAAMyH,gBAAgB,GAAItD,OAAU,MAC3C7D,MAAQkH,MAAMlC,OAAO+B,WACzBrH,OAAM8D,MAAMxD,QASpBN,MAAM0H,QAAU,SAAUxE,OACtB,MAAiB9B,UAAV8B,OAAiC,OAAVA,OAIlClD,MAAMyF,YAAc,SAAUvC,OAC1B,GAAIyE,iBAAmB,MACvB,QAAQzE,OAAuB,WAAdyE,WAAwC,YAAdA,WAAyC,WAAdA,WAAwC,aAAdA,WAQpG3H,MAAM4H,YAAc,SAAUC,QAC1B,MAAOA,UAAWA,OAAOC,QAAqD,mBAA3C5C,OAAOD,UAAU8C,SAASC,KAAKH,UAQtE7H,MAAM0F,cAAgB,SAAUmC,OAAQI,QACpC,GAAIC,QAAShD,OAAOD,UAAU8C,SAASC,KAAKH,OAC5C,OAAe,mBAAXK,QACQD,OACU,oBAAXC,UAGHL,OAAOM,cAAgBN,OAAOM,YAAYlD,WAAaC,OAAOD,UAAUmD,eAAeJ,KAAKH,OAAOM,YAAYlD,UAAW,mBAMtIjF,MAAMqI,SAAW,SAAUR,QACvB,MAAO7H,OAAMyF,YAAYoC,UAAY7H,MAAM0F,cAAcmC,QAAU,YAC/D7H,MAAM4H,YAAYC,QAAU,QAAU,UAG9C7H,MAAMsI,eAAiB,SAAUC,KAC7B,MAAuB,gBAAV,MAAwC,MAAlBA,IAAIC,OAAO,IAAcD,IAAIE,QAAQ,KAAO,GAGnFzI,MAAM0I,UAAY,SAAUC,KAIxB,MAAOA,MAAiC,gBAAlBA,KAAY,UAGtC3I,MAAM4I,YAAc,SAAUD,KAC1B,MAAOA,MAAOA,IAAIR,cAAgBnI,MAAM6I,sBAG5C7I,MAAM8I,aAAe,SAAUjB,QAC3B,MAAO7H,OAAMyF,YAAYoC,UAAY7H,MAAM0F,cAAcmC,SAG7D7H,MAAM+I,aAAe,SAAUlB,QAC3B,MAAOA,QAAOhD,OAAkC,kBAAlBgD,QAAY,OAK9C7H,MAAMgJ,SAAW,SAAUxD,KACvB,MAAOA,MAKXxF,MAAMiJ,eAAiB,WACnBjJ,MAAM+F,KAAK,sCASf/F,MAAMkJ,aAAe,SAAUC,EAAGC,GAC9B,MAAahI,UAAN+H,EAAkBC,EAAID,GAKjCnJ,MAAMqJ,eAAiB,SAAUC,QAC7B,MAAOtJ,OAAM4H,YAAY0B,eAG7BtJ,MAAMuJ,YAAc,SAAUD,OAAQ3I,MAKlC,MAJIA,MAAKF,OAAST,MAAMwJ,0BACpBxJ,MAAM+F,KAAK,uEAAyE/F,MAAMwJ,yBAA2B,gBAAkB7I,KAAKmF,KAAK,KAC7I,0JAEJ9F,MAAM8I,aAAaQ,QACZA,OAEAtJ,MAAM+C,UAAUuG,OAAQ,SAAUpG,MAAO7C,KAC5CM,KAAKU,KAAKhB,IACV,IAAID,MAAOJ,MAAMuJ,YAAYrG,MAAOvC,KAEpC,OADAA,MAAK+D,MACEtE,QASnBJ,MAAMyJ,KAAO,SAAUH,QACnB,MAAOtJ,OAAMuJ,YAAYD,YAI7BtJ,MAAM0J,OAASzJ,EAAEyJ,OAIjB1J,MAAMe,UAAY,SAAUyE,KACxB,GAAIpF,QACJ,IAAY,OAARoF,KAAwBpE,SAARoE,IAChB,GAAIxF,MAAMyF,YAAYD,MAAQxF,MAAM0F,cAAcF,KAAK,IAAgC,gBAAhBA,KAAU,OAC7EpF,KAAKiB,KAAKmE,SAGV,KAAK,GAAI1E,GAAI,EAAGA,EAAI0E,IAAI/E,SAAUK,EAC9BV,KAAKU,GAAK0E,IAAI1E,EAI1B,OAAOV,OASXJ,MAAM2J,UAAY,SAAUC,OAAQC,OAAQC,QACxC,GAAIC,OAAQH,OAAOC,QAAUD,OAAOC,QAAWD,OAAOC,UAClD7J,OAAM4H,YAAYkC,QAClBC,MAAM1I,KAAKwD,MAAMkF,MAAOD,QAExBC,MAAM1I,KAAKyI,SAyBnB9J,MAAM+C,UAAY,SAAU5C,QACxB,GAAIH,MAAMyF,YAAYtF,QAClB,MAAOA,OAEX,IAAIC,MAAOJ,MAAMqJ,eAAelJ,OAChC,IAAIH,MAAM4H,YAAYzH,QAClB,IAAK,GAAIW,GAAI,EAAGA,EAAIX,OAAOM,SAAUK,EACjCZ,kBAAkBC,OAAQC,KAAMU,EAAGiE,eAGvC,KAAK,GAAI1E,OAAOF,QACZD,kBAAkBC,OAAQC,KAAMC,IAAK0E,UAG7C,OAAO3E,OASXJ,MAAM6D,KAAO,SAAU1D,OAAQ0B,MAC3B,GAAI7B,MAAM4H,YAAYzH,QAClB,IAAK,GAAIW,GAAI,EAAGA,EAAIX,OAAOM,SAAUK,EACjCe,KAAK1B,OAAOW,GAAIA,OAGpB,KAAK,GAAIT,OAAOF,QACZ0B,KAAK1B,OAAOE,KAAMA,MAK9BL,MAAMgK,UAAY,SAAUC,SACxB,GAAI7D,SAAS6D,SAAkB7I,MAC/B,OAAO,UAAUjB,OAAQ0B,KAAMqI,SAC3B,GAAIC,KACJ,IAAInK,MAAM4H,YAAYzH,SAClB,IAAK,GAAIW,GAAI,EAAGA,EAAIX,OAAOM,SAAUK,EAEjC,GADAqJ,KAAOtI,KAAK1B,OAAOW,GAAIA,GACnBqJ,OAAS/D,OACT,MAAO6D,SAAU9J,OAAOW,GAAKqJ,SAIrC,KAAK,GAAI9J,OAAOF,QAEZ,GADAgK,KAAOtI,KAAK1B,OAAOE,KAAMA,KACrB8J,OAAS/D,OACT,MAAO6D,SAAU9J,OAAOE,KAAO8J,IAI3C,OAAOD,WAcflK,MAAMoK,KAAOpK,MAAMgK,WAAU,GAI7BhK,MAAMiK,QAAUjK,MAAMgK,WAAU,GAYhChK,MAAMqK,WAAa,SAAUC,KAAMC,GAAI/E,KACnC,IAAK,GAAI1E,GAAI,EAAGA,EAAIwJ,KAAK7J,SAAUK,EAC/B0E,IAAM+E,GAAGD,KAAKxJ,GAAI0E,IAAK1E,EAE3B,OAAO0E,MAQXxF,MAAMwK,IAAM,SAAUrB,EAAGC,GACrB,MAAOD,GAAIC,GAgBfpJ,MAAMyK,UAAY,SAAUtK,OAAQoK,GAAInE,QACpC,GAAIpG,MAAM4H,YAAYzH,QAClB,IAAK,GAAIW,GAAIX,OAAOM,OAAS,EAAGK,GAAK,IAAKA,EAClCyJ,GAAGpK,OAAOW,GAAIA,KACVsF,QACAA,OAAOW,QAAQ5G,OAAOW,IAE1BX,OAAOuK,OAAO5J,EAAG,QAIzB,KAAK,GAAIT,OAAOF,QACRoK,GAAGpK,OAAOE,KAAMA,OACZ+F,SACAA,OAAO/F,KAAOF,OAAOE,YAElBF,QAAOE,KAI1B,OAAO+F,SAAUjG,QAUrBH,MAAM2K,SAAW,SAAUC,EAAGC,UAAWC,WAErC,IAAK,GADD1K,SACKU,EAAI,EAAGA,EAAI8J,IAAK9J,EACrBV,KAAKU,GAAKgK,UAAYD,UAAU/J,GAAK+J,SAEzC,OAAOzK,OAQXJ,MAAM+K,KAAO,SAAUC,MAAOC,OAC1BA,MAAQA,OAAS,CAEjB,KAAK,GADD7K,SACKU,EAAI,EAAGA,EAAIkK,QAASlK,EACzBV,KAAKA,KAAKK,QAAUwK,OAExB,OAAO7K,OAQXJ,MAAMkL,WAAa,SAAUtB,OAAQzD,MACjC,MAAOnG,OAAM+C,UAAU6G,OAAQ,SAAUC,QACrC,MAAO7J,OAAMmL,IAAItB,OAAQ1D,SAajCnG,MAAMoL,WAAa,SAAUC,SAAUC,KAAMC,SACzC,MAAOvL,OAAMyK,UAAUxK,EAAEyJ,UAAW2B,UAAW,SAAUnI,MAAO7C,KAC5D,MAAOkL,SAAWD,KAAK7C,QAAQpI,aAOvCL,MAAMwL,WAAa,SAAUC,SAAUH,MACnC,MAAOtL,OAAMoL,WAAWK,SAAUH,MAAM,IAI5CtL,MAAM0L,YAAc,SAAUnJ,OAC1B,MAAO,UAAUoG,KACb,GAAIvI,QAIJ,OAHAJ,OAAM6D,KAAK8E,IAAK,WACZvI,KAAKiB,KAAK0D,UAAUxC,UAEjBnC,OAKfJ,MAAMsL,KAAOtL,MAAM0L,YAAY,GAG/B1L,MAAM2L,OAAS3L,MAAM0L,YAAY,GAMjC1L,MAAM4L,SAAW,SAAUjD,IAAKzF,OAC5B,MAAOyF,KAAO3I,MAAM4H,YAAYe,KAAOA,IAAIF,QAAQvF,YAAgBlD,MAAMoK,KAAKzB,IAAK,SAAUkD,WACzF,GAAI3I,QAAU2I,UACV,OAAO,IAETzK,QAUVpB,MAAM8L,YAAc,SAAUnD,IAAKzF,OAC/B,MAAOlD,OAAMoK,KAAKzB,IAAK,SAAUkD,UAAWxL,KACxC,GAAI6C,QAAU2I,UACV,MAAOxL,QAUnBL,MAAM+L,YAAc,SAAUhC,OAC1B,GAAI3J,QAIJ,OAHAJ,OAAM6D,KAAKkG,MAAO,SAAUiC,IACxB5L,KAAK4L,KAAM,IAER5L,MAUXJ,MAAMiM,WAAa,SAAUlC,MAAOlI,MAChC,IAAK,GAAIf,GAAI,EAAGA,EAAIiJ,MAAMtJ,OAAQK,IAAK,CACnC,GAAIN,GAAG0L,EAAInC,MAAMjJ,EACjB,KAAKN,EAAIM,EAAGN,EAAI,GAAKqB,KAAKqK,EAAGnC,MAAMvJ,EAAI,IAAM,EAAGA,IAC5CuJ,MAAMvJ,GAAKuJ,MAAMvJ,EAAI,EAEzBuJ,OAAMvJ,GAAK0L,IASnBlM,MAAMmM,YAAc,SAAUC,KAAMC,QAASxK,MACzC,GAAIzB,QAWJ,OAVAJ,OAAM6D,KAAKuI,KAAM,SAAUJ,GAAI3L,KAC3B,GAAIiM,SACJA,OAAMD,SAAWhM,IACbwB,KACAyK,MAAQzK,KAAKyK,MAAON,GAAI3L,MAAQiM,MAEhCrM,EAAEyJ,QAAO,EAAM4C,MAAON,IAE1B5L,KAAKiB,KAAKiL,SAEPlM,MAMXJ,MAAMuM,QAAU,SAAUxC,OACtB,GAAI3J,QAQJ,OAPAJ,OAAM6D,KAAKkG,MAAO,SAAUyC,SACpBxM,MAAM4H,YAAY4E,SAClBpM,KAAOA,KAAKkF,OAAOkH,SAEnBpM,KAAKiB,KAAKmL,WAGXpM,MAQXJ,MAAMyM,MAAQ,SAAUrG,QACpB,GAAIpG,MAAM4H,YAAYxB,QAClBA,OAAO3F,OAAS,MAEhB,KAAK,GAAIK,KAAKsF,cACHA,QAAOtF,IAS1Bd,MAAM0M,oBAAsB,SAAUC,WAClC,MAAOA,WAAY,SAAUxD,EAAGC,GAC5B,MAAOD,GAAE1I,OAAS2I,EAAE3I,QACpB,SAAU0I,EAAGC,GACb,MAAOA,GAAE3I,OAAS0I,EAAE1I,SAQ5BT,MAAM4M,aAAe,SAAU1E,QAC3B,MAAO2E,UAAS3E,SAAaA,OAAS,IAAO,EAAK4E,OAAO5E,QAAU6E,KAqBvE/M,MAAMgN,eAAiB,SAAUC,IAAKC,MAAOC,QAIzC,GAFAD,MAAQA,OAASA,OAAS,EAAIE,KAAKC,MAAMH,OAAS,EAEnC,SAAXC,QAAgC,UAAXA,OAErB,MAAOL,QAAOM,KAAKD,QAAQF,IAAM,IAAMC,OAAS,KAAOA,MAGvD,IAAII,MAAOL,KAAO,EAAI,IACtB,OAAOH,QAAOQ,MAAQF,KAAKC,MAAMD,KAAKG,IAAIN,KAAO,IAAMC,OAAS,KAAOA,SAO/ElN,MAAMwN,gBAAkB,SAAUC,UAC9B,MAAIzN,OAAM0F,cAAc+H,WACpBzN,MAAM6D,KAAK4J,SAAU,SAAUvK,OAC3BlD,MAAMwN,gBAAgBtK,SAEnBgC,OAAOwI,OAAOD,WAEdA,UAUfzN,MAAM2N,OAAS,aAEf3N,MAAM4N,WAAa,SAAU1K,MAAO2K,OAChC,GAAIzN,MAAO8E,OAAOC,OAAOnF,MAAM2N,OAAO1I,UAGtC,OAFA7E,MAAK8C,MAAQA,MACbjD,EAAEyJ,OAAOtJ,KAAMyN,OACR3I,OAAOwI,OAAOtN,OAMzBJ,MAAM8N,MAAQ9N,MAAM4N,WAAW,SAI/B5N,MAAM+N,SAAW/N,MAAM4N,WAAW,YAGlC5N,MAAMgO,OAAShO,MAAM4N,WAAW,UAKhC5N,MAAM2G,SAAW,SAAUkB,OAAQ7D,MAC/B,MAAM6D,kBAAkB7H,OAAM2N,UAGzB3J,MAGE6D,OAAO3E,QAAUc,KAAKd,QAGjClD,MAAMiO,eACFC,MAAc,EACd7I,KAAc,EACd8I,KAAa,GACb1H,UAAa,GACbc,KAAa,GACbhD,MAAa,IAMjBvE,MAAMsE,SAAWtE,MAAM+C,UAAU/C,MAAMiO,cAAe,SAAU/K,MAAO7C,KACnE,MAAOL,OAAM4N,WAAWvN,KAAMmG,SAAUtD,SAE5C,IAAIqD,gBAAiBvG,MAAMsE,SAASmC,UAIpCzG,OAAMoO,SAGNpO,MAAMoO,MAAMC,UAAY,SAAUjI,OAAQjG,QACtCH,MAAMyM,MAAMrG,QACZnG,EAAEyJ,QAAO,EAAMtD,OAAQjG,SAU3BH,MAAMoO,MAAME,QAAU,SAAUC,IAC5B,MAAc,KAAPA,MAAiBC,OAAOD,IAAIE,MAAM,MAQ7CzO,MAAMoO,MAAMM,YAAc,SAAUC,OAAQC,QACxC,MAAkB,KAAXD,OAAgBC,OAAqB,KAAXA,OAAgBD,OAASA,OAAS,IAAMC,QAI7E5O,MAAMoO,MAAMS,gBAAkB,WAC1B,MAAO7O,OAAMe,UAAUgE,WAAWe,KAAK,MAI3C9F,MAAM8O,aAAe,SAAUC,MAC3B,MAAOA,MAAKC,YAAY,MAK5BhP,MAAMoO,MAAMa,cAAgB,SAAUF,MAClC,GAAIG,SAAUlP,MAAM8O,aAAaC,KACjC,OAAOG,cAAiB,GAAKH,KAAKpM,UAAU,EAAGuM,UAKnDlP,MAAMoO,MAAMe,YAAc,SAAUJ,MAChC,GAAIG,SAAUlP,MAAM8O,aAAaC,KACjC,OAAOA,MAAKpM,UAAUuM,QAAU,IAIpClP,MAAM+O,KAAO/O,MAAMoO,MAAMS,gBACzB7O,MAAM0O,YAAc1O,MAAMoO,MAAMM,YAIhC1O,MAAMoP,mBAAqB,WACvBpP,MAAM+F,KAAK,2FAGf/F,MAAMoO,MAAMiB,gBAAkBrP,MAAMoO,MAAMkB,gBAAkBtP,MAAMoP,mBAGlEpP,MAAMoO,MAAMmB,mBAAqB,SAAUhM,KAAMiM,QAASrK,OAAQsK,SAG9D,IAAKA,SAAWlM,KAAKgM,mBAAoB,CACrC,GAAInP,MAAOmD,KAAKgM,mBAAmBC,QACnC,IAAapO,SAAThB,KACA,MAAOA,MAGf,MAAI+E,SAA4B/D,SAAlBmC,KAAKiM,SAERjM,KAAKiM,YAETjM,KAAKiM,UAIhBxP,MAAMoO,MAAMsB,gBAAkB,SAAUnB,GAAID,QAAS7E,MACjD,MAAsB,gBAAT,KAAoC,gBAAT,IAAoB6E,QAAQC,IAAO9E,KAAOzJ,MAAMe,UAAUwN,IAAMA,IAI5GvO,MAAMoO,MAAMuB,eAAiB,SAAUpB,GAAIqB,QACvC,GAAIC,QAASD,QAAUA,OAAOC,OAASD,OAAOC,OAAOC,MAAQ9P,MAAMoO,MAAME,OACzE,OAAOtO,OAAMoO,MAAMsB,gBAAgBnB,GAAIsB,SAI3C7P,MAAMoO,MAAM2B,WAAa,SAAUxM,KAAMgL,GAAIpL,SAAUyM,OAAQI,SAAUC,WAAYC,WACjF,GAAIvP,MAAOX,MAAMoO,MAAMuB,eAAepB,GAAIqB,QACtCO,QAAU,CACVH,YACAG,QAAUH,SAASvP,OACnBE,KAAOqP,SAAS1K,OAAO3E,MAE3B,IAAIyP,QAASjN,WAAanD,MAAM+N,SAAW,EAAI,CAE/C,OADAxK,MAAO2M,UAAU3M,KAAM5C,KAAMwP,QAASP,OAAQQ,QAC1CjN,WAAanD,MAAM+N,UAAY5K,WAAanD,MAAM8N,MAC3CmC,YAAc1M,KAAMA,KAAM5C,KAAMA,MAAQ4C,UAG/CA,KAAK5C,KAAKA,KAAKF,OAAS,IAAM0C,WAKtCnD,MAAMoO,MAAMiC,aAAe,SAAU9M,KAAMgL,GAAIpL,SAAU3B,YAAawO,SAAUC,YAC5E,MAAOjQ,OAAMoO,MAAM2B,WAAWxM,KAAMgL,GAAIpL,SAAU3B,YAAawO,SAAUC,WAAYjQ,MAAMoO,MAAMkC,iBAIrGtQ,MAAMoO,MAAMkC,eAAiB,SAAU/M,KAAM5C,KAAMwP,QAAS3O,YAAa4O,QAGrE,IAAK,GAFDX,SAAUjO,YACVZ,MAAQD,KAAKF,OAAS2P,OACjBtP,EAAI,EAAGA,EAAIF,QAASE,EAAG,CAC5B,IAAKyC,KACD,MAAOA,KAEX,IAAIiM,SAAU7O,KAAKG,EAEfyC,MADA/B,aAAeA,YAAYgO,SACpBhO,YAAYgO,SAEZxP,MAAMoO,MAAMmB,mBAAmBhM,KAAMiM,QAAoB,IAAXY,OAAcX,SAEvEjO,YAAc,KAElB,MAAO+B,OAGXvD,MAAMoO,MAAMmC,UAAY,SAAUhN,KAAMgL,GAAIpL,SAAU3B,YAAawO,UAC/DhQ,MAAMoO,MAAMiC,aAAa9M,KAAMgL,GAAIpL,SAAU3B,YAAawO,UAAU,IAKxEhQ,MAAMoO,MAAMoC,UAAY,SAAUjN,KAAMgL,GAAI/M,YAAawO,UACrD,MAAW,QAAPzB,IAAsBnN,SAAPmN,IAAkC,IAAdA,GAAG9N,OAC/B8C,KAEJvD,MAAMoO,MAAMiC,aAAa9M,KAAMgL,GAAIvO,MAAM+N,SAAUvM,YAAawO,UAAU,IAIrFhQ,MAAMyQ,aAAe,SAAUlN,KAAM5C,KAAMG,GAEvC,IAAK,GADDF,OAAeQ,SAANN,EAAkBH,KAAKF,OAASK,EAAI,EACxCN,EAAI,EAAGA,EAAII,QAASJ,EACzB+C,KAAOA,KAAOA,KAAK5C,KAAKH,IAAMY,MAElC,OAAOmC,OAMXvD,MAAM0Q,kBAAoB,SAAUC,MAChC,MAASA,OAAQA,OAAS3Q,MAAMoO,MAAMwC,kBAAoBD,OAAS3Q,MAAMoO,MAAMyC,iBACrD,gBAAdF,KAAK3M,KAAyB2M,KAAKzN,MAAQ9B,OAAnD,MAGRpB,MAAM8Q,IAAM,SAAUvN,KAAMgL,GAAIpL,SAAUyM,OAAQI,UAC9C,GAAIe,KAAM/Q,MAAM0Q,kBAAkBd,OACtBxO,UAAR2P,IACA/Q,MAAMoO,MAAMiB,gBAAgB9L,KAAMgL,GAAIpL,SAAUyM,OAAQI,UAExDhQ,MAAMoO,MAAMmC,UAAUhN,KAAMgL,GAAIpL,SAAU4N,IAAKf,WAYvDhQ,MAAMmL,IAAM,SAAU5H,KAAMgL,GAAIqB,OAAQI,UACpC,GAAIe,KAAM/Q,MAAM0Q,kBAAkBd,OAClC,OAAexO,UAAR2P,IACH/Q,MAAMoO,MAAMkB,gBAAgB/L,KAAMgL,GAAIqB,OAAQI,UAC5ChQ,MAAMoO,MAAM2B,WAAWxM,KAAMgL,GAAIvO,MAAM+N,SAAUgD,IAAK,MAAM,EAAO/Q,MAAMoO,MAAMkC,iBAGzFtQ,MAAMgR,eAAiB,SAAUjC,KAAMgC,KACnC,GAAIhC,KAEA,MADAgC,KAAMA,KAAO/Q,MAAMwB,YACZxB,MAAMmL,IAAInL,MAAMyB,OAAQsN,MAAO/K,KAAM,cAAed,MAAO6N,OAU1E/Q,MAAMiR,KAAO,SAAUtI,IAAKuI,OAAQ5Q,MAChC,MAAOqI,KAAIuI,QAAQrM,MAAM8D,IAAK3I,MAAMe,UAAUT,QASlDN,MAAMmR,qBAAuB,SAAUC,aAAc9Q,KAAMkB,aACvD,GAAIK,MAAO7B,MAAMgR,eAAeI,aAAc5P,YAC9C,OAAKK,MAGMA,KAAKgD,MAAM,KAAM7E,MAAM4H,YAAYtH,MAAQA,KAAON,MAAMe,UAAUT,WAFzEN,OAAM+F,KAAK,mCAAqCqL,aAAe,0BASvEpR,MAAMqR,uBAAyB,SAAUD,aAAcvP,KAAMkP,KACzDA,IAAMA,KAAO/Q,MAAMwB,YACnBxB,MAAM8Q,IAAI9Q,MAAMyB,OAAQ2P,aAAcvP,MAAOmC,KAAM,cAAed,MAAO6N,OAG7E/Q,MAAMsR,eAAiBtR,MAAMqR,uBAI7BrR,MAAMuR,kBAAoB,SAAUC,UAAWT,KAC3CA,IAAMA,KAAO/Q,MAAMwB,WACnB,IAAIiQ,UAAWzR,MAAMgR,eAAeQ,UAAWT,IAK/C,OAJKU,YACDA,YACAzR,MAAMsR,eAAeE,UAAWC,SAAUV,MAEvCU,UAIXzR,MAAM0R,OAAS1R,MAAMgJ,SACrBhJ,MAAMyH,gBAAkBzH,MAAMgJ,SAK9BhJ,MAAM2R,qBAAuB,WACzB,MAAQvE,MAAKwE,MAAsB,KAAhBxE,KAAKyE,UAAkB9J,SAAS,IAAM,IAG7D,IAAI+J,cAAe9R,MAAM2R,sBAEzB3R,OAAM+R,cAAgBD,YAEtB,IAAIE,YAAa,CAKjBhS,OAAMiS,aAAe,WACjB,MAAOH,cAAgBE,cAK3BhS,MAAMuR,kBAAkB,eAIxBvR,MAAMkS,gBAAkB,IACxBlS,MAAMmS,eACFlH,SACAmH,KAAM,EACNC,OAAQ,EACRC,MAAO,GAGXtS,MAAMuS,oBAGFC,KAAM,EACNC,QAAS,GACTC,UAAW,IAKf1S,MAAM2S,wBAA0B,SAAUC,WAAYC,UAAWC,MAC7D,GAAInS,MAAOiS,WAAWnE,MAAM,KACxBzK,KAAOrD,KAAK,GACZoS,OAAS/S,MAAMmS,cAAcnO,KAOjC,OANe5C,UAAX2R,QACA/S,MAAM+F,KAAK,6CAA+C6M,WAAa,mCAAqC5S,MAAMsL,KAAKtL,MAAMmS,eAAerM,KAAK,MAAQ,eAEzJ+M,WAAwB,IAAXE,QACb/S,MAAM+F,KAAK,qCAAuC6M,WAAa,0BAA4BE,KAAO,iEAGlG9O,KAAMrD,KAAK,GACXyF,OAAQzF,KAAK,KAKrBX,MAAMgT,cAAgB,SAAUxM,SAAUwE,MAAO6H,UAAWC,MACxDtM,SAAWA,UAAY,CACvB,IAAIpG,OACA4K,MAAOA,OAAS,EAChBiI,MAAO,KACPL,WAAY,KACZE,KAAMA,KAEe,iBAAf,UACN1S,KAAK6S,OAASzM,SAEdpG,KAAKwS,WAAa5S,MAAM2S,wBAAwBnM,SAAUqM,UAAWC,KAEzE,IAAII,YAAa9S,KAAKwS,WAAa5S,MAAMmS,cAAc/R,KAAKwS,WAAW5O,MAAQ,CAC/E,IAAmB,IAAfkP,WAAkB,CAClB,GAAI9M,QAAShG,KAAKwS,WAAWxM,QAAU,OACnC+M,SAAWnT,MAAMuS,mBAAmBnM,OACvBhF,UAAb+R,UACAnT,MAAM+F,KAAK,yCAA2CK,OAAS,wCAA0CpG,MAAMsL,KAAKtL,MAAMuS,oBAAoBzM,KAAK,MAAQ,qDAE/J1F,KAAK6S,MAAQC,YAAclT,MAAMkS,gBAAkBiB,UAMvD,MAJmB,QAAf/S,KAAK6S,QACL7S,KAAK6S,OAAS7S,KAAK4K,MAAQ,MAGxB5K,MAGXJ,MAAMoT,eAAiB,SAAUC,QAC7B,MAAOA,QAAOT,WAAcS,OAAOT,WAAWxM,OAASiN,OAAOT,WAAW5O,KAAO,IAAMqP,OAAOT,WAAWxM,OAASiN,OAAOT,WAAW5O,KAASoJ,KAAKwE,MAAMyB,OAAOJ,QAIlKjT,MAAMsT,kBAAoB,SAAUC,KAAMC,MACtC,MAA4B,QAAxBD,KAAK/M,SAASyM,OAA0C,OAAxBO,KAAKhN,SAASyM,MACvCM,KAAK/M,SAASyM,MAAQO,KAAKhN,SAASyM,OAGX,OAAxBM,KAAK/M,SAASyM,QAA2C,OAAxBO,KAAKhN,SAASyM,QAI/DjT,MAAMyT,iBAAmB,SAAU1J,MAAO2J,gBAAiBC,GACvD,GAAIf,YAAa7I,MAAM4J,GAAGnN,SAASoM,WAC/BgB,WAAa5T,MAAMoK,KAAKL,MAAO,SAAUyC,QAASjK,OAClD,MAAOiK,SAAQqH,YAAcjB,WAAWxM,OAAS7D,MAAQnB,WAE7D,IAAIwS,gBACA,OAAO,CACJ,IAAIA,YAAcF,gBACrB,OAAO,CAKP,KAAK,GAHDI,QAA6B,UAApBlB,WAAW5O,KAAmB,EAAI,EAC3CoC,OAASwN,WAAaE,OACtBC,KAAOhK,MAAM4J,GACRzM,MAAQyM,EAAGzM,OAASd,SAAUc,MACnC6C,MAAM7C,OAAS6C,MAAM7C,MAAQ,EAGjC,OADA6C,OAAM3D,QAAU2N,MACT,GAMf/T,MAAMgU,eAAiB,SAAUjK,OAC7B/J,MAAMiM,WAAWlC,MAAO/J,MAAMsT,kBAM9B,KAJA,GAAII,iBAAkB1T,MAAMoK,KAAKL,MAAO,SAAUyC,QAASjK,OACvD,MAAOiK,SAAQhG,SAASoM,YAAwE,IAA1D5S,MAAMmS,cAAc3F,QAAQhG,SAASoM,WAAW5O,MAAczB,MAAQnB,QAC7G2I,MAAMtJ,UAEI,CACT,GAAIiT,kBAAoB3J,MAAMtJ,OAC1B,MAAOsJ,MAGX,KAAK,GADDkK,oBAAqBP,gBAChBC,EAAID,gBAAiBC,EAAI5J,MAAMtJ,SAAUkT,EAAG,CACjD,GAAIO,SAAUlU,MAAMyT,iBAAiB1J,MAAO2J,gBAAiBC,EACzDO,YACER,gBAGV,GAAIA,kBAAoBO,mBAAoB,CACxC,GAAIE,SAAUpK,MAAMqK,MAAMV,gBAC1B1T,OAAM+F,KAAK,iDAAmDoO,QAAQ,GAAG3N,SAASsM,KAAO,IAAKqB,QAAS,0BAA4BnU,MAAMkL,WAAWiJ,QAAS,8BAA8BrO,KAAK,MAC5L,gDAAiDiE,MAAMqK,MAAM,EAAGV,iBAAkB,oEAWlG1T,MAAMqU,qBAAuB,SAAUC,QAASnO,MAC5C,GAAI4D,OAAQ/J,MAAMmM,YAAYmI,QAAS,YAAa,SAAUC,WAAYC,WAAYjS,OAClFtC,EAAEyJ,OAAO6K,WAAYC,YACrBD,WAAW/N,SAAWxG,MAAMgT,cAAcwB,WAAWhO,SAAUjE,OAAO,EAAO4D,OAGjF,OADAnG,OAAMgU,eAAejK,OACdA,OAGX/J,MAAMyU,MAAMC,iBAAmB,SAAUC,SAAUC,MAI/C,MAHyB,gBAAf,WAA4BD,SAASE,cAAiBD,OAC5DD,SAASE,aAAe7U,MAAMiS,gBAE3B0C,SAASE,cAIpB7U,MAAMyU,MAAMK,oBAAsB,SAAUC,aAAcC,aACtDhV,MAAMyU,MAAMC,iBAAiBK,cAC7BC,YAAYH,aAAeE,aAAaF,cAK5C7U,MAAMyU,MAAMQ,cAAgB,SAAUC,WAClC,GAAI9U,QAeJ,OAdAJ,OAAM6D,KAAKqR,UAAW,SAAUC,cAE5B,IAAK,GADDC,UACKtU,EAAI,EAAGA,EAAIqU,aAAa1U,SAAUK,EAAG,CAC1C,GAAIuU,cAAeF,aAAarU,EAC3BuU,cAAaC,eAAkBF,WAChCA,SAAWC,cAGfD,SACAhV,KAAKiB,KAAK+T,UAEVhV,KAAOA,KAAKkF,OAAO6P,gBAGpBnV,MAAMgU,eAAe5T,OAIhCJ,MAAMyU,MAAMc,gBAAkB,SAAUZ,UACpC,GAAIa,cAAeb,SAASc,aAAoC,gBAAf,UAA0Bd,SAAW,KACtF,IAAIa,aAAc,CACd,GAAIE,cAAe1V,MAAMgR,eAAewE,aACnCE,cAGDf,SAAWe,aAFX1V,MAAM+F,KAAK,0BAA4ByP,aAAe,yBAK9D,MAAOb,WAIX3U,MAAM2V,cAAgB,SAAUC,MAC5B,MAAOA,MAAO,2BAA6BA,KAAKC,SAAW,WAAaD,KAAKE,GAAK,uBAGtF9V,MAAMyU,MAAMsB,UAAY,SAAUH,KAAMI,WACpC,MAAOA,WAAY,OAAShW,MAAM2V,cAAcC,OAapD5V,MAAMiW,eAAiB,SAAUC,SAC7BA,QAAUA,WACV,IACIN,MADAzP,KAAO+P,QAAQ/P,MAAQ,cAGvBgQ,SAAW,WACXP,KAAKV,aACLU,KAAKQ,QACLR,KAAKS,mBAULT,KAAKU,YAAc,SAAU3B,SAAUd,UAAWrN,SAAU8O,cAAeiB,YACvE,GAAItS,OAIJ,IAHI2R,KAAKY,WACLxW,MAAM+F,KAAK,gDAAkD6P,KAAKzP,MAEjEwO,SAAL,CAGI3U,MAAM0F,cAAciP,UAAU,KAAU3U,MAAM+I,aAAa4L,YAC3D1Q,OAAS0Q,SACTA,SAAW1Q,OAAO0Q,SAClBd,UAAY5P,OAAO4P,UACnBrN,SAAWvC,OAAOuC,SAClB8O,cAAgBrR,OAAOqR,cACvBiB,WAAatS,OAAOsS,YAEC,gBAAf,YACN5B,UAAYc,WAAYd,UAE5B,IAAImB,IAAKS,YAAcvW,MAAMyU,MAAMC,iBAAiBC,SACpDd,WAAYA,WAAaiC,GACzB7R,OAAShE,EAAEyJ,OAAOzF,YACd4P,UAAWA,UACXc,SAAUA,SACVW,cAAeA,cACfiB,WAAYA,WACZ/P,SAAUxG,MAAMgT,cAAcxM,SAAUoP,KAAKS,gBAAgB5V,QAAQ,EAAO,eAEhFmV,KAAKQ,KAAKN,IAAM7R,MAEhB,IAAIwS,eAAiBb,KAAKV,UAAUrB,WAAa7T,MAAMe,UAAU6U,KAAKV,UAAUrB,WAChF4C,eAAcnB,cAAgB,OAAS,WAAYrR,QAEnD2R,KAAKS,gBAAkBrW,MAAMyU,MAAMQ,cAAcW,KAAKV,aAE1DU,KAAKU,YAAYzR,MAAM,KAAME,WA4EjC,OA1EA6Q,OACIc,QAAS1W,MAAMiS,eACf9L,KAAMA,KACNwQ,QAAST,QAAQS,QACjBd,SAAU,oBACVe,QAAS,WACLhB,KAAKY,WAAY,GAErBF,YAAa,WACTH,SAAStR,MAAM,KAAME,YAOzB8R,eAAgB,SAAUlC,UACtB,GAAKiB,KAAKV,UAAV,CACA,GAAIrB,WAAWiC,GAAI7R,MACO,iBAAf,WACP4P,UAAYc,SACZ1Q,OAAS2R,KAAKV,UAAUrB,WACnB5P,SACD6R,GAAKjC,UACLA,UAAY,OAGU,kBAAf,YACXiC,GAAK9V,MAAMyU,MAAMC,iBAAiBC,UAAU,GACvCmB,IACD9V,MAAM+F,KAAK,gDAAiD4O,SAAU,eAAiBiB,KAAKzP,MAGpG,IAAI2Q,KAAMlB,KAAKQ,KAAKN,IAChBR,cAAgBwB,KAAOA,IAAIxB,aAC/BzB,WAAYA,WAAciD,KAAOA,IAAIjD,WAAciC,SAC5CF,MAAKQ,KAAKN,IACjB7R,OAAS2R,KAAKV,UAAUrB,WACpB5P,SACIqR,cACAtV,MAAMyK,UAAUxG,OAAQ,SAAU8S,SAC9B,MAAOA,SAAQpC,SAASE,eAAiBiB,IAAMiB,QAAQR,aAAeT,KAG1E7R,OAAOiD,QAEW,IAAlBjD,OAAOxD,cACAmV,MAAKV,UAAUrB,YAG9B+B,KAAKS,gBAAkBrW,MAAMyU,MAAMQ,cAAcW,KAAKV,aAG1DjP,KAAM,WACF,GAAIiP,WAAYU,KAAKS,eACrB,IAAKnB,YAAaU,KAAKY,UAAvB,CACIxW,MAAMqE,aAAarE,MAAMsE,SAASC,QAClCvE,MAAM4D,IAAI5D,MAAMsE,SAASC,MAAO,gBAAkB4B,KAAO,eAAiB+O,UAAUzU,OAAS,aAEjG,KAAK,GAAIK,GAAI,EAAGA,EAAIoU,UAAUzU,SAAUK,EAAG,CACvC,GAAIkW,QAAS9B,UAAUpU,EACvBkW,QAAOrC,SAAW3U,MAAMyU,MAAMc,gBAAgByB,OAAOrC,SACrD,IAEIzR,OAFAyR,SAAWqC,OAAOrC,SAClBsC,IAAMtC,SAAS9P,MAAM,KAAME,UAK/B,KAHImR,QAAQgB,aAAeD,OAAQ,GAASrB,KAAKY,aAC7CtT,OAAQ,GAEE9B,SAAV8B,MACA,MAAOA,YAU3BlD,MAAMmX,UAAY,SAAUC,UAAWpB,UAAW1V,MAC9C,GAAI+W,OAAQD,UAAUE,OAAOtB,UACzBqB,QACAA,MAAMpR,KAAKpB,MAAM,KAAM7E,MAAMe,UAAUT,QAK/CN,MAAMyU,MAAM8C,mBAAqB,SAAUF,MAAOnU,MAAO2Q,UAAW2D,SAEhE,GADAA,QAAUA,SAAWxX,MAAMgJ,SACvBhJ,MAAM4H,YAAY1E,OAClB,IAAK,GAAIpC,GAAI,EAAGA,EAAIoC,MAAMzC,SAAUK,EAChCd,MAAMyU,MAAM8C,mBAAmBF,MAAOnU,MAAMpC,GAAI+S,UAAW2D,aAErC,kBAAZ,QAA6C,gBAAZ,OAC/CA,QAAQH,OAAOf,YAAYpT,MAAO2Q,WAC3B3Q,OAA4B,gBAAZ,QACvBsU,QAAQH,OAAOf,YAAYpT,MAAMyR,SAAUd,WAAa3Q,MAAM2Q,UAAW3Q,MAAMsD,SAAUtD,MAAMoS,cAAepS,MAAMqT,aAK5HvW,MAAMyU,MAAMgD,sBAAwB,SAAUnD,SAC1C,OAASA,QAASA,UAGtBtU,MAAM0X,gBAAkB,SAAUC,UAC9B3X,MAAM+F,KAAK,+HAAiI4R,WAIhJ3X,MAAM4X,eAAiB,SAAUhC,KAAM0B,OAAQpC,WAC3ClV,MAAM6D,KAAKqR,UAAW,SAAUhS,MAAO7C,KACnC,GAAIgX,OAAOxD,SACX,IAAI7T,MAAMsI,eAAejI,KACrBgX,MAAQrX,MAAM0X,gBAAgBrX,IAAKuV,MAC9ByB,OACDrX,MAAM+F,KAAK,iCAAmC1F,IAAM,gHAErD,CACH,GAAIwX,QAASxX,IAAIoI,QAAQ,IAErBoP,eACAhE,UAAYxT,IAAIsC,UAAUkV,OAAS,GACnCxX,IAAMA,IAAIsC,UAAU,EAAGkV,SAEtBP,OAAOjX,MACRL,MAAM+F,KAAK,iCAAmC1F,IAAM,4CAExDgX,MAAQC,OAAOjX,KAEnB,GAAI4D,QAASjE,MAAMyU,MAAMgD,sBAAsBvU,MAAO0S,KAAMvV,IAAKwT,WAAW,EAC5E7T,OAAMyU,MAAM8C,mBAAmBF,MAAOpT,OAAOqQ,QAAST,UAAW5P,OAAO6T,iBAKhF9X,MAAM+X,gBAAkB,SAAUC,UAAWC,SAAUrC,MACnD,GACInB,OADAyD,WAAaF,YAAqC,gBAAhB,YAA4BhY,MAAMsI,eAAe0P,WAgBvF,OAdIE,YACKlY,MAAMyU,MAAM0D,aAIb1D,MAAQzU,MAAMyU,MAAM0D,aAAavC,KAAMqC,SAAUD,WAHjDhY,MAAM+F,KAAK,kIACPiS,WAKRvD,MAAQzU,MAAMiW,gBACV9P,KAAMnG,MAAMyU,MAAMsB,UAAUH,KAAMqC,UAClCf,YAA2B,gBAAdc,UACbrB,QAASf,KAAKE,KAGfrB,OAIXzU,MAAMoY,kBAAoB,SAAUxC,KAAMM,SACtClW,MAAM6D,KAAKqS,QAAQoB,OAAQ,SAAUU,UAAWC,UAC5CrC,KAAK0B,OAAOW,UAAYjY,MAAM+X,gBAAgBC,UAAWC,SAAUrC,SAK3E5V,MAAMqY,oBAAsB,SAAUjS,OAAQjG,OAAQE,KAC7B,gBAAV,MACPL,MAAM+F,KAAK,iGAAmG1F,IAAM,SAAUF,OAGlI,IAAImY,eAAgBtY,MAAMsI,eAAejI,MAAQA,IAAIoI,QAAQ,SAC7D,OAAO6P,cAAgBnY,QAAUiG,OAAUpG,MAAMuY,kBAAkBnS,OAAQjG,SAI/EH,MAAMwY,yBAA2B,SAAUC,OAAQC,YAC/C,MAAO,UAAUtS,OAAQjG,QASrB,MARAiG,QAASA,WACLsS,aAAe1Y,MAAM4H,YAAYzH,SAAqC,gBAAnBA,QAAa,QAChEiG,OAAO,IAAMqS,OAAOrS,OAAO,IAAKjG,OAAQ,IAExCH,MAAM6D,KAAK1D,OAAQ,SAAU+U,UAAW7U,KACpC+F,OAAO/F,KAAOoY,OAAOrS,OAAO/F,KAAM6U,UAAW7U,OAG9C+F,SAIfpG,MAAM2Y,6BAA+B,SAAU/C,MAC3C,GAAIgD,UAQJ,OAPA5Y,OAAM6D,KAAK+R,KAAK0B,OAAQ,SAAU7C,MAAOtO,MACrCnG,MAAM6D,KAAK4Q,MAAM4B,gBAAiB,SAAUW,QACpCA,OAAOrC,WAAa3U,MAAMiJ,gBAAiD,yBAA/B+N,OAAOrC,SAASc,YAC5DmD,OAAOvX,MAAM8E,KAAMA,KAAM0N,UAAWmD,OAAOnD,UAAWgF,gBAAiB7Y,MAAMoO,MAAMoC,UAAUoF,KAAKM,QAAQhB,WAAY/O,KAAO,IAAM6Q,OAAOnD,UAAW,EAAG,0BAI7J+E,QAIX5Y,MAAM8Y,OAAS,SAAU/O,OACrB,MAAO/J,OAAMyK,UAAUV,MAAO,SAAUyC,QAAS1L,GAC7C,OAAQ0L,SAAW1L,EAAI,GAAK0L,UAAYzC,MAAMjJ,EAAI,MAI1Dd,MAAMuY,kBAAoB,SAAUnS,OAAQjG,QACxC,MAAOH,OAAMe,UAAUqF,QAAQd,OAAOtF,MAAMe,UAAUZ,UAK1DH,MAAMgG,aAAehG,MAAMiW,gBAAgB9P,KAAM,kBAEjDnG,MAAMgG,aAAasQ,YAAYtW,MAAM6F,YAAa,QAClD7F,MAAMgG,aAAasQ,YAAYtW,MAAMoF,WAAY,MAAO,eAUxDpF,MAAM+Y,gBAAkB,SAAUC,WACH,kBAAhB,WACPhZ,MAAMgG,aAAasQ,YAAY0C,UAAW,QACnCA,eACPhZ,MAAMgG,aAAa6Q,eAAe,QACL,iBAAhB,YACb7W,MAAM+F,KAAK,8DAOnB/F,MAAM6I,qBAAuB,aAO7B7I,MAAMiZ,QAAU,SAAU9S,MACtB,GAAIyP,MAAO1Q,OAAOC,OAAOnF,MAAM6I,qBAAqB5D,UAGpD,OAFA2Q,MAAKC,SAAW1P,KAChByP,KAAKE,GAAK9V,MAAMiS,eACT2D,KAGX,IAAIsD,WAAY,EACZC,iBAEJnZ,OAAMoZ,iBAKNpZ,MAAMqZ,kBAAoB,SAAUC,GAAIC,YACpCA,WAAavZ,MAAMe,UAAUwY,WAC7B,KAAK,GAAIzY,GAAIyY,WAAW9Y,OAAS,EAAGK,GAAK,IAAKA,EAAG,CAC7C,GAAI0Y,WAAYD,WAAWzY,EAC3B,IAAI0Y,YAAcF,GAAGG,UAAUD,WAAY,CACvC,GAAIE,WAAY1Z,MAAMsI,eAAekR,WACjCtD,SAAWwD,UAAY,KAAO1Z,MAAM2Z,YAAYH,gBAChDI,SAAWT,eAAeK,YAAeN,UAAY,CACzDI,IAAGO,SAAWzM,KAAK0M,IAAIR,GAAGO,SAAUD,UACpCN,GAAGG,UAAUD,YAAa,EAC1BF,GAAGS,WAAW1Y,KAAKmY,UAEnB,KAAK,GADDQ,aAAcha,MAAMe,UAAUmV,QAAQqD,YACjC/Y,EAAIwZ,YAAYvZ,OAAS,EAAGD,GAAK,IAAKA,EAE3CR,MAAMqZ,kBAAkBC,GAAIU,YAAYxZ,KAIpD,MAAO8Y,KAIXtZ,MAAMia,sBAAwB,SAAUC,YAAaX,YACjD,GAAIY,cACAN,SAAU,EACVE,cACAN,aAMJ,OAFAzZ,OAAMqZ,kBAAkBc,aAAcD,aAAa5U,OAAOtF,MAAMe,UAAUwY,cAC1EY,YAAYJ,WAAWpW,UAChBwW,aAGXna,MAAMoa,SAAW,SAAUlE,QAASsD,WAChC,SAAQtD,UAAYA,QAAQqD,aAAqBvZ,MAAM4L,SAASsK,QAAQqD,WAAYC,YAIxFxZ,MAAMqa,aAAe,SAAUC,SAAUJ,YAAaX,YAClD,GAAIY,aAAcna,MAAMia,sBAAsBC,YAAaX,YAGvDgB,UAAYva,MAAM+C,UAAUoX,YAAYJ,WAAY/Z,MAAM2Z,YAAa3Z,MAAMyJ,KACjFzJ,OAAMyK,UAAU8P,UAAW,SAAUrE,SACjC,OAAQA,SAGZ,KAAK,GADDsE,gBACK1Z,EAAI,EAAGA,EAAIyZ,UAAU9Z,SAAUK,EAChCyZ,UAAUzZ,IAAMyZ,UAAUzZ,GAAG0Z,cAC7BA,YAAcva,EAAEyJ,QAAO,EAAM8Q,YAAaD,UAAUzZ,GAAG0Z,aAG/DD,YAAaC,gBAAiBlV,OAAOiV,UACrC,IAAIE,gBAAiBza,MAAM0a,MAAM7V,MAAM,KAAM0V,UAG7C,OAFAE,gBAAelB,WAAaY,YAAYJ,WACxC/Z,MAAMwN,gBAAgBiN,iBACdH,SAAUG,eAAgBZ,SAAUM,YAAYN,WAG5D7Z,MAAM2a,uBAGN3a,MAAM4a,gBAAkB,SAAUV,YAAaX,YAC3C,MAAOW,aAAc,IAAMX,WAAWzT,KAAK,MAK/C9F,MAAM6a,kBAAoB,SAAUX,YAAaX,YAC7CA,WAAavZ,MAAMe,UAAUwY,WAC7B,IAAIlZ,KAAML,MAAM4a,gBAAgBV,YAAaX,YACzCkB,eAAiBza,MAAM2a,oBAAoBta,IAC/C,IAAIoa,eAAgB,CAGhB,IAAK,GAFDZ,UAAW,EACXiB,aAAeL,eAAeH,SAASf,eAClCzY,EAAI,EAAGA,EAAIga,aAAara,SAAUK,EACvC+Y,SAAWzM,KAAK0M,IAAID,SAAUV,eAAe2B,aAAaha,KAAO,EAEjE+Y,UAAWY,eAAeZ,WACtB7Z,MAAMqE,aAAarE,MAAMsE,SAASC,QAClCvE,MAAM4D,IAAI5D,MAAMsE,SAASC,MAAO,gCAAkC2V,YAAc,oBAAqBY,cAEzGL,eAAiB,MAGzB,IAAKA,eAAgB,CACjB,GAAIH,UAAWta,MAAM2Z,YAAYO,YACjC,KAAKI,SACD,MAAOA,SAEXG,gBAAiBza,MAAM2a,oBAAoBta,KAAOL,MAAMqa,aAAaC,SAAUJ,YAAaX,YAEhG,MAAOkB,gBAAeH,UAW1Bta,MAAM+a,qBAAuB,SAAUjE,IAAKzW,KACxC,GAAIyW,KAAO9W,MAAMyF,YAAYqR,KAAM,CAC/B,GAAI1W,QAGJ,OAFAA,MAAKC,MAAwB,gBAAV,MAAwC,MAAlByW,IAAItO,OAAO,GAAa,WAAa,SAAWsO,IACzF1W,KAAKE,KAAON,MAAM+N,SACX3N,KAEP,MAAO0W,MAOf9W,MAAMgb,kBAAoB,SAAUC,cAAe/E,SAC/CA,QAAQhB,UAAYlV,MAAM+C,UAAUmT,QAAQhB,UAAW,SAAUjR,QAC7D,GAAI7D,MAAOJ,MAAMe,UAAUkD,OAC3B,OAAOjE,OAAM+C,UAAU3C,KAAM,SAAU8a,QAGnC,MAFAA,QAASlb,MAAM+a,qBAAqBG,OAAQ;AAC5CA,OAAOrC,gBAAkBoC,cAClBC,WAGfhF,QAAQiF,SAAWnb,MAAM+C,UAAUmT,QAAQiF,SAAU,SAAUlX,QAK3D,MAJAA,QAASjE,MAAM+a,qBAAqB9W,QAChCA,SACAA,OAAO4U,gBAAkBoC,eAEtBhX,UAKfjE,MAAM2Z,YAAc,SAAUsB,eAC1B,GAAIG,OAAQpb,MAAMoZ,cAAc6B,cAChC,OAAOG,QAASA,MAAMlF,SAI1BlW,MAAMqb,oBAAsB,SAAUJ,cAAe/E,SACjDlW,MAAM+D,aAAa,sBAAuB,uEACrCkX,cAAeA,cAAe/E,QAASA,SAC5C,IAAIoF,aAActb,MAAMub,cAAgBvb,MAAMub,cAAcrF,SAAWlW,MAAMyJ,KAAKyM,QAClFlW,OAAMgb,kBAAkBC,cAAeK,YACvC,IAAIE,YAAaxb,MAAMyb,eAAiBzb,MAAMyb,cAAc,EAC5Dzb,OAAMoZ,cAAc6B,gBAChB/E,QAASoF,YACTE,WAAYA,YAEhBrC,eAAe8B,eAAiB/B,YAChClZ,MAAMwE,eAIVxE,MAAM0b,gBAAkB,SAAUxB,YAAaI,SAAU/X,MAAOoZ,WAE5D,IAAK,GADDC,gBAAiB5b,MAAMe,UAAU4a,UAAUpC,YACtCzY,EAAI,EAAGA,EAAI8a,eAAenb,SAAUK,EACzC,IAAKd,MAAMoa,SAASE,SAAUsB,eAAe9a,IAAO,MAIxD,KAAK,GAFD+a,WAA4C,kBAAzBF,WAAmB,UAAmBA,UAAUE,UAAY7b,MAAMgR,eAAe2K,UAAUE,WAC9GvQ,KAAOuQ,UAAUvB,cACZ9Z,EAAI,EAAGA,EAAI8K,KAAK7K,SAAUD,EAC/BR,MAAM2J,UAAUpH,MAAO+I,KAAK9K,GAAI0Z,cAcxCla,MAAM8b,cAAgB,SAAUC,UAAWJ,WACvC,GAAIpZ,SACJ,KAAK,GAAI2X,eAAela,OAAMoZ,cAAe,CACzC,GAAIkB,UAAWta,MAAM6a,kBAAkBX,YACvCla,OAAM0b,gBAAgBxB,YAAaI,SAAU/X,MAAOoZ,WAExD,MAAOpZ,QASXvC,MAAMsa,SAAW,SAAUW,cAAe/E,SACtC,GAAgB9U,SAAZ8U,QACA,MAAOlW,OAAM6a,kBAAkBI,cAG3B/E,UAAWA,QAAQA,SACnBlW,MAAM+F,KAAK,2CAA6CkV,cACpD,6GAAgH/E,SAExHlW,MAAMqb,oBAAoBJ,cAAe/E,QACzC,IAAI8F,gBAAiBhc,MAAM6a,kBAAkBI,cACxCjb,OAAMoa,SAAS4B,eAAgB,mBAChChc,MAAMic,qBAAqBhB,gBAKvCjb,MAAMic,qBAAuB,SAAUhB,eACnC,GAAIiB,SAAU,WACV,GAAI5B,UAAWta,MAAM6a,kBAAkBI,cACvC,IAAKX,SAASf,YAA6C,IAA/Be,SAASf,WAAW9Y,OAEzC,CAAA,GAAK6Z,SAAS6B,aAiBjB,MAAOnc,OAAMoc,cAAcnB,cAAelW,UAf1C,KAAK,GADDsX,gBACKvb,EAAI,EAAGA,EAAIwZ,SAASf,WAAW9Y,SAAUK,EAAG,CACjD,GAAI0Y,WAAYc,SAASf,WAAWzY,GAChC6Y,YAAc3Z,MAAM2Z,YAAYH,UAC/BG,cACD0C,YAAYhb,KAAKmY,WAGE,IAAvB6C,YAAY5b,OACZT,MAAM+F,KAAK,0CAA4CkV,cAAgB,gDAEvEjb,MAAM+F,KAAK,8CAAgDkV,cAAgB,6DAC1EoB,YAAYvW,KAAK,MAAQ,uMAd9B9F,OAAM+F,KAAK,0CAA4CkV,cAAgB,gDAqB3ExJ,SAAWzR,MAAMgR,eAAeiK,cAChCxJ,WACAxR,EAAEyJ,OAAOwS,QAASzK,UAEtBzR,MAAMsR,eAAe2J,cAAeiB,UAGxClc,MAAMsc,YAActc,MAAMwN,oBAE1BxN,MAAMuc,iBAAmB,SAAUC,QAC/B,OAAQA,OAASA,OAAO,KAAOxc,MAAMsc,cAAgBtc,MAAMsc,aAI/Dtc,MAAMyc,mBAAqB,SAAUjC,aACjC,GAAIkC,aAAeC,iBACfvc,MAAQsc,SAAUA,SAAUC,cAAeA,cAE/C,OAAKnC,cAGLxa,MAAM6D,KAAK2W,YAAa,SAAUtX,MAAO7C,KACrC,GAAIgT,WAAauJ,SAAU,CAC3B,IAAsB,kBAAZ,OACNvJ,OAAOxR,KAAOqB,UAEb,IAAsB,gBAAZ,OACXmQ,OAASnQ,UAER,IAAKlD,MAAM6c,0BAA0B3Z,OAQtClD,MAAM8Q,IAAI6L,cAAetc,IAAK,kBAAoB6C,OAClD9C,KAAK0c,aAAc,EACnBF,SAAU,MARV,KAAK,GADDnO,OAAQvL,MAAMuL,MAAM,WACf3N,EAAI,EAAGA,EAAI2N,MAAMhO,SAAUK,EAChCuS,OAAO5E,MAAM3N,KAAM,CASvB8b,UACA5c,MAAM8Q,IAAI4L,SAAU1c,MAAM0O,YAAYrO,IAAK,KAAMgT,UAGlDjT,MA1BIA,MAgCfJ,MAAM6c,0BAA4B,SAAUL,QACxC,MAA0B,gBAAb,SACRA,OAAO/T,QAAQ,YAAgB,2BAA2BsU,KAAKP,SAIxExc,MAAMgd,aAAe,SAAUC,WAAY9b,WAAYX,EAAGS,QAASic,UAAWpc,EAAGH,MAC7E,GAAIP,MAAO6c,WAEPE,gBAAkBnd,MAAMyF,YAAYwX,WAkBxC,OAhBmB7b,UAAfD,aACK+b,UAAUrb,MAAuB,OAAfV,aAAuBnB,MAAM0F,cAAcvE,aAAgB+b,UAAUE,SAOxFnc,QAAQT,GAAKY,OAEThB,KADA8c,UAAUrb,KACHqb,UAAUrb,KAAKmG,KAAK,KAAMiV,WAAY9b,WAAYR,KAAKG,EAAI,GAAIH,KAAMG,GAErEK,YAVPgc,kBACA/c,KAAO6c,WAAajd,MAAMqJ,eAAelI,cAa9Cf,MAyBXJ,MAAMqd,mBAAqB,SAAUjX,OAAQtF,EAAGH,KAAMM,QAASuZ,YAAatE,SAExE,IAAK,GADDoH,YAAatd,MAAMuc,iBAAiB/B,aAC/Bha,EAAIS,QAAQR,OAAS,EAAGD,GAAK,IAAKA,EAAG,CAC1C,GAAIL,QAASc,QAAQT,EASrB,IAAeY,SAAXjB,SACAH,MAAM6D,KAAK1D,OAAQ,SAAUod,UAAWpX,MACpC,GAAIqX,aAAcxd,MAAMyd,iBAAiBjD,YAAarU,KAKhDA,QAAQC,WAAY8P,QAAQwH,eAAiCtc,SAAhBoc,aAA8Bxd,MAAMyF,YAAYW,OAAOD,UACtGxF,KAAKG,GAAKqF,KACV+P,QAAQyH,SAASvX,OAAQD,KAAMrF,EAAI,EAAGH,KAAMM,QAASuZ,gBAGzD8C,WAAWM,SACX,MAIZ,MAAOxX,SAKXpG,MAAM6d,mBAAqB3Y,OAAOwI,QAAQoQ,6BAA+B,IAMzE9d,MAAMwJ,yBAA2B,GAGjCxJ,MAAM+d,kBAAoB,SAAU7H,SAChC,GAAIyH,UAAW,SAAUvX,OAAQD,KAAMrF,EAAGH,KAAMM,QAASub,QAIrD,GAHI1b,EAAId,MAAMwJ,0BACVxJ,MAAM+F,KAAK,4DAA6DpF,KAAM,aAAeG,EAAG,+EAEhGd,MAAMyF,YAAYW,QAAtB,CAGIpG,MAAMge,WACNhe,MAAMie,QAAQC,UAAU7c,KAAKrB,MAAM+O,KAAKpO,KAAKyT,MAAM,EAAGtT,IAG1D,IAAIqd,UACJ,IAAIhY,OAAQC,SAER,GADA+X,UAAY/X,OAAOD,OACd+P,QAAQwH,cACT,MAAOS,eAIP/X,UAAWpG,MAAM6d,qBAGjBzX,OAAOD,MAAQnG,MAAM6d,mBAGbzc,UAAZH,UACAN,KAAOX,MAAMe,UAAUJ,MACvBM,QAAUD,kBAAkBkV,QAAQjV,QAASN,KAAMG,EAAI,EAAGoV,QAAQhV,kBAClEsb,OAAS9b,iBAAiBwV,QAAQsE,YAAa7Z,KAAMG,EAAI,EAAGd,MAAMyd,kBAEtE,IAGIW,OAAOxd,MAAOyd,IAHdC,gBAAkBte,MAAMyd,iBAAiBjB,OAAQrW,MACjD+W,UAAYld,MAAMuc,iBAAiB+B,gBAGnCpB,WAAUU,SACVQ,MAAQ,EAAInd,QAAQR,OAAQG,MAAQ,EAAGyd,SAGvCD,MAAQ,EAAGxd,MAAQK,QAAQR,OAAS,EAAG4d,IAAM,EAKjD,KAAK,GAFDpB,YADAsB,cAGK/d,EAAI4d,MAAO5d,GAAKI,QAASJ,EAAG,CACjC,GAAI0L,GAAImS,IAAM7d,EACVW,WAAa+U,QAAQhV,iBAAiBgL,GAAGjL,QAAQiL,GAAI/F,KAAMrF,EAAGH,KAClE,IAAmBS,SAAfD,aACKnB,MAAMyF,YAAYtE,cACnBod,WAAWrS,GAAK/K,YAEFC,SAAd+c,WAAyB,CACzB,GAAIE,SAAY,CACZpB,WAAa7W,OAAOD,MAAQhF,UAC5B,OAIA8b,WAAajd,MAAMgd,aAAaC,WAAY9b,WAAYX,EAAG+d,WAAYrB,UAAWpc,EAAGH,KAAMuV,SACvF9P,SAAWpG,MAAM6d,qBACjBzX,OAAOD,MAAQ8W,aAiBnC,MAXkB7b,UAAd+c,YACAlB,WAAakB,WAEbI,WAAW9d,OAAS,GAChBT,MAAM0F,cAAcuX,aACpBjd,MAAMqd,mBAAmBJ,WAAYnc,EAAGH,KAAM4d,WAAYD,gBAAiBpI,SAGjE9U,SAAd+c,WAAiD,IAAtBI,WAAW9d,cAC/B2F,QAAOD,MAEX8W,YAGX,OADA/G,SAAQyH,SAAWA,SACZA,UAIX3d,MAAMwe,cAAgB,SAAUjb,KAAMkb,SAAUd,UAC5Cc,SAAWze,MAAMe,UAAU0d,SAC3B,KAAK,GAAI3d,GAAI,EAAGA,EAAI2d,SAAShe,SAAUK,EAAG,CACtC,IAAKyC,KACD,MAEJA,MAAOoa,SAASpa,KAAMkb,SAAS3d,GAAIA,EAAI,EAAG2d,UAE9C,MAAOlb,OAKXvD,MAAMyd,iBAAmB,SAAUtd,OAAQue,KACvC,MAAQve,QAAqBA,OAAOue,KAAnBtd,QAqBrBpB,MAAM0a,MAAQ,SAAU8B,QACpB,GAAIvb,SAAU0d,MAAM1Z,UAAUmP,MAAMpM,KAAKjD,UAAW,GAChD6Z,SAAW5e,MAAMyc,mBAAmBD,QAAQE,SAC5CxG,QAAUlW,MAAM6e,iBAAiBD,SAAU3d,WAE/C,OADAiV,SAAQ4I,UACD5I,QAAQ9P,QAInBpG,MAAM+e,kBAAoB,SAAU5e,OAAQ6e,YACxC,GAAIC,QACA7Y,OAAQjG,OACR+e,QAAQ,EACRvB,SAAU3d,MAAMyd,iBAChBqB,QAAS9e,MAAMgJ,SACfgW,WAAYA,WACZxY,SAAUxG,MAAMmf,iBAAiBH,YAErC,OAAOC,QAIXjf,MAAM6e,iBAAmB,SAAUrC,OAAQvb,QAASme,aAEhD,GAAIlJ,UACAsE,YAAagC,OACbvb,QAASA,QAab,OAXAiV,SAAUjW,EAAEyJ,OAAOwM,QAASkJ,aAC5BlJ,QAAQ9P,OAAS8P,QAAQ9P,QAAUpG,MAAMqJ,eAAe6M,QAAQjV,QAAQ,IACxEiV,QAAQhV,iBAAmBgV,QAAQhV,kBAAoBlB,MAAM2K,SAASuL,QAAQjV,QAAQR,OAAQT,MAAMyd,kBACpGvH,QAAQ4I,QAAU,WAId5I,QAAQwH,eAAgB,EACxB1d,MAAMqd,mBAAmBnH,QAAQ9P,OAAQ,KAAO8P,QAAQjV,QAASiV,QAAQsE,YAAatE,UAE1FlW,MAAM+d,kBAAkB7H,SACjBA,SAIXlW,MAAMqf,iBAAmB,SAAUnJ,QAASoJ,UACxCtf,MAAMkG,OAAO,gCAAiCoZ,UAAW,cAAe,UACxE,IAAIC,WAAYvf,MAAMgR,eAAesO,SAASE,YAC9C,OAAOD,WAAUvX,KAAK,KAAMkO,QAASoJ,SAAS1P,SAIlD5P,MAAMyf,gBAAkB,SAAUC,YAAaV,YAC3C,MAAOhf,OAAMyK,UAAUzK,MAAMe,UAAU2e,aAAc,SAAUT,OAAS,MAAOA,OAAMD,aAAeA,cAIxGhf,MAAM2f,uBAAyB,SAAUD,YAAaL,iBAAkBO,aACpE5f,MAAM6D,KAAK+b,YAAa,SAAUZ,YAC9B,GAAIa,QAAS7f,MAAMyf,gBAAgBC,YAAaV,WAChDhf,OAAM6D,KAAKgc,OAAQ,SAAUZ,OACzB,GAAI9e,QAAS8e,MAAM9e,OAAS,SAAW,QACvC8e,OAAMA,MAAMC,QAAqB,WAAX/e,OAAsB,SAAW,UAAYH,MAAMqf,iBAAiBJ,MAAM9e,QAASkf,uBAMrHrf,MAAM8f,6BAA+B,SAAUJ,aAC3C,GAAIK,eACJ/f,OAAMyK,UAAUiV,YAAa,SAAUM,YACnC,GAAIC,IAAKD,WAAWnM,SACpB,IAAIoM,GAAI,CACJ,GAAIF,YAAYE,KAAOF,YAAYE,MAAQD,WAAWE,YAAYpK,GAC9D,OAAO,CAEPiK,aAAYE,IAAMD,WAAWE,YAAYpK,OAOzD9V,MAAMmgB,uBAAyBngB,MAAMgJ,SACrChJ,MAAMogB,yBAA2BpgB,MAAMgJ,SACvChJ,MAAMqgB,yBAA2BrgB,MAAMgJ,SAGvChJ,MAAMmf,kBACF7E,SAAoB,IACpBgG,kBAAoB,IACpBC,mBAAoB,IACpBC,KAAoB,IACpBC,aAAoB,KAKxBzgB,MAAMoO,MAAMsS,mBAAqB,SAAUtS,MAAOuS,SAC9C,GAAIhgB,MAAOggB,QAAQhgB,IACnB,IAAoB,IAAhBA,KAAKF,OACgB,QAAjBkgB,QAAQ3c,KACR/D,EAAEyJ,QAAO,EAAM0E,MAAOuS,QAAQzd,OAE9BlD,MAAMyM,MAAM2B,WAEb,IAAqB,QAAjBuS,QAAQ3c,KACfhE,MAAMoO,MAAMmC,UAAUnC,MAAOuS,QAAQhgB,KAAMggB,QAAQzd,WAChD,CACH,IAAK,GAAIpC,GAAI,EAAGA,EAAIH,KAAKF,OAAS,IAAKK,EAEnC,GADAsN,MAAQA,MAAMzN,KAAKG,KACdsN,MACD,MAGR,IAAIgE,MAAOzR,KAAKA,KAAKF,OAAS,SACvB2N,OAAMgE,QASrBpS,MAAM4gB,aAAe,SAAUxa,OAAQzF,MAC/ByF,QACApG,MAAMoO,MAAMsS,mBAAmBta,QAASpC,KAAM,SAAUrD,KAAMA,QAetEX,MAAM6gB,sBAAwB,SAAUjL,KAAMqF,cAAemE,YAAa0B,cAkDtE,QAASC,sBAELvG,YAAcxa,MAAMwe,cAActI,QAAS,cAAe8K,aAAarD,UACvEnD,YAAcva,EAAEyJ,UAAW1J,MAAMihB,gBAAiBzG,aAClD0G,eAAiBlhB,MAAMyc,mBAAmBjC,aAG1Cva,EAAEyJ,QAAO,EAAMyX,kBAAmBD,eAAexE,UAxDrD,GAAI/C,aAAc3Z,MAAM2Z,YAAYsB,eAChCX,SAAWta,MAAM6a,kBAAkBI,cAAetB,aAAeA,YAAYJ,WAAa,KAAOuH,aAAavH,YAC9G4H,qBAEAzB,cAGAA,aADA1f,MAAMohB,uBACQ1B,YAAYpa,OAAOtF,MAAMohB,uBAAuBD,kBAAmB7G,SAAU8E,YAAaxJ,OAG1F8J,YAAYpa,QAAQtF,MAAM+e,kBAAkBzE,SAAU,YAClCta,MAAM+e,kBAAkBK,YAAa,SAE3E,IAAIlJ,YACAhV,oBAAuBD,WACvBogB,kBACAjb,OAAQ8P,QACRhV,iBAAkBA,kBAIlBogB,aAAe,WACfthB,MAAM6D,KAAK6b,YAAa,SAAUT,OAC1Bjf,MAAMyF,YAAYwZ,MAAMzY,YACxByY,MAAMzY,SAAWxG,MAAMgT,cAAciM,MAAMzY,SAAU,GAAG,EAAO,2BAGvExG,MAAMgU,eAAe0L,aACrB1f,MAAM8f,6BAA6BJ,aACnCxe,iBAAiBT,OAAS,EAC1BQ,QAAQR,OAAS,EACjBT,MAAM6D,KAAK6b,YAAa,SAAUT,OAC9B/d,iBAAiBG,KAAK4d,MAAMtB,UAC5B1c,QAAQI,KAAK4d,MAAM7Y,UAG3Bkb,eACA,IAAIN,cAAehhB,MAAM6e,iBAAiBsC,kBAAmBlgB,QAASogB,iBACtEL,cAAatB,YAAcA,YAC3BsB,aAAaM,aAAeA,aAC5BN,aAAaJ,aAAe,SAAUjgB,MAClC,IAAK,GAAIG,GAAI,EAAGA,EAAI4e,YAAYjf,SAAUK,EACtCd,MAAM4gB,aAAalB,YAAY5e,GAAGsF,OAAQzF,KAE9CX,OAAM4gB,aAAaS,iBAAiBjb,OAAQzF,MAGhD,IAAIugB,gBACA1G,WAUJuG,sBACAC,aAAaD,mBAAqBA,mBAE9BG,eAAepE,cACX9c,MAAMuhB,qBACN7B,YAAYre,KAAKrB,MAAMuhB,qBACnBrL,QAASgL,eAAevE,cACxBqC,WAAY,oBACZxY,SAAUxG,MAAMmf,iBAAiBmB,mBAClC1K,UACH0L,gBAGAthB,MAAM+F,KAAK,8BAA+ByU,YAAa,kBAAmB5E,KAAM,mCAGxFA,KAAKM,QAAUA,QACflW,MAAMwe,cAActI,QAAS,aAAc8K,aAAarD,UAExD3d,MAAMmgB,uBAAuBvK,KAAMM,QAAS8K,cAE5ChhB,MAAMogB,yBAAyBxK,KAAMwJ,aAAeA,YAAYoC,YAEhE,IAAInC,kBAAmBrf,MAAMwe,cAActI,QAAS,mBAAoB8K,aAAarD,SAUrF,OATI0B,oBACArf,MAAM2f,uBAAuBD,YAAaL,kBAAmB,OAAQ,uBACrEiC,gBAGCD,iBAAiBjb,OAAOoU,aACzBuG,qBAGGC,cAOXhhB,MAAMsa,SAAS,qBAYfta,MAAMyhB,qBAAuB,SAAUtb,KAAMub,MACzC,GAAIpH,UAAWta,MAAMsa,SAASnU,KACzBmU,WAAaA,SAASqH,aAAgB3hB,MAAMoa,SAASE,SAAU,mBAChEta,MAAM+F,KAAK,uBAAyBI,KAChC,6DAA8DmU,SAEtE,IAAIha,QAIJ,OAHAN,OAAM6D,KAAKyW,SAASqH,YAAa,SAAUze,MAAO7C,KAC9CC,KAAK4C,OAASwe,KAAKrhB,OAEhBL,MAAMmR,qBAAqBhL,KAAM7F,OAG5CN,MAAM4hB,8BAAgC,6BAEtC5hB,MAAM6hB,qBAAuB,SAAUzb,OAAQjG,OAAQE,KACnD,GAAIwT,WAAY1T,OAAO0T,WAAaxT,KAAOL,MAAM4hB,8BAAgC5hB,MAAMiS,cACvF9R,QAAO0T,UAAYA,UACnBzN,OAAOyN,WAAa5T,EAAEyJ,QAAO,KAAUtD,OAAOyN,WAAY1T,SAG9DH,MAAM8hB,wBAA0B,SAAU1b,OAAQjG,QAE9C,GADAiG,OAASA,WACLpG,MAAM4H,YAAYzH,QAClB,IAAK,GAAIW,GAAI,EAAGA,EAAIX,OAAOM,SAAUK,EACjCd,MAAM6hB,qBAAqBzb,OAAQjG,OAAOW,QAEb,gBAAnBX,QAAa,OAC3BH,MAAM6hB,qBAAqBzb,OAAQjG,QAEnCH,MAAM6D,KAAK1D,OAAQ,SAAU4hB,UAAW1hB,KACpCL,MAAM6hB,qBAAqBzb,OAAQ2b,UAAW1hB,MAGtD,OAAO+F,SAGXpG,MAAMgiB,aAAe,aACrBhiB,MAAMgiB,aAAa/c,aAGnBjF,MAAMiiB,mBAAqB,SAAU7b,OAAQjG,QAYzC,MAXAiG,QAASA,WACTpG,MAAM6D,KAAK1D,OAAQ,SAAU4hB,UAAW1hB,KAC/B+F,OAAO/F,OACR+F,OAAO/F,KAAO,GAAIL,OAAMgiB,cAExBD,oBAAqB/hB,OAAMgiB,aAC3B5b,OAAO/F,KAAKgB,KAAKwD,MAAMuB,OAAO/F,KAAM0hB,WACf3gB,SAAd2gB,WACP3b,OAAO/F,KAAKgB,KAAK0gB,aAGlB3b,QAGXpG,MAAMkiB,kBAAoBliB,MAAM+L,aAAa,OAAQ,WAAY,WAAY,OAAQ,SAAU,aAAc,UAG7G/L,MAAMmiB,oBAAsB,SAAU/b,OAAQjG,QAsB1C,MArBAiG,QAASA,WACTpG,MAAM6D,KAAK1D,OAAQ,SAAUiiB,WAAYjc,MACrC,IAAKic,WAED,YADAhc,OAAOD,MAAQic,WAGfA,YAAapiB,MAAM+a,qBAAqBqH,WAE5C,IAAIC,MAAOjc,OAAOD,KACbkc,QACDA,KAAOjc,OAAOD,SAElB,KAAK,GAAI9F,OAAOL,OAAMkiB,kBAClB,GAAI7hB,MAAO+hB,YACP,IAAK,GAAIE,QAAQtiB,OAAMkiB,kBACnBG,KAAKC,MAAQlhB,MAIzBnB,GAAEyJ,OAAO2Y,KAAMD,cAEZhc,QAGXpG,MAAMihB,iBACF1H,WAAYvZ,MAAMuY,kBAClBgK,kBAAmBviB,MAAM8hB,wBACzBzb,SACImc,UAAU,EACV3gB,KAAM7B,MAAMiiB,oBAEhB9G,UACIqH,UAAU,EACV3gB,KAAM7B,MAAMmiB,qBAEhB9C,iBAAkB,UAClBnK,UAAWlV,MAAMwY,yBAAyBxY,MAAMqY,sBAGpDrY,MAAMsa,SAAS,mBACX6B,aAAc,4BACd3B,YAAaxa,MAAMihB,gBACnBU,aACIzL,QAAS,GAEboB,QACImL,SAAc,KACdC,UAAc,KACdC,aAAc,QAItB3iB,MAAMsa,SAAS,2BACXf,YAAa,qBAOjBvZ,MAAM4iB,gBAAkB,SAAU/M,UAC9B,GAAIlV,MAAOX,MAAMoO,MAAME,QAAQuH,SAC/B,OAAOlV,MAAKA,KAAKF,OAAS,IAO9BT,MAAMsa,SAAS,mBACXf,YAAa,qBAcjBvZ,MAAM6iB,oBAAsB,SAAU1c,KAAMiZ,YAAa0B,aAAcgC,UACnE,GAAIlN,MAAO5V,MAAMiZ,QAAQ9S,KACzByP,MAAKmN,gBAAkB,eACvBjC,aAAeA,eAAiBvH,WAAY,mBAE5C3D,KAAKgB,QAAU5W,MAAMgjB,gBAAgBpN,KACrC,IAAIoL,cAAehhB,MAAM6gB,sBAAsBjL,KAAMzP,KAAMiZ,YAAa0B,aACxEE,cAAaiC,YAAc5c,SAAU+H,OAAO,EAAMsK,YAAY,GAC9D,IAAIxC,SAAUN,KAAKM,OACnBN,MAAK0B,WAEJwL,UAAY9iB,MAAMgJ,UAAU4M,KAAMM,QAAS8K,aAAarD,UACzD3d,MAAMqgB,yBAAyBzK,KAAMoL,aAIrC,KAAK,GAAIlgB,GAAI,EAAGA,EAAIkgB,aAAatB,YAAYjf,SAAUK,EACnDkgB,aAAatB,YAAY5e,GAAGge,SAQhC,OANAkC,cAAalC,gBACN5I,SAAQsE,YAEfxa,MAAMoY,kBAAkBxC,KAAMM,SAC9BlW,MAAM4X,eAAehC,KAAMA,KAAK0B,OAAQpB,QAAQhB,WAEzCU,MAGX5V,MAAMkjB,mBAAqBljB,MAAMgJ,SAGjChJ,MAAMgjB,gBAAkB,SAAUpN,MAC9B,MAAO,YACH5V,MAAMmjB,UAAUvN,MAChB5V,MAAMmX,UAAUvB,KAAM,gBAAiBA,KAAM,GAAI,SAMzD5V,MAAMojB,YAAc,SAAUxN,MAC1B,MAAgC,cAAzBA,KAAKmN,iBAIhB/iB,MAAMmjB,UAAY,SAAUvN,KAAMzP,KAAMkd,QACpCrjB,MAAMmX,UAAUvB,KAAM,aAAcA,KAAMzP,MAAQ,GAAIkd,SACtDzN,KAAKmN,gBAAkB,WACvB,KAAK,GAAI1iB,OAAOuV,MAAK0B,OACL,iBAARjX,KAA+D,kBAA9BuV,MAAK0B,OAAOjX,KAAY,SACzDuV,KAAK0B,OAAOjX,KAAKuW,SAGrBhB,MAAK0N,SACL1N,KAAK0N,QAAQ1M,WAKrB5W,MAAMoc,cAAgB,SAAUnB,cAAesI,UAC3C,GAAIrN,SAAUlW,MAAMsa,SAASW,cACxB/E,SAAQqD,YACTvZ,MAAM+F,KAAK,+BAAiCkV,cAAgB,qCAEhE,IACIrF,MADAtV,MAAQ2a,eAAe3V,OAAOtF,MAAMe,UAAUwiB,UAElDvjB,OAAM+D,aAAa,gBAAiB,0EAC/BkX,cAAeA,cAAesI,SAAUA,WAC7C3N,KAAO5V,MAAMmR,qBAAqB+E,QAAQiG,aAAc7b,MACxDN,MAAMkjB,mBAAmBjI,cAAerF,KAAMM,QAAS5V,MACnDN,MAAMwjB,gBACNxjB,MAAMwjB,eAAe5N,KAEzB,IAAIgD,QAAS5Y,MAAM2Y,6BAA6B/C,KAYhD,OAXIgD,QAAOnY,OAAS,GAChBT,MAAM+F,KAAK/F,MAAM+C,UAAU6V,OAAQ,SAAU6K,OACzC,OAAQ,gCAAiC7N,KAAM,6BAA+B6N,MAAMtd,KAAO,mBAAqBsd,MAAM5P,YACjH4P,MAAM5K,gBAAkB,+BAAiC4K,MAAM5K,gBAAkB,IAAM,8DAC5F/S,KAAK,MAEgB,iBAAzB8P,KAAKmN,kBACLnN,KAAKmN,gBAAkB,eAE3BnN,KAAK0B,OAAOmL,SAASxc,KAAK2P,MAC1B5V,MAAMwE,cACCoR,MAIX5V,MAAM0jB,qBAAuB,SAAU9N,KAAMwF,MAAO9a,MAChD,GAAIF,KACJ,IAAuB,kBAAZ,OAAwB,CAC/B,GAAIujB,WAA+B,gBAAZ,OAAuBvI,MAAQA,MAAMpX,IAC5D5D,MAAqB,4BAAdujB,UACH,KAAO3jB,MAAMmR,qBAAqBwS,UAAWrjB,UAEjDF,MAAOgb,MAAMvW,MAAM,KAAMvE,KAE7B,OAAOF,MASX,IAAIwjB,WAAY,2BAEhB5jB,OAAM6jB,kBACFC,OAAQ,GAAIC,QAAO,WAAaH,UAAY,aAAc,KAC1DI,WACIC,GAAI,MACJC,IAAK,KACLC,IAAK,UAIbnkB,MAAMokB,cACFN,OAAQ,GAAIC,QAAO,WAAaH,UAAY,eAAgB,KAC5DI,WACIC,GAAI,UACJI,IAAK,UACLH,IAAK,MAIb,IAAII,UAAW,GAAIP,QAAO,eAAgB,IAM1C/jB,OAAMukB,cAAgB,SAAUC,UAAW7G,UACvC,GAAIvd,QACJokB,WAAYA,UAAUC,MAEtB,IAAIX,QAASnG,SAASmG,MACtBA,QAAOthB,UAAY,CAEnB,KADA,GAAIA,WAAY,IACH,CAGT,IAFA,GAAIkiB,WACAzZ,OAAQ,IACC,CACT,GAAI0Z,UAAWb,OAAOphB,KAAK8hB,UAC3B,KAAKG,SACD,KAEJ,IAAIA,SAASpiB,QAAUC,UAAW,CAC9B,IAAIyI,MAIA,KAHAjL,OAAM+F,KAAK,iFAAmFye,UAAU7hB,UAAUH,YAM1H,GAAIoiB,aACAC,KAAOF,SAAS,GAChBG,UAAYnH,SAASqG,UAAUW,SAAS,GACxCG,aACAF,SAASE,WAAaD,MAE1BH,OAAOA,OAAOjkB,QAAUmkB,SACxBpiB,UAAYshB,OAAOthB,UACnByI,OAAQ,EAEZqZ,SAAS9hB,UAAYA,SACrB,IAAIuiB,aAAcC,SAAUN,QACxBO,WAAaX,SAAS5hB,KAAK8hB,UAS/B,IARKS,YAAcA,WAAW1iB,QAAUC,WACpCxC,MAAM+F,KAAK,yEAA2Eye,UAAU7hB,UAAUH,YAExF,MAAlByiB,WAAW,KACXF,WAAWG,OAAQ,GAEvB9kB,KAAKA,KAAKK,QAAUskB,WAEhBT,SAAS9hB,WAAagiB,UAAU/jB,OAChC,KAEJ+B,WAAY8hB,SAAS9hB,UACrBshB,OAAOthB,UAAY8hB,SAAS9hB,UAEhC,MAAOpC,OAWXJ,MAAMmlB,eAAiB,SAAUC,IAAKC,OAClC,MAAO,IAAItB,QAAOqB,IAAIxH,QAAQ,8BAA+B,QAASyH,QAY1ErlB,MAAMslB,eAAiB,SAAUC,SAAU5Z,QACvC,GAAIL,MAAOtL,MAAMsL,KAAKK,OACtBL,MAAOA,KAAKka,KAAKxlB,MAAM0M,sBACvB,KAAK,GAAI5L,GAAI,EAAGA,EAAIwK,KAAK7K,SAAUK,EAAG,CAClC,GAAIT,KAAMiL,KAAKxK,GACX2kB,GAAKzlB,MAAMmlB,eAAe,IAAM9kB,IAAK,IACzCklB,UAAWA,SAAS3H,QAAQ6H,GAAI9Z,OAAOtL,MAE3C,MAAOklB,YAGZG,OAAQ3lB,YCrxFX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YAUAA,OAAM2lB,QAAU,WACZ,GAAI/P,OACAgQ,aACAC,YA+CJ,OA3CAjQ,MAAKkQ,KAAO,SAAUF,UAAWC,UAe7B,MAdID,aACyB,YAArBhQ,KAAKmQ,YACLH,UAAUhQ,KAAK1S,OAEf0S,KAAKgQ,UAAUvkB,KAAKukB,YAGxBC,WACyB,WAArBjQ,KAAKmQ,YACLF,SAASjQ,KAAK1S,OAEd0S,KAAKiQ,SAASxkB,KAAKwkB,WAGpBjQ,MAEXA,KAAKoQ,QAAU,SAAU9iB,OAOrB,MANI0S,MAAKmQ,YACL/lB,MAAM+F,KAAK,4BAA6B6P,KACpC,gCAAmCA,KAAKmQ,YAAc,KAE1DnQ,KAAKqQ,SAAS,UAAWrQ,KAAKgQ,UAAW1iB,OAEtC0S,MAEXA,KAAKsQ,OAAS,SAAUC,QAOpB,MANIvQ,MAAKmQ,YACL/lB,MAAM+F,KAAK,4BAA6B6P,KACpC,+BAAkCA,KAAKmQ,YAAc,KAEzDnQ,KAAKqQ,SAAS,SAAUrQ,KAAKiQ,SAAUM,QAEpCvQ,MAGXA,KAAKqQ,SAAW,SAAUG,MAAOC,MAAO7gB,KACpCoQ,KAAKmQ,YAAcK,MACnBxQ,KAAK1S,MAAQsC,GACb,KAAK,GAAI1E,GAAI,EAAGA,EAAIulB,MAAM5lB,SAAUK,EAChCulB,MAAMvlB,GAAG0E,MAGVoQ,MAMX5V,MAAMsmB,UAAY,SAAUze,QACxB,MAAOA,SAAkC,kBAAjBA,QAAW,MAOvC7H,MAAMumB,UAAY,SAAUC,gBACxB,GAAIxmB,MAAMsmB,UAAUE,gBAChB,MAAOA,eAEP,IAAIpmB,MAAOJ,MAAM2lB,SAEjB,OADAvlB,MAAK4lB,QAAQQ,gBACNpmB,MAQfJ,MAAM2lB,QAAQc,OAAS,SAAUtmB,OAAQiG,QACrCjG,OAAO2lB,KAAK1f,OAAO4f,QAAS5f,OAAO8f,SAQvClmB,MAAM2lB,QAAQe,IAAM,SAAUvmB,OAAQ0B,MAClC,GAAI8jB,SAAU3lB,MAAMumB,UAAUpmB,QAC1BC,KAAOJ,MAAM2lB,SAWjB,OAVAA,SAAQG,KAAK,SAAU5iB,OACnB,GAAIyjB,QAAS9kB,KAAKqB,MACdlD,OAAMsmB,UAAUK,QAChB3mB,MAAM2lB,QAAQc,OAAOE,OAAQvmB,MAE7BA,KAAK4lB,QAAQW,SAElB,SAAUlD,OACTrjB,KAAK8lB,OAAOzC,SAETrjB,MAOXJ,MAAM2lB,QAAQiB,cAAgB,SAAU3lB,QAASiV,QAASyH,UAItD,MAHK3d,OAAM4H,YAAY3G,UACnBjB,MAAM+F,KAAK,0EAGX9E,QAASA,QACT4lB,mBACAtkB,MAAO,EACPob,SAAUA,SACVzH,QAASA,QACT4Q,WACAnB,QAAS3lB,MAAM2lB,YAIvB3lB,MAAM2lB,QAAQoB,iBAAmB,SAAUnR,KAAMoR,UAC7CpR,KAAKkR,QAAQzlB,KAAK2lB,UAClBpR,KAAKrT,QAELvC,MAAM2lB,QAAQsB,eAAerR,OAGjC5V,MAAM2lB,QAAQuB,sBAAwB,SAAUtR,KAAM6N,OAClD,IAAK,GAAI3iB,GAAI8U,KAAKrT,MAAQ,EAAGzB,GAAK,IAAKA,EAAG,CACtC,GAAIqmB,UAAWvR,KAAKiR,gBAAgB/lB,GAChCsmB,YAAcpnB,MAAMsmB,UAAUa,WAA4D,kBAAxCA,UAAkC,0BAAmBA,SAASE,0BAA4BrnB,MAAMgJ,QACtJya,OAAQ2D,YAAY3D,OAExB7N,KAAK+P,QAAQO,OAAOzC,QAGxBzjB,MAAM2lB,QAAQsB,eAAiB,SAAUrR,MACrC,GAAIA,KAAKrT,QAAUqT,KAAK3U,QAAQR,OAC5BmV,KAAK+P,QAAQK,QAAQpQ,KAAK+H,SAAS2J,cAAc1R,WAC9C,CACH,GAAI1S,OAAQ0S,KAAK+H,SAAS4J,WAAW3R,KACrCA,MAAKiR,gBAAgBjR,KAAKrT,OAASW,MAC/BlD,MAAMsmB,UAAUpjB,OAChBA,MAAM4iB,KAAK,SAAUkB,UACjBhnB,MAAM2lB,QAAQoB,iBAAiBnR,KAAMoR,WACtC,SAAUvD,OACTzjB,MAAM2lB,QAAQuB,sBAAsBtR,KAAM6N,SAG9CzjB,MAAM2lB,QAAQoB,iBAAiBnR,KAAM1S,SAOjDlD,MAAM2lB,QAAQ6B,qBAAuB,WACjC,OACID,WAAY,SAAU3R,MAClB,GAAIzV,QAASyV,KAAK3U,QAAQ2U,KAAKrT,MAC/B,OAA0B,kBAAb,QAA0BpC,OAAOyV,KAAKM,SAAW/V,QAElEmnB,cAAe,SAAU1R,MACrB,MAAOA,MAAKkR,WAQxB9mB,MAAM2lB,QAAQ8B,SAAW,SAAUxmB,QAASiV,SACxC,GAAIwR,WAAY1nB,MAAM2lB,QAAQiB,cAAc3lB,QAASiV,QAASlW,MAAM2lB,QAAQ6B,uBAE5E,OADAxnB,OAAM2lB,QAAQsB,eAAeS,WACtBA,UAAU/B,SAKrB3lB,MAAM2lB,QAAQgC,wBAA0B,WACpC,OACIJ,WAAY,SAAU3R,MAClB,GAAIoB,QAASpB,KAAK3U,QAAQ2U,KAAKrT,MAC/ByU,QAAOrC,SAAW3U,MAAMyU,MAAMc,gBAAgByB,OAAOrC,SACrD,IAAIzR,OAAQ8T,OAAOrC,SAASiB,KAAKkR,QAAQlR,KAAKrT,OAAQqT,KAAKM,QAC3D,OAAOhT,QAEXokB,cAAe,SAAU1R,MACrB,MAAOA,MAAKkR,QAAQlR,KAAKrT,UAOrCvC,MAAM2lB,QAAQiC,gBAAkB,SAAU1S,UAAW2S,QAAS3R,SAC1DhB,UAAUnO,SAAS4N,SACf,WACI,MAAOkT,WAGf,IAAIH,WAAY1nB,MAAM2lB,QAAQiB,cAAc1R,UAAWgB,QAASlW,MAAM2lB,QAAQgC,0BAG9E,OAFAD,WAAUZ,QAAQzlB,KAAK,MACvBrB,MAAM2lB,QAAQsB,eAAeS,WACtBA,WAGX1nB,MAAM2lB,QAAQmC,iBAAmB,SAAU5S,UAAW6S,YAClD,MAAKA,YAGE/nB,MAAMyK,UAAUzK,MAAMe,UAAUmU,WAAY,SAAU1I,SACzD,MAAOA,SAAQqH,YAAcrH,QAAQ8I,gBAAkBtV,MAAM4L,SAASmc,WAAYvb,QAAQqH,aAHnFqB,WAsBflV,MAAM2lB,QAAQqC,mBAAqB,SAAUvT,MAAOoT,QAAS3R,SACzDA,QAAUA,WACV,IAAIhB,WAAYgB,QAAQvS,QAAU3D,MAAMe,UAAU0T,MAAM4B,iBAAiB1S,UACjE3D,MAAMe,UAAU0T,MAAM4B,gBAC9BnB,WAAYlV,MAAM2lB,QAAQmC,iBAAiB5S,UAAWgB,QAAQ4R,iBAC9D,IAAItI,aAAcxf,MAAM2lB,QAAQiC,gBAAgB1S,UAAW2S,QAAS3R,QACpE,OAAOsJ,aAAYmG,UAIxBD,OAAQ3lB,YCtPX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YA6IA,SAASioB,SAAQC,KAAMrmB,MAKnB,MAJAqmB,MAAOjoB,EAAEioB,MACTA,KAAKC,QAAQ,SAAWtmB,MACxBqmB,KAAKE,eAAevmB,MACpBqmB,KAAKrmB,QACEqmB,KA1IXloB,MAAMqoB,QAAU,SAAUC,IACtBA,GAAKA,GAAGC,aAER,IAAI9lB,OAAQ,wBAAwBC,KAAM4lB,KACtC,wBAAwB5lB,KAAM4lB,KAC9B,qCAAqC5lB,KAAM4lB,KAC3C,kBAAkB5lB,KAAM4lB,KAC5BA,GAAG7f,QAAQ,cAAgB,GAAK,gCAAgC/F,KAAM4lB,OAEtE,QACIE,QAAS/lB,MAAO,IAAO,GACvBnB,QAASmB,MAAO,IAAO,KAI/B,IAAIgmB,SAASD,OAGRvoB,GAAEuoB,UACGE,UAAUC,UAAUlmB,MAAM,gBAC5B+lB,SACII,MAAM,EACNtnB,QAAS,KAGbmnB,QAAUzoB,MAAMqoB,QAAQK,UAAUC,WAClCH,WAEIC,QAAQD,UACRA,QAAQC,QAAQD,UAAW,EAC3BA,QAAQlnB,QAAUmnB,QAAQnnB,SAG1BknB,QAAQK,OACRL,QAAQM,QAAS,EACVN,QAAQM,SACfN,QAAQO,QAAS,IAGzB9oB,EAAEuoB,QAAUA,QAIhB,IAAIQ,eAAgB,mBAMpBhpB,OAAMipB,cAAgB,SAAU7iB,OAAQ/F,KACpC,GAAI6oB,MAAOjpB,EAAEmG,QAAQ8iB,KAAKF,cAC1B,OAAOE,MAAOA,KAAK7oB,KAAOe,QAQ9BpB,MAAMmpB,cAAgB,SAAU/iB,OAAQ/F,IAAK6C,OACzCjD,EAAEmG,QAAQvC,KAAK,WACX,GAAIqlB,MAAOjpB,EAAEipB,KAAKpkB,KAAMkkB,kBACxBE,MAAK7oB,KAAO6C,MAEZjD,EAAEipB,KAAKpkB,KAAMkkB,cAAeE,QAOpC,IAAIE,oBAAqB,IAEzBnpB,GAAEopB,UAAUC,GAAG,UAAW,SAAU7U,OAChC2U,mBAAqB3U,MAAMrO,SAG/BpG,MAAMupB,sBAAwB,WAC1B,MAAOH,oBAIX,IAAII,gBAAiB,YAQrBxpB,OAAM8G,QAAU,SAAUV,OAAQqjB,OAE9B,MADArjB,QAASnG,EAAEmG,QACGhF,SAAVqoB,MACOzpB,MAAMipB,cAAc7iB,OAAQojB,mBAAoB,GAGvDvpB,EAAE,IAAKmG,QAAQoE,IAAIpE,QAAQvC,KAAK,WACsBzC,SAA9CpB,MAAMipB,cAAcnkB,KAAM0kB,gBAC1BxpB,MAAMmpB,cAAcrkB,KAAM0kB,eAAgBC,OAErC,yBAAyB1M,KAAKjY,KAAK4kB,WACxCzpB,EAAE6E,MAAM6kB,KAAK,YAAaF,aAGlCzpB,OAAMmpB,cAAc/iB,OAAQojB,eAAgBC,SAIpDzpB,MAAM4pB,eAAiB,SAAUxjB,QAC7BpG,MAAMmpB,cAAc/iB,OAAQojB,gBAAgB,IAOhDxpB,MAAM6pB,mBAAqB,SAAUpV,OACjC,KAAOA,MAAMqV,eAAiBrV,MAAMqV,cAAc1jB,QAC9CqO,MAAQA,MAAMqV,aAElB,OAAOrV,OAAMrO,QAqBjBnG,EAAE4D,MAAM,QAAS,QAAS,SAAU/C,EAAGqF,MACnCnG,MAAMmG,MAAQ,SAAU4jB,MACpB,MAAO9B,SAAQ8B,KAAM5jB,SAY7BnG,MAAMgqB,mBAAqB,SAAU9B,KAAMhlB,OACvCglB,KAAOjoB,EAAEioB,MACTA,KAAK+B,IAAI/mB,OAAOgnB,WAGrBxE,OAAQ3lB,YClLX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YAEAA,OAAMmqB,IAAMnqB,MAAMmqB,OAGlB,IAAIC,aAAc,SAAUC,UACxB,GAAIA,SAASnC,KAAKoC,WAGd,MAFAD,UAASnC,KAAOmC,SAASnC,KAAKoC,WAC9BD,SAASE,OAAS,EACXF,QAEX,MAAOA,SAASnC,MAAM,CAClB,GAAImC,SAASnC,KAAKsC,YAEd,MADAH,UAASnC,KAAOmC,SAASnC,KAAKsC,YACvBH,QAEXA,UAASnC,KAAOmC,SAASnC,KAAKuC,WAC9BJ,SAASE,OAAS,EAEtB,MAAOF,UAoBXrqB,OAAMmqB,IAAIO,WAAa,SAAUxC,KAAMyC,SAAUC,UAI7C,IAHA,GAEI5R,WAFA6R,aAAe3C,KAAMA,KAAMqC,MAAO,GAClCO,SAAW5C,KAEa,OAArB2C,YAAY3C,MAAiB2C,YAAYN,OAAS,GAAKM,YAAYN,MAAQvqB,MAAMmqB,IAAIO,WAAWK,gBAAgB,CAKnH,GAJA/R,UAAY,MACsB,IAA9B6R,YAAY3C,KAAK8C,UAAkBJ,YACnC5R,UAAY2R,SAASE,YAAY3C,KAAM2C,YAAYN,QAEnDvR,UACA,GAAkB,WAAdA,UACA6R,YAAY3C,KAAKuC,WAAWQ,YAAYJ,YAAY3C,MACpD2C,YAAY3C,KAAO4C,aAElB,IAAkB,SAAd9R,UACL,MAAO6R,aAAY3C,IAG3B4C,UAAWD,YAAY3C,KACvB2C,YAAcT,YAAYS,eAMlC7qB,MAAMmqB,IAAIO,WAAWK,eAAiB,IAQtC/qB,MAAMmqB,IAAIe,YAAc,SAAUC,UAAWC,WACzC,KAAOA,UAAWA,UAAYA,UAAUX,WACpC,GAAIU,YAAcC,UACd,OAAO,CAGf,QAAO,GAUXprB,MAAMmqB,IAAIkB,eAAiB,SAAU7e,SAGjC,IAAK,GAFD8e,OAAQ9e,QAAQ+e,WAChB1G,KAAO,GACF/jB,EAAI,EAAGA,EAAIwqB,MAAM7qB,SAAUK,EAAG,CACnC,GAAIokB,OAAQoG,MAAMxqB,EACK,KAAnBokB,MAAM8F,WACNnG,MAAcK,MAAMsG,WAG5B,MAAO3G,QAGZa,OAAQ3lB,aCtGXA,YAAcA,gBAEd,SAAWE,EAAGD,OACV,YAEA,IAAIyrB,WAAY,sCAEhBzrB,OAAM0rB,mBAAqB,SAAUxjB,QACjCA,OAASA,OAAO0V,QAAQ6N,UAAW,SAAUhpB,OACzC,GAAIkpB,MAAOlpB,MAAME,UAAU,GACvB0Q,OAASuY,SAASD,KAAM,GAC5B,OAAOnd,QAAOqd,aAAaxY,SAG/B,KADA,GAAIyY,KAAM,IACG,CACT,GAAIC,SAAU7jB,OAAOO,QAAQ,KAAMqjB,IACnC,IAAIC,aACA,KAEJ,IAAIA,UAAY7jB,OAAOzH,OAAS,EAC5B,OAAQyH,OAAOvF,UAAU,EAAGuF,OAAOzH,OAAS,IAAI,EAEpD,IAAImd,SAAU1V,OAAOM,OAAOujB,QAAU,EACtB,OAAZnO,UAAmBA,QAAU,MACjB,MAAZA,UAAmBA,QAAU,MACjB,MAAZA,UAAmBA,QAAU,MACjC1V,OAASA,OAAOvF,UAAU,EAAGopB,SAAWnO,QAAU1V,OAAOvF,UAAUopB,QAAU,GAC7ED,IAAMC,QAAU,EAEpB,OAAQ7jB,QAAQ,GAGpB,IAAI8jB,UAAW,aAEfhsB,OAAMisB,oBAAsB,SAAUpH,MAElC,GAAIzkB,QACJykB,MAAOA,KAAKjH,QAAQ,QAAS,MAC7BiH,KAAOA,KAAKjH,QAAQ,MAAO,KAG3B,KAAK,GADDsO,QAAQ7rB,IAAK8rB,UAAWC,SAAUC,SADlCC,MAAQzH,KAAKpW,MAAM,MAEd3N,EAAI,EAAGA,EAAIwrB,MAAM7rB,SAAUK,EAAG,CACnC,GAAIyrB,MAAOtsB,EAAEwkB,KAAK6H,MAAMxrB,GACxB,IAAKyrB,MAA2B,MAAnBA,KAAK/jB,OAAO,IAAiC,MAAnB+jB,KAAK/jB,OAAO,GAAnD,CAGA,GAAK0jB,OAmBDG,SAAWrsB,MAAM0rB,mBAAmBa,UAnB3B,CACTJ,UAAY,EACZ,IAAIK,UAAWD,KAAKE,OAAOT,SACvBQ,gBACAnsB,IAAMksB,KACNH,SAAW,KAGX/rB,IAAMJ,EAAEwkB,KAAK8H,KAAK5pB,UAAU,EAAG6pB,SAAW,IAC1CJ,SAAWnsB,EAAEwkB,KAAK8H,KAAK5pB,UAAU6pB,SAAW,IACjB,MAAvBJ,SAAS5jB,OAAO,IAAqC,MAAvB4jB,SAAS5jB,OAAO,KAC9C4jB,SAAWnsB,EAAEwkB,KAAK2H,SAASzpB,UAAU,MAI7CtC,IAAML,MAAM0rB,mBAAmBrrB,KAAK,GACpCgsB,SAAWrsB,MAAM0rB,mBAAmBU,UAMxCF,OAASG,SAAS,GACbA,SAAS,GAIVF,WAAaE,SAAS,GAHtBjsB,KAAKC,KAAO8rB,UAAYE,SAAS,IAMzC,MAAOjsB,OAcXJ,MAAM0sB,cAAgB,SAAUC,cAAersB,MAC3C,IAAKA,KACD,MAAOqsB,cAEU,iBAAX,QACNrsB,MAAQA,MAEZ,KAAK,GAAIQ,GAAI,EAAGA,EAAIR,KAAKG,SAAUK,EAC/B6rB,cAAgBA,cAAc/O,QAAQ,IAAM9c,EAAI,IAAKR,KAAKQ,GAE9D,OAAO6rB,iBAGZjH,OAAQ3lB,YCnGX,IAAIA,aAAcA,gBACdC,MAAQA,OAASD,aAErB,SAAWE,EAAGD,OACV,YAoKA,SAAS4sB,WAAUjkB,IAAKkkB,MAAO3W,SAC3B,QAAS4W,KAAI1H,KACTlP,QAAQ6W,QAAU3H,IAEtB,GAAI4H,KAAMH,MAAQ3W,QAAQ+W,YAAaC,WAA6B,kBAAV,IAC1D,IAA+B9rB,SAA3B8U,QAAQiX,gBAAgCjX,QAAQ6W,OAAOtsB,OAASyV,QAAQiX,eACxE,OAAO,CAEX,IAAY,OAARxkB,IACAmkB,IAAI,YACD,IAAY1rB,SAARuH,IACPmkB,IAAI,iBACD,IAAInkB,MAAQ3I,MAAMotB,mBACrBN,IAAI,4BACD,IAAI9sB,MAAMyF,YAAYkD,OAASukB,WAClCJ,IAAInnB,KAAKC,UAAU+C,UAElB,CACD,GAAIuN,QAAQlR,MAAMyD,QAAQE,UAEtB,WADAmkB,KAAI,aAGR5W,SAAQlR,MAAM3D,KAAKsH,IACnB,IAAI7H,EACJ,IAAId,MAAM4H,YAAYe,KAClB,GAAmB,IAAfA,IAAIlI,OACJqsB,IAAI,UACD,CAEH,IADAA,IAAI,MAAQE,KACPlsB,EAAI,EAAGA,EAAI6H,IAAIlI,SAAUK,EAAG,CAC7B,GAAI8rB,UAAUjkB,IAAI7H,GAAIksB,IAAK9W,SACvB,OAAO,CAEPpV,KAAM6H,IAAIlI,OAAS,GACnBqsB,IAAI,MAAQE,KAGpBF,IAAI,KAAOD,MAAQ,SAGtB,CACDC,IAAI,KAAOI,WAAa,YAAc,IAAM,KAAOF,IACnD,IAAI1hB,MAAOtL,MAAMsL,KAAK3C,IACtB,KAAK7H,EAAI,EAAGA,EAAIwK,KAAK7K,SAAUK,EAAG,CAC9B,GAAIT,KAAMiL,KAAKxK,GACXoC,MAAQlD,MAAMqtB,gBAAgB1kB,IAAKtI,IAEvC,IADAysB,IAAInnB,KAAKC,UAAUvF,KAAO,MACtBusB,UAAU1pB,MAAO8pB,IAAK9W,SACtB,OAAO,CAEPpV,KAAMwK,KAAK7K,OAAS,GACpBqsB,IAAI,MAAQE,KAGpBF,IAAI,KAAOD,MAAQ,KAEvB3W,QAAQlR,MAAMN,OArNtB1E,MAAMyH,gBAAkB,SAAU6lB,MAC9B,GAAIC,SAAU,SAAUtgB,IAAKugB,OACpBA,QAASA,MAAQ,EACtB,IAAIC,QAAkBrsB,SAAR6L,IAAoB,GAAKA,IAAIlF,UAC3C,OAAO,QAAQpF,UAAU,EAAI6qB,MAAQC,OAAOhtB,QAAUgtB,OAE1D,OAAOF,SAAQD,KAAKI,YAAc,IAAMH,QAAQD,KAAKK,cAAgB,IAAMJ,QAAQD,KAAKM,cAAgB,IAAML,QAAQD,KAAKO,kBAAmB,IAGlJ7tB,MAAMge,WAAY,EAElBhe,MAAMuR,kBAAkB,iBAExBvR,MAAMie,QAAQC,aAEdle,MAAMie,QAAQ6P,mBAAqB,SAAU5P,WACzCA,UAAYA,WAAale,MAAMie,QAAQC,SAEvC,KAAK,GADD9d,SACKU,EAAI,EAAGA,EAAIod,UAAUzd,SAAUK,EAAG,CACvC,GAAIiO,MAAOmP,UAAUpd,EAChBV,MAAK2O,QAIJ3O,KAAK2O,MAHP3O,KAAK2O,MAAQ,EAMrB,GAAIgf,cAKJ,OAJA/tB,OAAM6D,KAAKzD,KAAM,SAAU4L,GAAI+C,MAC3Bgf,WAAW1sB,MAAM0N,KAAMA,KAAM/D,MAAOgB,OAExC+hB,WAAWvI,KAAK,SAAUrc,EAAGC,GAAI,MAAOA,GAAE4B,MAAQ7B,EAAE6B,QAC7C+iB,YAGX/tB,MAAMie,QAAQ+P,kBAAoB,SAAUC,SAAU/P,WAClD+P,SAAWjuB,MAAMe,UAAUktB,SAC3B,IAAIC,eACJluB,OAAM6D,KAAKoqB,SAAU,SAAUtf,QAC3Buf,YAAYvf,QAAU,GAE1B,IAAIvO,QAeJ,OAdAJ,OAAM6D,KAAKqa,UAAW,SAAUlS,IAC5B,GAAI+C,MAAO/C,GAAG+C,IACT/O,OAAMoK,KAAK6jB,SAAU,SAAUtf,QAChC,GAA6B,IAAzBI,KAAKtG,QAAQkG,QAEb,MADAuf,aAAYvf,SAAW3C,GAAGhB,OACnB,KAGX5K,KAAKiB,KAAK2K,MAGlBhM,MAAM6D,KAAKqqB,YAAa,SAAUljB,MAAO+D,MACrC3O,KAAK2G,SAASgI,KAAMA,KAAM/D,MAAOA,UAE9B5K,MAMXJ,MAAMmuB,iBAAmB,SAAUC;AAC/B,GAAIC,OAAQ,QACRC,YACAxa,OAAQ,EAcZ,OAZIsa,GAAErpB,UACFspB,MAAQ,SACiB,mBAAX3sB,SAA0BA,OAAO6sB,OAASH,EAAEI,WAC1DH,MAAQ,UACDD,EAAEppB,OACTqpB,MAAQ,UAERC,WAAWxa,OAASsa,EAAEppB,MAAMyD,QAAQ,wBAA4B,EAAI,GAC3C,mBAAX/G,UAA0BA,OAAO6sB,OAAW,cAAgBH,KAC1EC,MAAQ,SAEZC,WAAWD,MAAQA,MACZC,YAGXtuB,MAAMyuB,gBAAkB,WACpB,IACI,KAAM,IAAIltB,OAAM,mBAEpB,MAAO6sB,GACH,MAAOA,IAIf,IAAIE,YAAatuB,MAAMmuB,iBAAiBnuB,MAAMyuB,kBAE9CzuB,OAAMuR,kBAAkB,2BAExBvR,MAAM0uB,YAAc,WAChB,GAAyB,YAArBJ,WAAWD,MACX,MAAO,KAEX,IAAID,GAAIpuB,MAAMyuB,iBACd,OAAOzuB,OAAM2uB,kBAAkBL,WAAWD,OAAOD,IAGrDpuB,MAAM2uB,kBAAkBC,QAAU,SAAUR,GACxC,GAAIS,WAAY,MACZvC,MAAQ8B,EAAEppB,MAAM4Y,QAAQ,kBAAmB,IAAIA,QAAQ,QAAS,gBAAgBnP,MAAM,KAC1F,OAAOzO,OAAM+C,UAAUupB,MAAO,SAAUC,MACpCA,KAAOA,KAAK3O,QAAQ,MAAO,GAC3B,IAAIkR,OAAQvC,KAAK9jB,QAAQomB,UACzB,OAAOC,aAAgBvC,OAASA,KAAK5pB,UAAUmsB,MAAQD,UAAUpuB,QAAS8rB,KAAK5pB,UAAU,EAAGmsB,WAKpG9uB,MAAMyb,cAAgB,SAAUsT,SAC5BA,SAAWA,SAAW,GAAKT,WAAWxa,MACtC,IAAI9O,OAAQhF,MAAM0uB,cACdliB,QAAUxH,OAASA,MAAM+pB,SAAS,EACtC,IAAIviB,QAAS,CACT,GAAIwiB,WAAYxiB,QAAQwC,YAAY,IAChCggB,kBACAA,UAAY,EAEhB,IAAIC,WAAYziB,QAAQ/D,QAAQ,IAAKumB,UACrC,QACIjgB,KAAMvC,QAAQ7J,UAAU,EAAGqsB,WAC3BE,SAAU1iB,QAAQ7J,UAAUqsB,UAAY,EAAGC,WAC3C1sB,MAAOiK,QAAQ7J,UAAUssB,UAAY,IAGzC,MAAO,OAUfjvB,MAAMmvB,gBAAkB,SAAUxb,EAAG3I,OAEjC,IAAK,GADD5K,MAAO,GACFU,EAAI,EAAGA,EAAIkK,QAASlK,EACzBV,MAAQuT,CAEZ,OAAOvT,OAIXJ,MAAMotB,sBAGNptB,MAAMqtB,gBAAkB,SAAU1kB,IAAKtI,KACnC,GAAI+uB,MAAOlqB,OAAOmqB,yBAAyB1mB,IAAKtI,IAChD,OAAO+uB,QAASA,KAAKjkB,IAAMxC,IAAItI,KAAOL,MAAMotB,oBAsEhDptB,MAAMsvB,gBAAkB,SAAU3mB,IAAKuN,SAInC,MAHAA,SAAUjW,EAAEyJ,QAAQ6lB,OAAQ,EAAGvqB,SAAW+nB,OAAQ,IAAK7W,SACvDA,QAAQ+W,YAAcjtB,MAAMmvB,gBAAgB,IAAKjZ,QAAQqZ,QACzD3C,UAAUjkB,IAAK,GAAIuN,SACZA,QAAQ6W,QAUnB/sB,MAAM0R,OAAS,SAAUlF,SACrB,GAAIpM,KAEJ,KAAKoM,QACD,MAAO,MAEX,IAAyB,IAArBA,QAAQwe,UAAuC,IAArBxe,QAAQwe,SAClC,MAAO,UAAYxe,QAAQ0c,KAAO,GAEtC,IAAyB,IAArB1c,QAAQwe,SACR,MAAO,uBAAyBxe,QAAQgjB,SAAW,GAEvD,KAAKhjB,QAAQwe,UAAYhrB,MAAM4H,YAAY4E,SAAU,CACjDpM,KAAO,GACP,KAAK,GAAIU,GAAI,EAAGA,EAAI0L,QAAQ/L,SAAUK,EAClCV,MAAQJ,MAAM0R,OAAOlF,QAAQ1L,IACzBA,EAAI0L,QAAQ/L,OAAS,IACrBL,MAAQ,KAGhB,OAAOA,MAAO,IAUlB,MARAoM,SAAUvM,EAAEuM,SACZpM,KAAOoM,QAAQrB,IAAI,GAAGskB,QAClBjjB,QAAQsJ,KACR1V,MAAQ,IAAMoM,QAAQsJ,IAEtBtJ,QAAQkjB,KAAK,WACbtvB,MAAQ,IAAMoM,QAAQkjB,KAAK,UAExBtvB,OAGZslB,OAAQ3lB,YC7RX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YA4pEA,SAASU,kBAAiBP,OAAQQ,KAAMC,MAAOC,gBAC3C,IAAK,GAAIC,GAAI,EAAGA,EAAIF,QAASE,EAEzBX,OAASU,eAAeV,OAAQQ,KAAKG,GAAIA,EAAGd,MAAMe,UAAUJ,MAEhE,OAAOR,QAvpEXH,MAAM2vB,uBAAyB,SAAU/Z,KAAMga,QAAS1Z,QAASvV,MAC7DA,KAAOA,QACP,KAAK,GAAIwF,QAAQyP,MAAM,CACnB,GAAIwB,WAAYxB,KAAKzP,KAErB,OAAKnG,MAAM4I,YAAYwO,YAAelB,QAAQ2Z,SAAW3Z,QAAQ2Z,QAAQzY,UAAUtB,KAAnF,CAOA,GAJAnV,KAAKU,KAAK8E,MACN+P,QAAQ2Z,UACR3Z,QAAQ2Z,QAAQzY,UAAUtB,KAAM,GAEhC8Z,QAAQxY,UAAWjR,KAAMxF,KAAMA,KAAKF,OAAS,GAC7C,OAAO,CAENyV,SAAQ4Z,MACT9vB,MAAM2vB,uBAAuBvY,UAAWwY,QAAS1Z,QAASvV,MAE9DA,KAAK+D,SAIb1E,MAAM+vB,eAAiB,SAAUC,aAAcpa,MAC3C,GAAIqa,QAASD,aAAaE,WAAWta,KAAKE,GAC1C,OAAOma,SAAUA,OAAOE,aAG5BnwB,MAAMowB,kBAAoB,SAAUxa,KAAM4D,WACtC,GAAI2W,aAAcnwB,MAAM+vB,eAAe/vB,MAAMqwB,mBAAoBza,KACjE,UAAUua,cAAeA,YAAY3W,aAKzCxZ,MAAMswB,2BAA6B,SAAU1a,KAAMM,QAAS0Z,SACxD,GAAII,cAAehwB,MAAMuwB,gBAAgB3a,KACzCM,SAAUjW,EAAEyJ,QACRmmB,WACAG,aAAcA,cACf9Z,QACH,IAAIsa,YAAa5a,MACb6a,eAAiBzwB,MAAM+vB,eAAeC,aAAcpa,OACpD8a,eAAiB,SAAUtZ,UAAWjR,KAAMxF,MAC5C6vB,UAAU/vB,OAAS,EACnBgwB,cAAchwB,OAAS,CACvB,KAAK,GAAIK,GAAI,EAAGA,EAAIH,KAAKF,SAAUK,EAAG,CAClC,GAAIokB,OAAQsL,UAAU1vB,GAAGH,KAAKG,GAC9B0vB,WAAU1vB,EAAI,GAAKokB,MACnBuL,cAAc3vB,EAAI,GAAKd,MAAM+vB,eAAeC,aAAc9K,WAE9D,MAAO0K,SAAQxY,UAAWoZ,UAAWC,cAAe9vB,KAAMA,KAAKF,QAEnET,OAAM2vB,uBAAuB/Z,KAAM8a,eAAgBxa,aAGvDlW,MAAM2wB,eAAiB,SAAUX,aAAcQ,WAC3C,GAAyB,IAArBA,UAAU/vB,OACV,QAEA,IAAIsO,MAAOihB,aAAaY,SAASJ,UAAUA,UAAU/vB,OAAS,GAAGqV,IAC7DnV,KAAOqvB,aAAa1hB,QAAQS,KAGhC,OADApO,MAAKoG,QAAQlC,MAAMlE,KAAMX,MAAM2K,SAAS6lB,UAAU/vB,OAASE,KAAKF,OAAQ,KACjEE,MAOfX,MAAM6wB,6BAA+B,SAAUb,aAAcQ,UAAWZ,QAAS1Z,SAC7EA,QAAUA,UACN2Z,WACAC,MAAM,EACNE,aAAcA,aAGlB,KAAK,GADDc,aAAc9wB,MAAM2wB,eAAeX,aAAcQ,WAC5C1vB,EAAI0vB,UAAU/vB,OAAS,EAAGK,GAAK,IAAKA,EAAG,CAC5C,GAAI8U,MAAO4a,UAAU1vB,EAIrB,IADAoV,QAAQ2Z,QAAQja,KAAKE,KAAM,EACvB8Z,QAAQha,KAAMkb,YAAYhwB,GAAIgwB,YAAahwB,GAC3C,MAGJ,IAAId,MAAM2vB,uBAAuB/Z,KAAMga,QAAS1Z,QAAS4a,aACrD,MAEJA,aAAYpsB,QAIpB1E,MAAM+wB,cAAgB,SAAUpiB,OAAQpL,KAAMytB,SAC1C,GAAIld,QAASnF,OAAOlO,MACpB,OAAO,UAAU2F,OAAQD,KAAMrF,EAAGH,MAC9B,KAAIG,GAAK6N,OAAOlO,QAAhB,CAGA,IAAK,GAAID,GAAI,EAAGA,EAAImO,OAAOlO,SAAUD,EACjC,GAAIG,KAAKH,KAAOmO,OAAOnO,GACnB,MAGR,OAAOwwB,SAAQ5qB,OAAQD,KAAMrF,EAAI6N,OAAOlO,OAAQE,KAAKyT,MAAMN,YAInE9T,MAAMixB,kBAAoB,SAAUC,UAAW/qB,KAAMyP,MACjD5V,MAAM+D,aAAa,cAAe,2FAC7BoC,KAAMA,KAAMlC,OAAQitB,UAAWtb,KAAMA,MAC1C,IAAIub,SAAUD,UAAYlxB,MAAMoxB,YAAYxb,KAAMsb,UAAW/qB,MAAQ/E,MAErE,OADApB,OAAMwE,cACC2sB,SAGXnxB,MAAMqxB,iBAAmB,SAAUC,WAAYnrB,KAAMyP,MAEjD,IAAK,GADDxV,MACKU,EAAI,EAAGA,EAAIwwB,WAAW7wB,SAAUK,EAAG,CACxC,GAAIywB,UAAWvxB,MAAM0X,gBAAgB4Z,WAAWxwB,GAAI8U,KAIhDxV,MAHCJ,MAAM0F,cAActF,MAGdH,EAAEyJ,QAAO,EAAMtJ,KAAMmxB,UAFrBA,SAKf,MAAOnxB,OAGXJ,MAAMwxB,eAAiB,SAAU5b,KAAMM,QAASub,gBAAiBC,WAAYC,YAAahjB,OAAQsU,YAE9F,MADAtU,QAASA,YAELgP,SAAU,SAAUvX,OAAQD,KAAMrF,GAC9B,GAAU,IAANA,EAAJ,CAGA,GAAImD,QAASjE,MAAMwe,cAActI,SAAUwb,WAAYvrB,MAAOsrB,gBAC9D,IAAerwB,SAAX6C,OAAJ,CAGAjE,MAAM8Q,IAAI1K,QAASD,MAAOnG,MAAM6d,mBAChC,IAAIhU,QAAS8nB,YAAY1tB,OAAQkC,KAAMyP,KAEvC,OADA5V,OAAM8Q,IAAI1K,QAASD,MAAO0D,QACnBA,UAEXiV,QAAS,WACL,GAAIxK,SAAUtU,MAAMwe,cAActI,QAASwb,WAAYD,oBACvD,KAAK,GAAItrB,QAAQmO,SACR2O,YAAeA,WAAW9c,OAC3BnG,MAAM4xB,gBAAgBhc,KAAMjH,OAAOrJ,QAAQa,WAQ/DnG,MAAMoY,kBAAoB,SAAUxC,MAChC,GAAIqa,QAASjwB,MAAM6xB,mBAAmBjc,MAClCkJ,QAAU9e,MAAMmL,IAAI8kB,QAAS,qBAAsB,aAAejwB,MAAMgJ,QAC5E8V,YAGJ9e,MAAM8xB,uBAAyB,SAAU5R,YAAa6R,aAAcC,WAAYC,WAAYC,WAAYC,YACpGA,WAAaA,YAAc,eAC3BnyB,MAAM+D,aAAa,yBAA0B,2GAA4GguB,aAAcA,aAAcC,WAAYA,WAAYC,WAAYA,YAEzN,IAAI9xB,QAASH,MAAMyJ,KAAKzJ,MAAMmL,IAAI4mB,aAAcC,YAChDhyB,OAAM6D,KAAKquB,WAAY,SAAUE,WAC7BpyB,MAAMoO,MAAMsS,mBAAmBvgB,QAASQ,KAAMyxB,UAAWpuB,KAAM,YAGnE,IAAIC,SAAUiS,WAId,OAHAlW,OAAMoO,MAAMsS,mBAAmBzc,QAAStD,KAAMsxB,WAAYjuB,KAAM,MAAOd,MAAO/C,SAC9EH,MAAMqyB,qBAAqBpuB,QAC3BjE,MAAMwE,cACCvE,EAAEyJ,OAAOzF,QAASic,YAAaA,YAAalB,WAAYmT,cAMnEnyB,MAAMsyB,aAAe,SAAUpS,YAAaqS,aAAcC,WAAYP,WAAYC,WAAYO,cAC1F,GAAIryB,QAeJ,OAdAJ,OAAM6D,KAAK0uB,aAAc,SAAUtT,OAC/B,GAAI9e,QAASH,MAAMmL,IAAI8T,MAAM9e,OAAQqyB,WACrC,IAAepxB,SAAXjB,OAAsB,CACtBC,KAAKiB,KAAKrB,MAAM8xB,uBAAuB5R,YAAajB,MAAM9e,OAAQqyB,WAAYP,WAAYC,WAAYjT,MAAMD,YAC5G,IAAI0T,SAAUzyB,EAAEyJ,UAAWvJ,OACvBsyB,eACAzyB,MAAMoO,MAAMsS,mBAAmBzB,MAAM9e,QAASQ,KAAM6xB,WAAYxuB,KAAM,WAE1EhE,MAAM6D,KAAKquB,WAAY,SAAUE,WAC7B,GAAIO,MAAO3yB,MAAMmL,IAAIunB,QAASN,UAC9BpyB,OAAM8Q,IAAImO,MAAM9e,OAAQqyB,WAAWltB,OAAO8sB,WAAYO,WAI3DvyB,MAIXJ,MAAM4yB,0BAA4B,SAAUC,aAAcC,WAAYrS,cAClEzgB,MAAMoO,MAAMmC,UAAUsiB,cAAe,yBAA0BC,WAAYrS,aAAa3K,KAAK,IAGjG9V,MAAM+yB,wBAA0B,SAAUF,aAAcC,WAAYrS,cAChE,MAAOzgB,OAAMoO,MAAMoC,UAAUqiB,cAAe,yBAA0BC,WAAYrS,aAAa3K,MAGnG9V,MAAMgzB,4BAA8B,SAAUH,aAAcC,YACxD9yB,MAAMoO,MAAMsS,mBAAmBmS,cAAelyB,MAAO,yBAA0BmyB,YAAa9uB,KAAM,YAGtGhE,MAAMizB,qBAAuB,SAAUC,kBAAmBL,aAAcpS,aAAc+P,UAAWC,cAAeK,YAAahwB,GACzH,GAAIqyB,YAAarC,YAAYA,YAAYrwB,OAAS,IAC7CT,MAAM+yB,wBAAwBF,aAAcM,WAAY1S,eACrDzgB,MAAMozB,iBAAiB3S,aAAa4S,SAAU7C,UAAWC,cAAeK,YAAahwB,KACzFoyB,kBAAkB7xB,KAAKwD,MAAMquB,kBAAmBzS,aAAaZ,QAC7D7f,MAAM4yB,0BAA0BC,aAAcM,WAAY1S,gBAQlEzgB,MAAMszB,yBAA2B,SAAUrD,OAAQ4C,aAAcC,aACxD7C,OAAOsD,kBAAoBV,eAC5B5C,OAAOsD,iBAAmB,WACtBvzB,MAAMgzB,4BAA4BH,aAAcC,eAK5D9yB,MAAMwzB,qBAAuB,SAAUC,WAAYla,WAAYuZ,WAAYld,MACvE,GAAIoa,cAAehwB,MAAMuwB,gBAAgBkD,YAAc7d,MACnD4a,UAAYR,aAAa0D,aAAaD,YAAc7d,KACxD4a,WAAUzpB,QAAQ/G,MAAM2zB,cACxB,IAAI7C,aAAc9wB,MAAM2wB,eAAeX,aAAcQ,WACjDoD,QAAU5zB,MAAM+C,UAAUytB,UAAW,SAAUqD,UAC/C,MAAO7D,cAAaE,WAAW2D,SAAS/d,MAExC+c,aAAee,QAAQA,QAAQnzB,QAAUgzB,WAAa,EAAI,IAC1DhD,cAAgBzwB,MAAMkL,WAAW0oB,QAAS,cAC1CH,aACA3C,YAAYzvB,KAAKyxB,YACjBrC,cAAcpvB,KAAKrB,MAAM8zB,iBAAiBva,aAC1CiX,UAAUnvB,KAAKuU,OAEf5V,MAAMszB,yBAAyBM,QAAQA,QAAQnzB,OAAS,GAAIoyB,aAAc/B,YAAYA,YAAYrwB,OAAS,GAG/G,KAAK,GADDyyB,sBACKpyB,EAAI,EAAGA,EAAI0vB,UAAU/vB,OAAS,IAAKK,EACxCd,MAAM6D,KAAK+vB,QAAQ9yB,GAAGizB,cAAe,SAAUtT,cAC3CzgB,MAAMizB,qBAAqBC,kBAAmBL,aAAcpS,aAAc+P,UAAWC,cAAeK,YAAahwB,IAGzH,OAAOoyB,oBAGXlzB,MAAMg0B,oBAAsB,SAAUC,MAAOC,OAEzC,IADA,GAAIpzB,GAAI,EACDA,EAAImzB,MAAMxzB,QAAUK,EAAIozB,MAAMzzB,QAAUwzB,MAAMnzB,KAAOozB,MAAMpzB,MAC5DA,CAEN,OAAOmzB,OAAMxzB,OAASyzB,MAAMzzB,OAAS,EAAEK,GAI3Cd,MAAMm0B,4BAA8B,SAAUC,WAAYC,kBACtD,IAAKA,iBAAiB7tB,SAAU,CAC5B,GAAIwpB,cAAehwB,MAAMuwB,gBAAgB6D,YACrCE,YAActE,aAAa0D,aAAaU,YACxCG,WAAav0B,MAAM2wB,eAAeX,aAAcsE,aAChDE,YAAcxE,aAAa0D,aAAaW,iBAAiBnU,aACzD8R,WAAahyB,MAAM2wB,eAAeX,aAAcwE,aAChDC,SAAWz0B,MAAMg0B,oBAAoBO,WAAYvC,WACrDqC,kBAAiB7tB,SAAWxG,MAAMmf,iBAAiBsB,aAAegU,SAEtE,MAAOJ,mBAIXr0B,MAAM00B,mBAAqB,SAAU9e,KAAM+e,UAAWC,cAClD,GAAI1B,mBAAoBlzB,MAAM+C,UAAU4xB,UAAW,SAAUE,UACzD,MAAO70B,OAAMuhB,oBAAoBsT,SAAUjf,KAAMgf,aAAapa,cAC/D,SAAU6Z,kBACT,MAAOr0B,OAAMm0B,4BAA4Bve,KAAMye,oBAE/CrT,aAAe4T,aAAa5T,YAGhC,OAFAA,cAAatB,YAAYre,KAAKwD,MAAMmc,aAAatB,YAAawT,mBAC9DlS,aAAaM,eACN4R,mBAIXlzB,MAAMozB,iBAAmB,SAAUC,SAAU7C,UAAWC,cAAeK,YAAahwB,GAGhF,IAFA,GAAIg0B,SAAUtE,UAAU/vB,OAAS,EAC7Bs0B,OAAS1B,SAAS5yB,OAAS,IAClB,CAMT,IAAK,GALDu0B,eAAgBF,UAAYtE,UAAU/vB,OAAS,GAAK4yB,SAAS0B,QAAQ7P,MAErEtP,KAAO4a,UAAUsE,SACjBG,MAAQ5B,SAAS0B,QACjBtyB,OAAQ,EACHjC,EAAI,EAAGA,EAAIy0B,MAAMjQ,SAASvkB,SAAUD,EAAG,CAC5C,GAAI00B,MAAOD,MAAMjQ,SAASxkB,EAC1B,IAAI00B,KAAKC,UAAa1E,cAAcqE,SAASI,KAAKC,UAAYrE,YAAYgE,WAAaI,KAAKC,QAAU,CAClG1yB,OAAQ,CACR,OAEJ,GAAIyyB,KAAKpf,IAAMF,KAAKE,KAAOof,KAAKpf,GAAI,CAChCrT,OAAQ,CACR,QAMR,GAHe,IAAXsyB,QAAgBD,QAAUh0B,GAAKk0B,gBAC/BvyB,OAAQ,GAERA,MAAO,CACP,GAAe,IAAXsyB,OACA,OAAO,IAETD,UACAC,WAED,CACD,GAAIC,cACA,OAAO,IAGLF,QAGV,GAAIA,QAAUh0B,EACV,OAAO,IAcnBd,MAAMo1B,iBAAmB,SAAU7xB,KAAM8vB,SAAUvD,MAC/C,GAAIzc,QAASrT,MAAMukB,cAAc8O,SAAUrzB,MAAMokB,cAC7ChkB,OAOJ,OALAJ,OAAMswB,2BAA2B/sB,MAAOusB,KAAMA,MAAO,SAAUla,KAAM4a,UAAWC,cAAeK,YAAahwB,GACpGd,MAAMozB,iBAAiB/f,OAAQmd,UAAWC,cAAeK,YAAahwB,IACtEV,KAAKiB,KAAKuU,QAGXxV,MAGXJ,MAAMq1B,gBAAkB,SAAUF,SAC9B,MAAOA,SAAQ1sB,QAAQ,WAG3BzI,MAAMs1B,kBAAoB,SAAUC,WAAYlC,SAAUjtB,OAAQyZ,QAC9D,GAAI+U,cAAe50B,MAAM6xB,mBAAmB0D,YACxCzf,GAAK9V,MAAMiS,eACXwO,cACA3K,GAAIA,GACJ1P,OAAQA,OACRitB,SAAUA,SACVxT,OAAQA,OAKZ,OAHA3a,QAAOwI,OAAO+S,cACdvb,OAAOwI,OAAO+S,aAAaZ,QAC3B7f,MAAM2J,UAAUirB,aAAc,gBAAiBnU,cACxC3K,IAGX9V,MAAMw1B,kBAAoB,SAAUD,WAAYzf,IAC5C,GAAI8e,cAAe50B,MAAM6xB,mBAAmB0D,WAC5Cv1B,OAAMyK,UAAUmqB,aAAab,cAAe,SAAUtT,cAClD,MAAOA,cAAa3K,KAAOA,MAInC9V,MAAMy1B,mBAAqB,SAAUxF,QACjCjwB,MAAM6D,KAAKosB,OAAOyF,iBAAkB,SAAUC,SAC1C31B,MAAMw1B,kBAAkBG,QAAQC,gBAAiBD,QAAQE,mBAKjE71B,MAAM81B,oBAAsB,SAAUC,gBAClC,GAAI/Q,UAAW+Q,eAAe,GAAG/Q,SAC7BmQ,QAAUnQ,SAAS,GAAGmQ,OAE1B,OADAnQ,UAASvkB,OAAS,EACX00B,SAGXn1B,MAAMg2B,yBAA2B,SAAUjnB,KAAMknB,MAC7C,GAAIt1B,MAAOX,MAAMoO,MAAME,QAAQS,KAI/B,OAHgB,YAAZpO,KAAK,IACLX,MAAM+F,KAAK,sCAAuCgJ,KAAM,WAAaknB,KAAO,iDAEzEt1B,KAAKyT,MAAM,IAGtBpU,MAAMk2B,kBAAoB,SAAU/1B,OAAQg2B,SAAUC,SACzBh1B,SAArBjB,OAAOg2B,WACPn2B,MAAM6D,KAAKuyB,QAAS,SAAUhwB,QAC1BA,OAAO+vB,UAAYh2B,OAAOg2B,aAKtCn2B,MAAMq2B,wBAA0B,aAAc,oBAAqB,cAAe,eAAgB,cAAe,6BAEjHr2B,MAAMuiB,kBAAoB,SAAU3M,KAAM6b,iBACtC,GAAI6E,YAAat2B,MAAM6xB,mBAAmBjc,MACtCtB,QAAUtU,MAAMwe,cAAc5I,KAAKM,QAAS,oBAAqBub,gBACrEzxB,OAAM6D,KAAKyQ,QAAS,SAA8BrQ,QAC9CjE,MAAM+D,aAAa,oBAAqB,kDAAmD6R,KAAMA,KAAM3R,OAAQA,SACjF,gBAAnBA,QAAa,QACpBjE,MAAM+F,KAAK,wCAAyC9B,OAAQ,sEAElC,gBAAnBA,QAAa,OAAmC7C,SAAlB6C,OAAOA,QAC5CjE,MAAM+F,KAAK,wCAAyC9B,OAAQ,gHAEhE,IACIsyB,YAAYlD,SAAU8B,QADtBqB,UAAYx2B,MAAMy2B,sBAAsBxyB,OAAOmC,OAEnD,IAAIpG,MAAMq1B,gBAAgBmB,UAAUrB,SAAU,CAC1C9B,SAAWrzB,MAAMukB,cAAciS,UAAUrB,QAASn1B,MAAMokB,aACxD,IAAIsS,aAAc12B,MAAM81B,oBAAoBzC,SACxB,OAAhBqD,YACAH,WAAav2B,MAAM2zB,cAEnBwB,QAAUuB,gBAIdvB,SAAUqB,UAAUrB,OAExBoB,YAAaA,YAAcv2B,MAAM22B,eAAexB,QAASvf,MACpD2gB,YACDv2B,MAAM+F,KAAK,wCAAyC9B,OAAQ,iCAAmCkxB,QAAU,wBAE7G,IACIR,WADA1C,WAAajyB,MAAMoO,MAAME,QAAQkoB,UAAUznB,KAE/C,IAAsB3N,SAAlB6C,OAAOA,OACP0wB,WAAc30B,MAAM8xB,uBAAuBlc,KAAM3R,OAAOA,UAAYguB,oBAEnE,CACD,GAAI9xB,QAASH,MAAMy2B,sBAAsBxyB,OAAO9D,OACzB,UAAnBA,OAAOg1B,SACPn1B,MAAM+F,KAAK,wCAAyC9B,OAAQ,yCAEhE,IAAIuuB,YAAaxyB,MAAMg2B,yBAAyB71B,OAAO4O,KAAM,UACzD6nB,eAAiB52B,MAAMe,UAAUkD,OAAOiuB,YAAY5sB,OAA6B,IAAtBktB,WAAW/xB,OAAeT,MAAMq2B,2BAE3FnE,WAAalyB,MAAM+C,UAAU6zB,eAAgB,SAAUxE,WACvD,MAAOpyB,OAAMoO,MAAME,QAAQ8jB,YAG/BuC,WAAY30B,MAAMsyB,aAAa1c,KAAM0gB,WAAWtV,aAAatB,YAAa8S,WAAYP,WAAYC,WAAYjuB,OAAOwuB,cACrH6D,WAAWtV,aAAaM,eAM5B,GAJAthB,MAAMk2B,kBAAkBjyB,OAAQ,WAAY0wB,WAC5C30B,MAAMk2B,kBAAkBjyB,OAAQ,YAAa0wB,WAGzCtB,SAAU,CACV,GAAIwC,gBAAiB71B,MAAMs1B,kBAAkBiB,WAAYlD,SAAUpvB,OAAOmC,OAAQuuB,UAClF2B,YAAWZ,iBAAmBY,WAAWZ,qBACzCY,WAAWZ,iBAAiBr0B,MACxBu0B,gBAAiBW,WACjBV,eAAgBA,qBAGnB,CACD,GAAIjB,cAAe50B,MAAM6xB,mBAAmB0E,WAC5Cv2B,OAAM00B,mBAAmB9e,KAAM+e,UAAWC,cAE9C50B,MAAMwE,iBAIdxE,MAAM8zB,iBAAmB,SAAUva,YAC/B,GAAI4W,eAKJ,OAJAnwB,OAAM6D,KAAK0V,WAAY,SAAUC,WAC7B2W,YAAY3W,YAAa,EACzB2W,YAAYnwB,MAAM4iB,gBAAgBpJ,aAAc,IAE7C2W,aAGXnwB,MAAM62B,kBAAoB,SAAUjhB,KAAMqa,QACtC,GAAIE,aAAcnwB,MAAM8zB,iBAAiBle,KAAKM,QAAQqD,WACjD4W,aAAYF,OAAO6C,cACpB3C,YAAYF,OAAO6C,YAAc,cAErC7C,OAAOE,YAAcA,YACrBnwB,MAAM6D,KAAKssB,YAAa,SAAU2G,KAAM3B,SACpClF,OAAO8G,SAAS5B,SAAWvf,KACvBqa,OAAO4C,cAAkD,wBAAlC5C,OAAO4C,aAAajd,KAAK5R,OAChDisB,OAAO4C,aAAamE,cAAc7B,SAAWvf,SAOzD5V,MAAMmgB,uBAAyB,SAAUvK,KAAMxP,OAAQ4a,cACnD,GAAIiP,QAASjwB,MAAM6xB,mBAAmBjc,KAAMqa,OAC5CjwB,OAAM62B,kBAAkBjhB,KAAMqa,QAC9BA,OAAOjP,aAAeA,cAO1BhhB,MAAMi3B,yBAA2B,SAAUngB,KAEvC,GAAIoc,mBAAoBlzB,MAAMwzB,qBAAqB,KAAM,KAAM,KAAM1c,IAAIlB,KACzE,IAAIsd,kBAAkBzyB,OAAS,EAAG,CAC9B,GAAIy2B,aAAcl3B,MAAM00B,mBAAmB5d,IAAIlB,KAAMsd,kBAAmBpc,IAAImZ,QACxEkH,eAAiBn3B,MAAM+C,UAAU/C,MAAMkL,WAAWgsB,aAAc,SAAU,eAAgBl3B,MAAMe,UACpGf,OAAMo3B,wBAAwBtgB,IAAK9W,MAAMuM,QAAQ4qB,mBAKzDn3B,MAAMq3B,mBAAqB,SAAUvgB,KACjCA,IAAIwgB,cAAgBt3B,MAAMe,UAAU+V,IAAIyC,WAExC,IAAIge,aAAcv3B,MAAMyJ,KAAKzJ,MAAM6a,kBAAkB/D,IAAIlB,KAAKC,SAAUiB,IAAIyC,YAC5EzC,KAAIyC,WAAW9Y,OAAS,EACxBqW,IAAIyC,WAAWlY,KAAKwD,MAAMiS,IAAIyC,WAAYge,YAAYhe,YAEtDvZ,MAAM6D,KAAKiT,IAAIyC,WAAY,SAAUC,WAC5BxZ,MAAMsI,eAAekR,aACtB1C,IAAI0gB,WAAWhe,YAAa,IAIpC,IAAIyW,QAASnZ,IAAImZ,MACjBjwB,OAAM62B,kBAAkB/f,IAAIlB,KAAMqa,QAGlCA,OAAOjP,aAAaJ,cAAc,gBAClCqP,OAAOjP,aAAaJ,cAAc,eAClCqP,OAAOjP,aAAaJ,cAAc,aAElC9J,IAAI2gB,cAAct3B,OAASo3B,YAC3BtH,OAAOjP,aAAaM,eACpB2O,OAAOjP,aAAaD,qBAEpB/gB,MAAMo3B,wBAAwBtgB,IAAKygB,YAAYhe,aAInDvZ,MAAMo3B,wBAA0B,SAAUtgB,IAAK4gB,eAC3C13B,MAAM6D,KAAK6zB,cAAe,SAAUle,WAC3B1C,IAAI0gB,WAAWhe,aACZxZ,MAAMsI,eAAekR,YACrB1C,IAAI6gB,WAAWt2B,KAAKmY,WACpB1C,IAAI0gB,WAAWhe,YAAa,GACpBxZ,MAAM4L,SAASkL,IAAIwgB,cAAe9d,YAC1C1C,IAAI8gB,aAAav2B,KAAKmY,eAMtCxZ,MAAM63B,qBAAuB,SAAUjiB,KAAMqa,OAAQtS,gBAC1C/H,MAAKM,QAAQqD,UACpB,IAAIA,YAAavZ,MAAMwe,cAAc5I,KAAKM,QAAS,aAAcyH,SACjEpE,YAAW9Y,OAAS,CAEpB,IAAIg3B,eAAgBz3B,MAAMyf,gBAAgBwQ,OAAOjP,aAAatB,YAAa,YAAY,GAEnF5I,KACAlB,KAAMA,KACNqa,OAAQA,OACRwH,cAAeA,cACfle,WAAYA,WACZie,cACAI,gBACAD,cAOJ,KALA33B,MAAM6D,KAAKosB,OAAOjP,aAAatB,YAAa,SAAUT,OAClD1F,WAAWlY,KAAKwD,MAAM0U,WAAYvZ,MAAMe,UAAUke,MAAM7Y,QAAU6Y,MAAM7Y,OAAOmT,aAC/EvZ,MAAMq3B,mBAAmBvgB,OAE7B9W,MAAMi3B,yBAAyBngB,OAClB,CACT,KAAOA,IAAI8gB,aAAan3B,OAAS,GAC7B8Y,WAAWlY,KAAKwD,MAAM0U,WAAYzC,IAAI8gB,cACtC9gB,IAAI8gB,aAAan3B,OAAS,EAC1BT,MAAMq3B,mBAAmBvgB,KACzB9W,MAAMi3B,yBAAyBngB,IAEnC,MAAIA,IAAI6gB,WAAWl3B,OAAS,GASxB,KARA,IAAI8wB,UAAWvxB,MAAM0X,gBAAgBZ,IAAI6gB,WAAWzwB,QAAS0O,KAAMqa,OAAO6H,aACjD,mBAAf,YACNvG,SAAWA,YAEXA,WACAza,IAAI8gB,aAAe9gB,IAAI8gB,aAAatyB,OAAOisB,WAOnDtB,OAAOsD,mBACPtD,OAAOsD,yBACAtD,QAAOsD,mBAItBvzB,MAAM+3B,2BAA6B,SAAUC,UAAWC,WACpD,MAAOD,YAA2B,IAAdC,UAAkB,GAAK,IAAMA,YAGrDj4B,MAAMk4B,sBAAwB,SAAUtiB,KAAMoiB,UAAWC,UAAWh0B,OAAQwH,UACxE,GAAIpL,KAAML,MAAM+3B,2BAA2BC,UAAWC,WAClDE,QAAUn4B,MAAMyJ,KAAKxF,OAGzB,cAFOk0B,SAAQ1sB,UACfzL,MAAM8Q,IAAI8E,KAAKM,SAAU,aAAc7V,KAAM83B,SACtC93B,KAGXL,MAAMqgB,yBAA2B,SAAUzK,KAAMoL,cAC7C,GAAIiP,QAASjwB,MAAM6xB,mBAAmBjc,MAClCwiB,SAAWnI,OAAOoI,qBAClB/jB,QAAUtU,MAAMwe,cAAc5I,KAAKM,QAAS,oBAAqB8K,aAAarD,SAClF3d,OAAM6D,KAAKyQ,QAAS,SAAUrQ,OAAQ+zB,WAIlC,GAHK/zB,OAAOhD,SAAYgD,OAAOq0B,eAC3Bt4B,MAAM+F,KAAK,2CAA4C9B,OAAQ,iDAE/DA,OAAOhD,QAAS,CAChB,GAAIA,SAAUjB,MAAMu4B,cAAct0B,OAAOhD,QAAS2U,KAClD5V,OAAM6D,KAAK5C,QAAS,SAAUd,OAAQ83B,WAClC,GAAI53B,KAAML,MAAMk4B,sBAAsBtiB,KAAMoiB,UAAWC,UAAWh0B,OAAQ,UAC1Em0B,UAAS/3B,MAAQF,OAAUA,OAAQ6xB,WAAciG,iBAGpD,IAAIh0B,OAAOq0B,cAAe,CAC3B,GAAI7jB,OAAQzU,MAAMyU,MAAM+jB,eAAe5iB,KAAM3R,OAAOq0B,cACpDt4B,OAAM8Q,IAAImf,QAAS,wBAAyB+H,WAAY,EACxD,IAAIrjB,UAAW,WACX,GAAItU,KAAML,MAAMk4B,sBAAsBtiB,KAAMoiB,UAAW/H,OAAOwI,sBAAsBT,aAAc/zB,OAAQ,iBACtGud,aAAezc,UAAa/E,MAAMe,UAAUgE,WAChD/E,OAAM04B,cAAc9iB,KAAMvV,IAAKmhB,aAEnC/M,OAAM6B,YAAY3B,UAClB3U,MAAM24B,eAAelkB,MAAOE,SAAUsb,YAOlDjwB,MAAMogB,yBAA2B,SAAUxK,KAAM4L,aAC7C,GAAIwO,cAAehwB,MAAMqwB,mBACrBJ,OAASjwB,MAAM6xB,mBAAmBjc,KACtCqa,QAAO6H,aAAetW,WACtB,IAAItL,SAAUN,KAAKM,QACfyH,SAAWsS,OAAOjP,aAAarD,SAC/B8T,gBAAkBzxB,MAAM+wB,eAAe,WAAY7a,QAASyH,SAChEsS,QAAO2I,gBAAkB54B,MAAMwxB,eAAe5b,KAAMM,QAASyH,SAAU,WAAY3d,MAAMixB,mBACzFhB,OAAO4I,mBAAqB74B,MAAMwxB,eAAe5b,KAAMM,QAASyH,SAAU,SAAU3d,MAAM+X,iBAAkB,UAC5G,IAAI+gB,eAAgB94B,MAAM+wB,eAAe,UAAWnb,KAAMqa,OAAO4I,mBAAmBlb,UAAW,UAQ/F,IAPAsS,OAAO8I,eAAiB/4B,MAAMwxB,eAAe5b,KAAMM,QAASyH,SAAU,UAAW3d,MAAMqxB,iBAAkB,MAAOjjB,OAAO,EAAMsK,YAAY,IAEzIuX,OAAO+I,WAAaC,YAAaj5B,MAAMoO,MAAM8qB,qBAAsBl5B,MAAMm5B,mBAAmBvjB,MACxF6b,gBAAiBxB,OAAO2I,gBAAgBjb,SAAUsS,OAAO8I,eAAepb,SAAUmb,gBAEtF94B,MAAM63B,qBAAqBjiB,KAAMqa,OAAQtS,SAAUsS,OAAOjP,aAAatB,aACvE1f,MAAMuiB,kBAAkB3M,KAAM+H,UAC1BsS,OAAOE,YAAY,qBAAsB,CACzC,GAAI2C,WACJ,IAAI7C,OAAOE,YAAY,2BAA4B,CAC/C,GAAIiJ,gBAAiBp5B,MAAM4xB,gBAAgBhc,MAAO,UAAW,kBACxDwjB,iBACDp5B,MAAM+F,KAAK,sCAAwCb,OAAOoG,KAAK2kB,OAAOE,aAAarqB,KAAK,MAAQ,8EAEpGgtB,WAAa9yB,MAAMq5B,qBAAqBD,oBAExCtG,YAAa9yB,MAAMs5B,wBAAwB1jB,KAE/C,IAAIyN,QAASrjB,MAAMu5B,oBACflW,QAAOyP,aACP9C,aAAawJ,eAAenW,OAAQyP,YAExC9C,aAAayJ,qBAAqBpW,OAAQzN,KAAMkd,YAAY,GAGhE,MAAO7C,QAAO+I,WAmBlBh5B,MAAM6xB,mBAAqB,SAAUza,WACjC,GAAI4Y,cAAehwB,MAAMuwB,gBAAgBnZ,UACzC,OAAO4Y,eAAgB5Y,UAAY4Y,aAAaE,WAAW9Y,UAAUtB,IAAM,MAK/E9V,MAAM4xB,gBAAkB,SAAUxa,UAAWrI,MACzC,GAAIkhB,QAASjwB,MAAM6xB,mBAAmBza,WAClC4hB,UAAY/I,OAASA,OAAO+I,UAAY53B,MAC5C,OAAOpB,OAAMmL,IAAIiM,UAAWrI,KAAMiqB,YAMtCh5B,MAAMm5B,mBAAqB,SAAUvjB,MACjC,GAAIoa,cAAehwB,MAAMuwB,gBAAgB3a,KACzC,OAAO,UAAUwB,UAAWsiB,QAASn3B,MAAO5B,MACxC,GAAIg5B,OAAQviB,UAAUsiB,QAKtB,IAJIC,QAAU35B,MAAM6d,oBAAsBtb,QAAU5B,KAAKF,QACrDT,MAAM+F,KAAK,wGAA2G2zB,QAClH,sKAEJn3B,MAAQ,EACR,MAAOo3B,MAEX,IAAcv4B,SAAVu4B,OAAuBviB,UAAUhP,eAAesxB,SAChD,MAAO15B,OAAM+N,QAEjB,IAAc3M,SAAVu4B,MAAqB,CACrB,GAAIC,YAAa5J,aAAaE,WAAW9Y,UAAUtB,IAAI/G,KACnD8qB,UAAY7J,aAAathB,YAAYkrB,WAAYF,QACrDC,OAAQ3J,aAAa8J,gBAAgBD,WAEzC,GAAcz4B,SAAVu4B,MAAqB,CAGrB,GAAII,WAAY/5B,MAAM4xB,gBAAgBxa,WAAY,UAAW,aAAcsiB,SACvEK,aACIA,UAAUzB,eACVt4B,MAAM+F,KAAK,iCAAoC2zB,QAAU,aAAgB/4B,KAAKmF,KAAK,KAAO,gCAAiCi0B,UACvH,mQAGR/5B,MAAM04B,cAActhB,UAAWsiB,SAC/BC,MAAQviB,UAAUsiB,UAG1B,MAAOC,SAKf35B,MAAMg6B,iBAAmB,kBAAmB,uBAAwB,sBAAuB,2BAE3Fh6B,MAAMi6B,oBAAsB,SAAU1gB,YAClC,MAAOvZ,OAAMyK,UAAUzK,MAAMe,UAAUwY,YAAa,SAAUC,WAC1D,MAAOxZ,OAAMg6B,gBAAgBvxB,QAAQ+Q,mBAI7CxZ,MAAMk6B,eAAiB,SAAUtkB,MAC7B,MAAOA,MAAKM,SAAWN,KAAKM,QAAQqD,WAChC,gBAAkB5T,KAAKC,UAAU5F,MAAMi6B,oBAAoBrkB,KAAKM,QAAQqD,aAAe,IAG/FvZ,MAAMm6B,SAAW,SAAUvkB,MACvB,MAAO,gBAAmBA,KAAKC,SAAW,IAAO7V,MAAMk6B,eAAetkB,MAAQ,QAAUA,KAAKE,GAAK,KAGtG9V,MAAMo6B,cAAgB,SAAU5J,UAAWR,cACvC,GAAI5vB,MAAOJ,MAAM+C,UAAUytB,UAAW,SAAU5a,MAC5C,GAAI7G,MAAOihB,aAAaY,SAAShb,KAAKE,GACtC,OAAO9V,OAAMm6B,SAASvkB,OAAS7G,KAAQ,YAAcA,KAAQ,KAEjE,OAAO3O,MAAK0F,KAAK,OAGrB9F,MAAMq6B,kBAAoB,SAAUzkB,MAChC,GAAI7G,MAAO/O,MAAMs6B,iBAAiB1kB,KAClC,OAAO7G,MAAO/O,MAAMu6B,SAAS1rB,gBAAgBE,MAAQ,0CAGzD/O,MAAM22B,eAAiB,SAAUxB,QAASvf,KAAM4kB,MAC5C,GAAgB,SAAZrF,QACA,MAAOvf,KAGX,IAAwB,gBAAd,SAAwB,CAC9B,GAAI6kB,cAAez6B,MAAM22B,eAAexB,QAAQA,QAASvf,KAAM4kB,KAC1Dx6B,OAAM4I,YAAY6xB,eACnBz6B,MAAM06B,2BAA2BvF,QAAQA,QAASvf,KAEtD,IAAI+kB,UAAW36B,MAAM4xB,gBAAgB6I,aAActF,QAAQpmB,MAEvDwiB,SAAWvxB,MAAMu4B,cAAcoC,SAAU/kB,KAK7C,OAJK5V,OAAM4I,YAAY2oB,WACnBvxB,MAAM+F,KAAK,kDAAoD/F,MAAM46B,uBAAuBzF,SAAW,oCAAsCwF,SACxI,6DAA8D/kB,KAAM,SAAU2b,UAEhFA,SAEP,GAAIsJ,gBACA7K,aAAehwB,MAAMqwB,kBACzB,IAAImK,KAAM,CACN,GAAIvK,QAASD,aAAaE,WAAWta,KAAKE,GAC1C,OAAOma,QAAO8G,SAAS5B,SAEvB,GAAI3E,WAAYR,aAAa8K,aAAallB,KAiB1C,OAhBA5V,OAAM6wB,6BAA6Bb,aAAcQ,UAAW,SAAUpZ,UAAWjR,MAC7E,GAAI8pB,QAASjwB,MAAM6xB,mBAAmBza,UAEtC,OAAI+d,WAAYhvB,MAAQ8pB,QAAUA,OAAOE,aAAeF,OAAOE,YAAYgF,UAAYA,UAAY/d,UAAUvB,UACzGglB,eAAiBzjB,WACV,GAEPpX,MAAM4xB,gBAAgBxa,WAAY,UAAW,aAAc+d,YAAc/d,UAAU+d,UAKnF0F,eAAiB76B,MAAM4xB,gBAAgBxa,UAAW+d,UAC3C,GANX,SASG0F,gBAKnB76B,MAAM06B,2BAA6B,SAAUrnB,OAAQogB,YACjD,GAAIlrB,KAAMvI,MAAM46B,uBAAuBvnB,OACvCrT,OAAM+F,KAAK,+BAAiCwC,IAAM,wCAC9C8K,OAAO8hB,QAAU,mBAAqBn1B,MAAMm6B,SAAS1G,YAAc,YAAczzB,MAAMq6B,kBAAkB5G,YAAc,eAAiBA,aAGhJzzB,MAAM+6B,iBAAmB,SAAUtH,WAAYjS,YAAagZ,MACxD,GAAIQ,SAAU,SAAU3nB,QAChBogB,YAA6C,cAA/BA,WAAW1Q,iBACzB/iB,MAAM+F,KAAK,4BAA8B/F,MAAM46B,uBAAuBvnB,QAAU,mBAAqBrT,MAAMm6B,SAAS1G,YAAc,4BAEtI,IAAI0B,SAAU9hB,OAAO8hB,OACrB,IAAI3T,aAAe2T,UAAW3T,aAC1B,MAAOxhB,OAAMmL,IAAIqW,YAAY2T,SAAU9hB,OAAOtE,KAElD,IAAI8rB,gBAAiB76B,MAAM22B,eAAexB,QAAS1B,WAAY+G,KAI/D,OAHKK,iBAAkC,KAAhBxnB,OAAOtE,MAC1B/O,MAAM06B,2BAA2BrnB,OAAQogB,YAEtCzzB,MAAM4xB,gBAAgBiJ,eAAgBxnB,OAAOtE,MAExD,OAAOisB,UAGXh7B,MAAMi7B,yBAA2B,SAAUxH,WAAYjS,YAAagZ,MAChE,MAAOv6B,GAAEyJ,OAAO1J,MAAMyJ,KAAKzJ,MAAM2Z,YAAY,6BACzC6H,YAAaA,gBACbwZ,QAASh7B,MAAM+6B,iBAAiBtH,WAAYjS,YAAagZ,MACzDta,YAAauT,WACbxQ,YAAa5c,SAAU+H,OAAO,EAAMsK,YAAY,OAIxD1Y,MAAMk7B,eAAiB,SAAUjL,QAE7BjwB,MAAM6D,KAAKosB,OAAO/a,UAAW,SAAU4B,KACnCA,IAAIrC,MAAMoC,eAAeC,IAAIP,YAAcO,IAAInC,kBAE5Csb,QAAO/a,WAGlBlV,MAAM24B,eAAiB,SAAUlkB,MAAOE,SAAUsb,OAAQ1Z,YAClD9B,MAAMkC,UAAYsZ,OAAOra,KAAKE,IAC9B9V,MAAM2J,UAAUsmB,OAAQ,aAAcxb,MAAOA,MAAOE,SAAUA,SAAU4B,WAAYA,cAI5FvW,MAAMm7B,sBAAwB,SAAUnL,aAAc3M,OAAQ6B,MAAOkW,aACjE,GAAIvI,cAAexP,OAAS2M,aAAaE,WAAW7M,OAAOvN,IAAM,IACjEslB,aAAYpE,cAAgBnE,aAAe3tB,OAAOC,OAAO0tB,aAAakE,aACtEqE,YAAYrE,SAAW7xB,OAAOC,OAAOi2B,YAAYpE,eACjDoE,YAAYvI,aAAeA,cAG/B7yB,MAAMq7B,mBAAqB,SAAUrL,aAAc6C,aAAc3N,MAAOkW,aACpEp7B,MAAM6D,KAAKu3B,YAAYjL,YAAa,SAAU2G,KAAM3B,SAC5CtC,aAAamE,cAAc7B,WAAajQ,aACjC2N,cAAamE,cAAc7B,YAQ9Cn1B,MAAMgwB,aAAe,WAwCjB,QAASsL,iBAAgBjY,OAAQjM,UAAWrI,KAAM5I,KAAMo1B,SACpD,GAAItL,OACJ,IAAIsL,QACAtL,OAASra,KAAKsa,WAAW9Y,UAAUtB,OACnCma,OAAOra,KAAOwB,UACd6Y,OAAOlhB,KAAOA,KACdkhB,OAAO6C,WAAa3sB,KACpBnG,MAAMm7B,sBAAsBvlB,KAAMyN,OAAQjM,UAAW6Y,YAClD,CACHA,OAASra,KAAKsa,WAAW9Y,UAAUtB,IACnCma,OAAOuL,cAAgBvL,OAAOuL,kBAC9BvL,OAAOuL,cAAczsB,OAAQ,CAC7B,IAAI8jB,cAAejd,KAAKsa,WAAW7M,OAAOvN,IACtCxK,KAAOtL,MAAMsL,KAAK2kB,OAAOE,YAC7BnwB,OAAMyK,UAAUa,KAAM,SAAUjL,KAC5B,MAAO4vB,QAAOE,aAA2C,eAA5BF,OAAOE,YAAY9vB,OAEpDiL,KAAKjK,KAAK8E,MACVnG,MAAM6D,KAAKyH,KAAM,SAAU6pB,SAClBtC,aAAamE,cAAc7B,WAC5BtC,aAAamE,cAAc7B,SAAW/d,aAI9CxB,KAAKkkB,gBAAgB/qB,OACrB/O,MAAM+F,KAAK,qCAAuCgJ,KAAO,qCAAuC/O,MAAMm6B,SAAS/iB,WAC3G,wCAA0CpX,MAAMm6B,SAASvkB,KAAKkkB,gBAAgB/qB,OAAS,mJAG/F6G,KAAKkkB,gBAAgB/qB,MAAQqI,UApEjC,GAAIxB,MAAO5V,MAAMiZ,QAAQ,eA6IzB,OA5IAhZ,GAAEyJ,OAAOkM,MACLmN,gBAAiB,cACjB+W,mBACA5J,cACAuL,mBAAoBC,SACpBhtB,YAAa1O,MAAMoO,MAAMM,YACzBG,gBAAiB7O,MAAMoO,MAAMS,gBAC7BP,QAAStO,MAAMoO,MAAME,QACrBgJ,QACIqkB,kBAAmB37B,MAAMiW,gBAAgB9P,KAAM,2CAC/Cy1B,iBAAkB57B,MAAMiW,gBAAgB9P,KAAM,6CAItDyP,KAAKgb,SAAW,SAAU9a,IACtB,GAAIma,QAASra,KAAKsa,WAAWpa,GAC7B,OAAOma,QAASA,OAAOlhB,KAAO,IAGlC6G,KAAK8d,aAAe,SAAUtc,WAC1B,GAAI6Y,QAASra,KAAKsa,WAAW9Y,UAAUtB,GACvC,IAAIma,OAAQ,CAIR,IAAK,GAHDlhB,MAAOkhB,OAAOlhB,KACdsE,OAASuC,KAAKtH,QAAQS,MACtBxL,KAAOqS,KAAKkkB,gBAAgB,IAAK15B,QAC5BU,EAAI,EAAGA,EAAIuS,OAAO5S,SAAUK,EACjCyC,KAAOA,KAAK8P,OAAOvS,IACnBV,KAAKiB,KAAKkC,KAEd,OAAOnD,MAEJ,UAEXwV,KAAKklB,aAAe,SAAU1jB,WAC1B,GAAIoZ,WAAYpZ,UAAYxB,KAAK8d,aAAatc,aAE9C,OADAoZ,WAAUzpB,QAAQ/G,MAAMu5B,sBACjB/I,WAiCX5a,KAAKimB,WAAa,SAAUzkB,WACxBkkB,gBAAgB,KAAMlkB,UAAW,GAAI,IAAI,IAE7CxB,KAAK6jB,qBAAuB,SAAUpW,OAAQjM,UAAWjR,KAAMo1B,SAE3D,GADAlY,OAAOld,MAAQiR,UACXpX,MAAM4I,YAAYwO,YAAiC,iBAAnBA,UAAUpT,KAAyB,CACnE,GAAI41B,YAAahkB,KAAKsa,WAAW7M,OAAOvN,IAAI/G,KACxCA,KAAO6G,KAAKlH,YAAYkrB,WAAYzzB,KACxCm1B,iBAAgBjY,OAAQjM,UAAWrI,KAAM5I,KAAMo1B,SAC/C3lB,KAAK0B,OAAOqkB,kBAAkB11B,KAAKmR,UAAWrI,KAAM6G,KAAM2lB,aAE1Dv7B,OAAM+F,KAAK,0CAA2CqR,UAAW,aAAgBjR,KAAO,eAAiBkd,SAGjHzN,KAAKkmB,uBAAyB,SAAU73B,QAGpCjE,MAAM6D,KAAKI,OAAOm3B,YAAYI,cAAe,SAAU1E,KAAMiF,cACzD,GAAInC,YAAa55B,MAAMoO,MAAMa,cAAc8sB,cACvCC,YAAcpmB,KAAKkkB,gBAAgBF,WACvChkB,MAAK4jB,eAAewC,YAAah8B,MAAMoO,MAAMe,YAAY4sB,cAAe93B,OAAOihB,SAEnFllB,MAAMy1B,mBAAmBxxB,OAAOm3B,aAChCp7B,MAAMk7B,eAAej3B,OAAOm3B,aAC5Bp7B,MAAMmX,UAAUlT,OAAOihB,MAAO,gBAAiBjhB,OAAOihB,MAAOjhB,OAAOkC,KAAMlC,OAAOmT,kBAC1ExB,MAAKsa,WAAWjsB,OAAOihB,MAAMpP,KAExCF,KAAK4jB,eAAiB,SAAUpiB,UAAWjR,KAAM+e,MAAOhP,QAAS+lB,OAAQltB;AAErE,GAAIkhB,QAASra,KAAKsa,WAAW9Y,UAAUtB,GAEvCI,SAAUA,UAAY4Z,MAAM,EAAME,aAAcpa,KAAMsmB,gBACtDhX,MAAQA,OAAS9N,UAAUjR,MAC3B4I,KAAOA,MAAQkhB,OAAOlhB,KACT3N,SAAT2N,MACA/O,MAAM+F,KAAK,0BAA4BI,KAAO,mBAAoBiR,UAC9D,8CAGR,IAAIyiB,WAAYjkB,KAAKlH,YAAYK,KAAM5I,MACnCi1B,YAAcxlB,KAAKsa,WAAWhL,MAAMpP,GACxC,IAAKslB,YAAL,CAGA,GAAIG,SAAUH,YAAYrsB,OAAS8qB,SACnCjkB,MAAK0B,OAAOskB,iBAAiB31B,KAAKif,MAAO2U,UAAWziB,UAAWmkB,SAI3DA,SACAv7B,MAAM2vB,uBAAuBzK,MAAO,SAAUiX,OAAQC,WAAYz7B,KAAMG,GACpE,GAAI84B,YAAahkB,KAAK/G,gBAAgBhK,MAAM,KAAMlE,KAAKyT,MAAM,EAAGtT,GAChE8U,MAAK4jB,eAAetU,MAAOkX,WAAY,KAAMlmB,SAAS,EAAM0jB,aAC7D1jB,QAASN,KAAKtH,QAAQurB,YACzB75B,MAAMmjB,UAAU+B,MAAO/e,KAAMiR,WAC7BlB,QAAQgmB,YAAY76B,MAAM6jB,MAAOA,MAAOkW,YAAaA,YAAaj1B,KAAMA,KAAMiR,UAAWA,aAEzFpX,MAAMyK,UAAU2wB,YAAYI,cAAe,SAAU1E,KAAM/nB,MACvD,MAAOA,QAAS8qB,YAGxB75B,MAAMq7B,mBAAmBzlB,KAAMqa,OAAQ/K,MAAOkW,mBAGvCxlB,MAAKkkB,gBAAgBD,WACvBoC,eACM7kB,WAAUjR,MAEjBnG,MAAM6D,KAAKqS,QAAQgmB,YAAatmB,KAAKkmB,2BAGtClmB,MAIX5V,MAAMqwB,mBAAqBrwB,MAAMgwB,eAKjChwB,MAAMuwB,gBAAkB,SAAUnZ,WAC9B,GAAI4Y,cAAehwB,MAAMqwB,kBACzB,OAAOjZ,YAAa4Y,aAAaE,WAAW9Y,UAAUtB,IAAMka,aAAe,MAI/EhwB,MAAMsa,SAAS,qBAGfta,MAAMsa,SAAS,2BACXf,WAAY,sBAGhBvZ,MAAMq8B,wBAA0B,SAAUrM,cAEtChwB,MAAM2zB,cAAgB3D,aAAa2D,cAAgB3zB,MAAMiZ,QAAQ,uBACjE+W,aAAa6L,WAAW77B,MAAM2zB,eAG9B3zB,MAAMu5B,qBAAuBvJ,aAAauJ,qBAAuBv5B,MAAMiZ,QAAQ,8BAC/E+W,aAAayJ,qBAAqBz5B,MAAM2zB,cAAe3zB,MAAMu5B,qBAAsB,wBAAwB,EAG3G,IAAI+C,YAAatM,aAAaE,WAAWlwB,MAAM2zB,cAAc7d,GAC7DwmB,YAAWnM,cACX,IAAIoM,mBAAoBvM,aAAaE,WAAWlwB,MAAMu5B,qBAAqBzjB,GAC3EymB,mBAAkBxF,SAAWuF,WAAWvF,SACxCwF,kBAAkBvF,cAAgBsF,WAAWtF,cAE7ChH,aAAayJ,qBAAqBz5B,MAAMu5B,qBAAsBvJ,aAAc,gBAAgB,GAC5FuM,kBAAkBvF,cAAchH,aAAeA,cAGnDhwB,MAAMq8B,wBAAwBr8B,MAAMqwB,oBAapCrwB,MAAMu4B,cAAgB,SAAUj4B,KAAMsV,KAAM4E,YAAagH,YAAagb,oBAClE,IAAKl8B,KACD,MAAOA,KAEXN,OAAM+D,aAAa,gBAAiB,gDAAiD6R,KAAMA,KAAMtV,KAAMA,MACvG,IAAIi4B,eAAgBv4B,MAAMi7B,yBAAyBrlB,KAAM4L,YACzD+W,eAAc/d,YAAcA,WAC5B,IAAI+W,UAAWiL,oBAAsBA,mBAAmBC,MACpDz8B,MAAM08B,kBAAkBp8B,KAAMi4B,eAAiBv4B,MAAM28B,OAAOr8B,KAAMi4B,cAEtE,OADAv4B,OAAMwE,cACC+sB,UAGXvxB,MAAM48B,oBAAsB58B,MAAM+L,aAAa,OAAQ,UAAW,YAAa,gBAAiB,WAAY,eAE5G/L,MAAMqyB,qBAAuB,SAAU7Q,aACnCxhB,MAAM6D,KAAK2d,YAAa,SAAUte,MAAO7C,KAChCL,MAAM48B,oBAAoBv8B,MAC3BL,MAAM+F,KAAK,yCAA0Cyb,YAAa,WAAcnhB,IAC5E,6CACAL,MAAMsL,KAAKtL,MAAM48B,qBAAqB92B,KAAK,UAK3D9F,MAAM68B,mBAAqB,SAAUjnB,KAAMknB,cACvC,GAAIxyB,QAiBJ,OAhBAtK,OAAM6D,KAAKi5B,aAAc,SAAU55B,MAAO7C,KAEtC,GADA6C,MAAM8b,WAAa3e,IACP,kBAARA,IACAiK,KAAKjJ,KAAKwD,MAAMyF,KAAMtK,MAAM+C,UAAUG,MAAO,SAAUmxB,kBACnD,MAAOr0B,OAAMm0B,4BAA4Bve,KAAMye,yBAGlD,CACD,IAAKnxB,MAAMgT,QAAW,MACtBhT,OAAMsD,SAAWxG,MAAMmf,iBAAiB9e,KACjBe,SAAnB8B,MAAMsD,UACNxG,MAAM+F,KAAK,uCAAyC1F,IAAM,KAAM6C,OAEpEoH,KAAKjJ,KAAK6B,UAGXoH,KAKX,IAAIyyB,mBAAoB,SAAUvgB,QAI9B,MAHAxc,OAAM6D,MAAM,aAAc,cAAe,cAAe,aAAc,oBAAqB,SAAU,YAAa,iBAAkB,aAAc,oBAAqB,oBAAqB,SAAUxD,KAClML,MAAM8Q,IAAI0L,QAASnc,IAAK,IAAK,aAAa,KAEvCmc,OAIXxc,OAAMuhB,oBAAsB,SAAUtd,OAAQ2R,KAAM4E,YAAagH,aAC7D,GAAI+P,UAAWvxB,MAAMu4B,cAAct0B,OAAOiS,QAASjS,OAAOic,aAAetK,KAAM4E,YAAagH,aAAcib,OAAO,GAIjH,OAHAlL,UAAS/qB,SAAWvC,OAAOuC,SAC3B+qB,SAAS1d,UAAY5P,OAAO4P,UAC5B0d,SAASvS,WAAa/a,OAAO+a,WACtBuS,SAGX,IAAIyL,4BAA6B,SAAUxiB,YAAaF,SAAU2iB,WAAYrnB,MAC1E,GAAIsnB,aAAcl9B,MAAMyJ,KAAK6Q,SAC7ByiB,mBAAkBviB,YAClB,IAAIyV,QAASjwB,MAAM6xB,mBAAmBjc,KACtCqa,QAAOzV,YAAcA,WACrB,IAAIsiB,eACAxiB,UAAWpE,QAASgnB,aAGxBj9B,GAAEyJ,OAAOozB,aAAcG,WAAWH,cAE9BA,aAAavc,oBACbvgB,MAAMqyB,qBAAqByK,aAAavc,mBAG5C,IAAI4c,YAAan9B,MAAM68B,mBAAmBjnB,KAAMknB,cAE5C18B,KAAOJ,MAAM+C,UAAUo6B,WAAY,SAAUj6B,OAC7C,MAAOlD,OAAMuhB,oBAAoBre,MAAO0S,KAAM4E,YAAayiB,WAAWzb,cAE1E,OAAOphB,MAGXJ,OAAMo9B,uBAAyB,SAAUxnB,KAAMzP,KAAM6pB,aAAc9K,OAC/D,MAAO,YACH8K,aAAawJ,eAAe5jB,KAAMzP,KAAM+e,SAKhDllB,MAAMs5B,wBAA0B,SAAU1jB,MACtC,GAAIynB,UAAWr9B,MAAM4iB,gBAAgBhN,KAAKC,SAC1C,OAAOwnB,UAAW,IAAMznB,KAAKE,IAMjC9V,MAAMq5B,qBAAuB,SAAUxjB,UACnC,MAAOA,UAAS+H,QAAQ,MAAO,MAInC5d,MAAMohB,uBAAyB,SAAU5G,YAAaF,SAAU8E,YAAaxJ,MACzE,GAAIqnB,YAAa7d,YACb4Q,aAAe5Q,aAAeA,YAAYzR,SAAW3N,MAAMgO,OAASoR,YAAY4Q,aAAe,IACnGhwB,OAAM+D,aAAa,yBAA0B,gFACxCmS,QAAS8Z,aAAe5Q,YAAY0d,aAAatc,KAAOpB,YAAanb,OAAQg5B,WAAYrnB,KAAMA,OAC/Foa,eACDA,aAAehwB,MAAMqwB,mBACrB4M,YACIH,cAAetc,MAAOtK,QAASlW,MAAMub,cAAc6D,aAAa,KAChE0T,WAAY9yB,MAAMs5B,wBAAwB1jB,MAC1Coa,aAAcA,aACdyD,WAAYzzB,MAAM2zB,gBAG1B/d,KAAKgB,QAAU5W,MAAMo9B,uBAAuBH,WAAWxJ,WAAYwJ,WAAWnK,WAAY9C,aAAcpa,MAExGoa,aAAayJ,qBAAqBwD,WAAWxJ,WAAY7d,KAAMqnB,WAAWnK,YAAY,EACtF,IAAI1yB,MAAO48B,2BAA2BxiB,YAAaF,SAAU2iB,WAAYrnB,KAGzE,OADA5V,OAAMwE,cACCpE,MAQXJ,MAAMs9B,yBAA2B,SAAU7J,WAAY5d,SAAUK,SAC7D,GAAIqnB,YAAav9B,MAAMsa,SAASzE,SAC3B0nB,aAAeA,WAAW5b,aAC3B3hB,MAAM+F,KAAK,yEAA2E8P,SAAW,oDAGrG,IAAI2nB,aACAzJ,cAAgBN,WAAazzB,MAAMwzB,qBAAqBC,WAAY8J,WAAWhkB,WAAYrD,QAAQ4c,WAAY0K,YACnHx9B,OAAM6D,KAAKkwB,cAAe,SAAUtT,cAChCzgB,MAAMm0B,4BAA4BV,WAAYhT,cAC1CzgB,MAAMyF,YAAYgb,aAAaja,YAC/Bia,aAAaja,SAAWxG,MAAMgT,cAAcyN,aAAaja,SAAU,GAAG,EAAO,2BAGrFxG,MAAMgU,eAAe+f,cAErB,IAAI+D,cAAe5hB,QAAQ4hB,aACvBtW,YAAcvhB,EAAEyJ,UAAW1J,MAAMwL,WAAW0K,QAAQunB,iBAAkB,SAAU3F,cAEhF4F,OAASH,WAAW5b,YACpBgc,SAAWz4B,OAAOoG,KAAKoyB,QAAQp4B,QAAQ,QAE3CtF,OAAM6D,KAAK85B,SAAU,SAAUx3B,MAC3B,IAAK,GAAIrF,GAAI,EAAGA,EAAIizB,cAActzB,SAAUK,EACTM,SAA3B2yB,cAAcjzB,GAAGqF,QACjBqb,YAAYrb,MAAQ4tB,cAAcjzB,GAAGqF,SAIjD0P,SAAW2L,YAAYxd,MAAQ6R,eAExB2L,aAAYxd,WACZwd,aAAYtL,OAEnB,IAAI4mB,eAAgB/I,cAAeA,cAEH3yB,UAA5B8U,QAAQunB,kBAERX,aAAavc,mBAAqBtgB,EAAEyJ,UAAWwM,QAAQunB,iBAE3D,IAAIn9B,QACJN,OAAM6D,KAAK65B,OAAQ,SAAUn7B,MAAO4D,MAChC,GAAIX,IACJ,IAAa,YAATW,KACAX,KAAOmI,OAAQ3N,MAAMgO,OACVwT,YAAasW,aACbgF,aAAcA,aACd9M,aAAchwB,MAAMuwB,gBAAgBkD,YACpCA,WAAYA,WACZX,WAAY5c,QAAQ4c,gBAC5B,CACH,GAAI5vB,OAAQse,YAAYrb,KACxBX,KAAMxF,MAAM0X,gBAAgBxU,MAAOuwB,WAAYjS,aAEnDlhB,KAAKiC,OAASiD,KAGlB,IAAIpF,OACAE,KAAMA,KACNs9B,SAAU/nB,SAEd,OAAOzV,OAWXJ,MAAM04B,cAAgB,SAAU9iB,KAAMzP,KAAMqb,aACxC,IAAI5L,KAAKzP,MAAT,CACA,GACI03B,UADAzmB,UAAYxB,KAAKM,QAAQ4nB,WAAW33B,MAEpC6pB,aAAehwB,MAAMqwB,mBACrBJ,OAASD,aAAaE,WAAWta,KAAKE,IACtCgiB,aAAetW,aAAeyO,OAAOoI,mBAAqBpI,OAAOoI,kBAAkBlyB,KAIvF,IAHAnG,MAAM+D,aAAa,gBAAiB,6FAC/BgL,KAAMkhB,OAAOlhB,KAAO,IAAM5I,KAAMlC,OAAQmT,UAAWiM,OAAQzN,OAEtC,gBAAhB,YAA4BwB,UAAU2mB,SAC5CnoB,KAAKzP,MAAQnG,MAAM6d,mBACnBggB,SAAW79B,MAAM0X,gBAAgBN,UAAWxB,MACxCioB,SACA7N,aAAayJ,qBAAqB7jB,KAAMioB,SAAU13B,MAAM,SAEjDyP,MAAKzP,UAGf,IAAIiR,UAAUpT,KAAM,CACrB,GAAIA,MAAOhE,MAAM0X,gBAAgBN,UAAUpT,KAAM4R,KAAMkiB,aAClD9zB,OACDhE,MAAM+F,KAAK,iCAAkCqR,UAAUpT,KAAM,kDAAmDmC,KAC5G,cAAeyP,KAEvB,IAAIooB,YAAah+B,MAAMs9B,yBAAyB1nB,KAAM5R,MAAOy5B,gBAAiBrmB,UAAW0b,WAAY3sB,KAAM2xB,aAAcA,cACzH+F,UAAW79B,MAAM0jB,qBAAqB9N,MAAO5R,KAAMg6B,WAAWJ,UAAWI,WAAW19B,UAGpFN,OAAM+F,KAAK,kDAAoDI,KAAO,2BAG1E,OADAnG,OAAMwE,cACCq5B,WAGX79B,MAAMi+B,sBAAwB,SAAUroB,KAAMqF,cAAe7D,WACzD,GAAIE,QAAStX,MAAMe,UAAUqW,UAAUkhB,cACvCt4B,OAAM6D,KAAKyT,OAAQ,SAAUtB,WACzB,GAAIvB,OAAQzU,MAAMsI,eAAe0N,WAAahW,MAAMu4B,cAAcviB,UAAWJ,MAAQA,KAAK0B,OAAOtB,UAC5FvB,QAAUA,MAAM6B,aACjBtW,MAAM+F,KAAK,yDAA2DkV,cAAgB,cAAerF,KAAM,8BACvGI,UAAY,4CAA6CvB,OAEjEA,MAAM6B,YAAY,WACdtW,MAAM+D,aAAa,eAAgB,2FACjCkX,cAAeA,cAAerF,KAAMA,KAAMI,UAAWA,YACnDJ,KAAKqF,gBACLjb,MAAMqwB,mBAAmBmJ,eAAe5jB,KAAMqF,cAElD,IAAIuG,cAAezc,UAAa/E,MAAMe,UAAUgE,WAChD/E,OAAM04B,cAAc9iB,KAAMqF,cAAeuG,aACzCxhB,MAAMwE,eACP,KAAM4S,UAAU5Q,aAI3BxG,MAAMk+B,qBAAuB,SAAU9mB,WACnC,MAAOA,WAAU5Q,SAAW4Q,UAAU5Q,SACd,oBAAnB4Q,UAAUpT,MAA8BhE,MAAMoa,SAASpa,MAAMsa,SAASlD,UAAUpT,MAAO,mBACxF,QAAU5C,QAGlBpB,MAAMwjB,eAAiB,SAAU5N,MAC7B5V,MAAM+D,aAAa,iBAAkB,0DAA2D6R,KAAMA,MACtG,IAAIqa,QAASjwB,MAAM6xB,mBAAmBjc,KAMtC,IALAqa,OAAO8I,eAAeja,UACtBmR,OAAO2I,gBAAgB9Z,UAEvB9e,MAAM4xB,gBAAgBhc,KAAM,cAC5B5V,MAAM4xB,gBAAgBhc,KAAM,UACxB5V,MAAMojB,YAAYxN,MAAtB,CAIA,GAAIM,SAAUN,KAAKM,QACf4nB,WAAa5nB,QAAQ4nB,eACrBK,gBAEJn+B,OAAM6D,KAAKi6B,WAAY,SAAU1mB,UAAWjR,MACxC,GAAKiR,UAAUkhB,cAKXt4B,MAAMi+B,sBAAsBroB,KAAMzP,KAAMiR,eALd,CAC1B,GAAI5Q,UAAWxG,MAAMk+B,qBAAqB9mB,UAC1C+mB,eAAc98B,MAAMwS,UAAW1N,KAAMK,SAAUxG,MAAMgT,cAAcxM,eAM3ExG,MAAMgU,eAAemqB,eACrBn+B,MAAM6D,KAAKs6B,cAAe,SAAU/iB,OAChCpb,MAAM04B,cAAc9iB,KAAMwF,MAAMvH,aAEhCoc,OAAOoI,mBACPr4B,MAAMyM,MAAMwjB,OAAOoI,mBAEvBziB,KAAKmN,gBAAkB,cACvB/iB,MAAMo+B,uBAAuBxoB,KAAMqa,QAEnCjwB,MAAMwE,gBAGVxE,MAAMo+B,uBAAyB,SAAUxoB,KAAMqa,QAC3C,GAAID,cAAehwB,MAAMqwB,mBACrBG,UAAYR,aAAa0D,aAAa9d,MACtCyoB,WAAar+B,MAAMiK,QAAQumB,UAAW,SAAU5a,MAChD,MAAgC,iBAAzBA,KAAKmN,iBAEZsb,YACAzoB,KAAKmN,gBAAkB,cAEvB/iB,MAAMs+B,YAAYtO,aAAcpa,KAAMqa,OAAOlhB,KAAM,oBAI3D/O,MAAMs+B,YAAc,SAAUtO,aAAcpa,KAAM7G,KAAM0a,OACpD7T,KAAKmN,gBAAkB0G,MACvBzpB,MAAM2vB,uBAAuB/Z,KAAM,SAAUsP,MAAO/e,MAChD,GAAI0zB,WAAY7J,aAAathB,YAAYK,KAAM5I,MAC3Ci1B,YAAcpL,aAAaE,WAAWhL,MAAMpP,IAC5CylB,QAAUH,aAAeA,YAAYrsB,OAAS8qB,SAC9C0B,UACAv7B,MAAMs+B,YAAYtO,aAAc9K,MAAO2U,UAAWpQ,SAEtDqG,MAAM,KAWd9vB,MAAMs6B,iBAAmB,SAAUljB,UAAW4Y,cAC1CA,aAAeA,cAAgBhwB,MAAMuwB,gBAAgBnZ,YAAcpX,MAAMqwB,kBACzE,IAAIJ,QAASD,aAAaE,WAAW9Y,UAAUtB,GAC/C,OAAKma,QAGED,aAAa1hB,QAAQ2hB,OAAOlhB,MAFxB,MAUf/O,MAAMu+B,UAAY,SAAUxvB,KAAMmH,QAAS8Z,cACvC,GAAI/rB,QAASjE,MAAM4W,QAAQ7H,KAAMihB,aAMjC,OAJAhwB,OAAM8Q,IAAI7M,OAAOof,QAAS,UAAW,aAAcpf,OAAO6uB,aACtD9uB,KAAMkS,QAAQlS,KACdkS,QAASA,UAENlW,MAAM04B,cAAcz0B,OAAOof,OAAQpf,OAAO6uB,aAOrD9yB,MAAM4W,QAAU,SAAU7H,KAAMihB,cAC5BA,aAAeA,cAAgBhwB,MAAMqwB,kBACrC,IAAI1vB,MAAOX,MAAMoO,MAAMsB,gBAAgBX,KAAMihB,aAAa1hB,SAAS,EAC/C,KAAhB3N,KAAKF,QACLT,MAAM+F,KAAK,oCAEf,IAAI+sB,YAAanyB,KAAK+D,MAAOk1B,WAAa5J,aAAanhB,gBAAgBhK,MAAM,KAAMlE,MAC/E0iB,OAAS2M,aAAa8J,gBAAgBF,WAO1C,OANKvW,SACDrjB,MAAM+F,KAAK,2DAA4DgJ,MAEvEsU,OAAOyP,aACPzP,OAAOyP,YAAYlc,WAGnByM,OAAQA,OACRyP,WAAYA,aASpB9yB,MAAMw+B,gBAAkB,SAAU5E,WAAY1jB,QAAS8Z,cACnDA,aAAeA,cAAgBhwB,MAAMqwB,mBACrCuJ,WAAaA,YAAc,EAC3B,IAAIj5B,MAAOX,MAAMoO,MAAMsB,gBAAgBkqB,WAAY5J,aAAa1hB,SAAS,EACjD,iBAAd,WACN4H,SAAWlS,KAAMkS,SAErB,IAAIlS,MAAOkS,QAAQlS,IACdA,OACDhE,MAAM+F,KAAK,0DAEfmQ,QAAUjW,EAAEyJ,UAAWwM,QACvB,IAAIqD,YAAarD,QAAQqD,WAAavZ,MAAMe,UAAUmV,QAAQqD,WAC9DA,YAAWxS,QAAQ/C,MACnBkS,QAAQlS,KAAO,iBACf,IAAIT,MAAuB,IAAhB5C,KAAKF,MACZ8C,OACAgW,WAAWlY,KAAK,oBAEpB,IAAIyxB,YAAa9yB,MAAMq5B,qBAAqBnjB,QAAQkjB,gBAAkBp1B,KACtErD,MAAKU,KAAKyxB,YACV9yB,MAAMu+B,UAAU59B,KAAMuV,QAAS8Z,eAQnChwB,MAAMy+B,cAAgB,SAAU7E,WAAY/jB,SAAUma,cAClDA,aAAeA,cAAgBhwB,MAAMqwB,kBACrC,IAAI1vB,MAAOX,MAAMoO,MAAMsB,gBAAgBkqB,WAAY5J,aAAa1hB,SAAS,GACrEwkB,WAAa9yB,MAAMq5B,qBAAqBxjB,SAC5ClV,MAAKU,KAAKyxB,YACV9yB,MAAM4W,QAAQjW,KAAMqvB,eASxBhwB,MAAM0+B,iBAAmB,SAAUC,YAAaC,WAAYC,aACxD7+B,MAAMsa,SAASqkB,aACXplB,WAAY,kBACZgJ,mBACIte,OAAQ46B,YACRz4B,OAAQ,MAAQw4B,WAAW94B,KAAK,KAAO,0BAG/C9F,MAAMw+B,mBAAoBG,cAO9B3+B,MAAM8+B,iBAAmB,SAAU/vB,MAC/B,MAAO/O,OAAMqwB,mBAAmByJ,gBAAgB95B,MAAM4H,YAAYmH,MAAQA,KAAKjJ,KAAK,KAAOiJ,OAM/F/O,MAAM,YAAc,aAIpBA,MAAMsa,SAAS,wBACXf,YAAa,qBAOjBvZ,MAAM++B,oBAAsB,SAAUC,OAClC,GAAIhP,cAAehwB,MAAMqwB,mBACrBhd,OAASrT,MAAMy2B,sBAAsBuI,MAAM54B,QAC3CzF,KAAOX,MAAMoO,MAAMsB,gBAAgB2D,OAAOtE,KAAMihB,aAAa1hB,SAAS,EAC1D,aAAZ3N,KAAK,IACLA,KAAKoG,QAAQ,UAEjB,IAAIk4B,gBAAiBj/B,MAAMgT,cAAcgsB,MAAMx4B,SAI/C,OAHIy4B,gBAAersB,aAAeqsB,eAAersB,WAAWxM,SACxD64B,eAAersB,WAAWxM,OAAS,cAGnCA,OAAQ,MAAQiN,OAAO8hB,QAAU,KAAOnF,aAAanhB,gBAAgBhK,MAAM,KAAMlE,MACjFsD,QACIpC,KAAMm9B,MAAMn9B,KACZ+7B,SAAUoB,MAAMpB,SAChBt9B,KAAM0+B,MAAM1+B,KACZkG,SAAUxG,MAAMoT,eAAe6rB,mBAK3Cj/B,MAAMk/B,eAAiB,SAAUC,QAC7B,GAAIC,mBAAoBp/B,MAAM+C,UAAUo8B,OAAQn/B,MAAM++B,qBAClDjM,WAAa,wBAA0B9yB,MAAMiS,cAKjD,OAJAjS,OAAMu+B,WAAWzL,aACb9uB,KAAM,uBACNue,kBAAmB6c,oBAEhBtM,YAGX9yB,MAAMq/B,iBAAmB,SAAUC,WAC/Bt/B,MAAM4W,SAAS0oB,aAKnBt/B,MAAMu/B,oBAAsB,SAAUt7B,OAAQu7B,QAAS5pB,MACnD,OACI/Q,MAAO,SAAU46B,OAAQn/B,MAGrB,GAAIo/B,cAAe1/B,MAAMu4B,cAAciH,QAAS5pB,KACnB,iBAAnB,gBACN8pB,aAAe1/B,MAAMgR,eAAe0uB,eAEnCA,cACD1/B,MAAM+F,KAAK,+BAAiCy5B,QAAU,cAE1D,IAAIG,cAAeD,aAAaz7B,OAAOkJ,OAOvC,OAN6B,kBAAnB,eACNnN,MAAM+F,KAAK,UAAW25B,aAAc,iBAAmBF,QAAU,wBAA0Bv7B,OAAOkJ,OAAS,yBAE3GnN,MAAMqE,aAAarE,MAAMsE,SAASC,QAClCvE,MAAM4D,IAAI5D,MAAMsE,SAASC,MAAO,sBAAuBjE,KAAM,cAAgB2D,OAAOkJ,OAAS,gBAAiBuyB,cAE3GC,aAAa96B,MAAM66B,aAAcp/B,SAKpDN,MAAM4/B,mBAAqB,SAAU37B,OAAQ2R,MACzC,OACI/Q,MAAO,SAAU46B,OAAQn/B,KAAMkhB,YAAaqe,aACxC,GAAIxsB,QAASrT,MAAM8/B,yBAAyBlqB,KAAM,6BAA8B3R,OAAO87B,YACnF78B,MAAQlD,MAAMu4B,cAAct0B,OAAOf,MAAO0S,QAAU5V,MAAM0J,OAAO8X,aAAczc,UAAazE,QAC5FW,QAAU4+B,aAAeA,YAAY1/B,QAAU0/B,YAAY1/B,OAAOM,OAAST,MAAMe,UAAUkD,OAAO9D,QAAQmF,OAAOu6B,YAAY1/B,QAAU8D,OAAO9D,MAClJkT,QAAOiQ,QAAQ4G,OAAO7W,OAAO2sB,UAAW98B,MAAOe,OAAOD,KAAM/C,YAMxEjB,MAAMigC,mBAAqB,SAAUh8B,OAAQ2R,KAAMsqB,UAC/C,GAA0B9+B,SAAtB6C,OAAO87B,WACP,MAAO//B,OAAM4/B,mBAAmB37B,OAAQ2R,KAAMsqB,SAElD,IAAIV,SAAUv7B,OAAO,OAIrB,OAHIA,QAAOkJ,OAASqyB,SAChBx/B,MAAM+F,KAAK,UAAW6P,KAAM,wEAEzB3R,OAAOkJ,OAASnN,MAAMu/B,oBAAoBt7B,OAAQu7B,QAAS5pB,MAAQ,MAG9E5V,MAAMmgC,2BAA6B,SAAUvC,SAAUzI,SACnD,GAAI7a,UAAWta,MAAMsa,SAASsjB,SAI9B,OAHItjB,WAAYta,MAAMoa,SAASE,SAAU,oBACrCta,MAAM+F,KAAK,4DAA8D63B,SAAW,sBAAwBzI,QAAU,mEAEnHn1B,MAAMgR,eAAe4sB,WAGhC59B,MAAMoxB,YAAc,SAAUxb,KAAMsb,UAAW/qB,MAC3C+qB,UAAYlxB,MAAM+a,qBAAqBmW,WAChB9vB,SAAnB8vB,UAAU5wB,MAAsB4wB,UAAU5wB,OAASN,MAAM+N,UAAa/N,MAAM4H,YAAYspB,UAAU5wB,QAClG4wB,UAAU5wB,KAAON,MAAMe,UAAUmwB,UAAU5wB,MAE/C,IAAIuB,MAAO7B,MAAMigC,mBAAmB/O,UAAWtb,MAC3CwqB,UAAYpgC,MAAMqgC,UAAUnP,UAAU5wB,MACtCkhB,eACA+W,cAAgBv4B,MAAMi7B,yBAAyBrlB,KAAM4L,aAAa,EAOtE,OANA3f,MAAOA,OAASqvB,UAAU0M,SAAW59B,MAAMmgC,2BAA2BjP,UAAU0M,SAAU,cAAgB59B,MAAM0X,gBAAgBwZ,UAAUrvB,KAAM+T,OAC3I/T,MAASA,KAAKgD,MAERhD,OAAS7B,MAAMiJ,gBACtBjJ,MAAM+F,KAAK,gCAAiC6P,KAAM,wBAA0BzP,KAAO,+BAAiC+qB,UAAUrY,gBAAkB,0DAFhJ7Y,MAAM+F,KAAK,kHAAoHlE,KAAO,SAAUqvB,WAI7I,WACClxB,MAAM+B,iBAAkB,GACxB/B,MAAM+D,aAAa,gBAAiB,+FAC/BoC,KAAMA,KAAMlC,OAAQitB,UAAWniB,KAAM/O,MAAMq6B,kBAAkBzkB,MAAOA,KAAMA,MAEnF,IAAIxV,MAAMkgC,SAgBV,OAf6B,cAAzB1qB,KAAKmN,gBACL/iB,MAAM4D,IAAI5D,MAAMsE,SAAS6J,KAAM,4BAA8BhI,KAAO,iBAAkByP,KAAM,8BAE5F4L,YAAYzc,UAAYA,UACD3D,SAAnB8vB,UAAU5wB,MAAsB4wB,UAAU5wB,OAASN,MAAM+N,SACzDuyB,UAAYv7B,WAEZ/E,MAAMugC,oBAAoBH,UAAW7H,eACrC+H,UAAYF,UAAUjgC,QAE1BC,KAAOyB,KAAKgD,MAAM,KAAMy7B,YAExBtgC,MAAM+B,iBAAkB,GACxB/B,MAAMwE,cAEHpE,OAKfJ,MAAMyU,MAAM+rB,yBAA2B,SAAUrgC,QAC7C,GAAI8vB,QAASjwB,MAAM6xB,mBAAmB1xB,OACtC,OAAO,UAAUsU,OACb,OAAQ6B,YAAa,SAAU3B,SAAUd,UAAWrN,SAAU8O,cAAeiB,YACzEvW,MAAM24B,eAAelkB,MAAOE,SAAUsb,OAAQ1Z,YAC9C9B,MAAM6B,YAAYzR,MAAM,KAAME,eAK1C/E,MAAMyU,MAAMgsB,eAAiB,SAAUzoB,UAAW0oB,SAAUC,OAExD,QAASC,aACL,GAAIC,QAAS7gC,MAAMoK,KAAK4N,UAAW,SAAU9U,MAAO7C,KAChD,GAAsBe,SAAlB0/B,SAASzgC,KACT,OAAO,GAGf,KAAKwgC,OAAQ,CACT,GAAIE,UAAWD,QACfA,aACAJ,SAASK,WAVjB,GAAID,YAaJ9gC,OAAM6D,KAAKmU,UAAW,SAAUvD,MAAOuB,WACnC2qB,MAAMlsB,OAAO6B,YAAY,WACrBwqB,SAAS9qB,WAAahW,MAAMe,UAAUgE,WACtC67B,iBAKZ5gC,MAAMyU,MAAMusB,iBAAmB,SAAUprB,KAAMjB,SAAUqB,UAAWgC,UAAWipB,cACpD7/B,SAAnB4W,UAAU1X,MAAsB0X,UAAU1X,OAASN,MAAM+N,UAAa/N,MAAM4H,YAAYoQ,UAAU1X,QAClG0X,UAAU1X,KAAON,MAAMe,UAAUiX,UAAU1X,OAE/CqU,SAAW3U,MAAMyU,MAAMc,gBAAgBZ,SACvC,IAAIusB,aAAclhC,MAAMqgC,UAAUroB,UAAU1X,MACxCkhB,eACA+W,cAAgBv4B,MAAMi7B,yBAAyBrlB,KAAM4L,aAAa,GAClEphB,KAAO,WACHJ,MAAM+B,iBAAkB,GACxB/B,MAAM+D,aAAa,mBAAoB,mEAClCiS,UAAWA,UAAWJ,KAAMA,MAGrC,IAAoD0qB,WAAhDhgC,KAAO2gC,aAAel8B,UAAU,GAAKA,SACzCyc,aAAYzc,UAAYzE,KACDc,SAAnB4W,UAAU1X,MAAsB0X,UAAU1X,OAASN,MAAM+N,UACzD/N,MAAMugC,oBAAoBW,YAAa3I,eACvC+H,UAAYY,YAAY/gC,QAExBmgC,UAAYhgC,IAEhB,IAAIF,MAAOuU,SAAS9P,MAAM,KAAMy7B,UAIhC,OAHItgC,OAAM+B,iBAAkB,GACxB/B,MAAMwE,cAEHpE,KAGX,OADAJ,OAAMyU,MAAMK,oBAAoBH,SAAUvU,MACnCA,MAGXJ,MAAMyU,MAAM0sB,qBAAuB,SAAU9gC,KACzC,GAAoB,gBAAV,KACN,MAAO,KAEP,IAAI+gC,SAAUh0B,KAAK0M,IAAIzZ,IAAI2O,YAAY,KAAM3O,IAAI2O,YAAY,KAC7D,OAAO3O,KAAIsC,UAAUy+B,QAAU,IAIvCphC,MAAMyU,MAAMgD,sBAAwB,SAAUT,OAAQpB,KAAMI,UAAWnC,UAAWqsB,UAC9E,GAAImB,QAAS,SAAUp9B,OAAQ4J,OAC3B7N,MAAM+F,KAAK,0DAA2D9B,OAAQ,wFACP4J,OAE3E7N,OAAM+D,aAAa,wBAAyB,4EACvCiS,UAAWA,UAAWJ,KAAMA,MACjC,IAAItB,SAAUtU,MAAMe,UAAUiW,QAC1BsqB,UAAYthC,MAAM+C,UAAUuR,QAAS,SAAUrQ,QAI/C,GAAIstB,UAAWvxB,MAAMyF,YAAYxB,SAAWA,OAAO85B,UAAYppB,SAAU1Q,QAAUjE,MAAMyJ,KAAKxF,QAC1Fs9B,UAAYvhC,MAAMigC,mBAAmBh8B,OAAQ2R,KAAMsqB,SACnDqB,WACAhQ,SAAS5c,SAAW4sB,UAGpBhQ,SAAS5c,SAAW4c,SAAS5c,UAAY4c,SAAS1vB,MAAQ0vB,SAASqM,SAElErM,SAAS5c,UACV0sB,OAAOp9B,OAAQ,0FAEnB,IAAIqR,eAAgBrR,OAAOkJ,OACvBnN,MAAMyU,MAAM0sB,qBAAqBl9B,OAAO,SAAW,IAAMA,OAAOkJ,OAChEnN,MAAMyU,MAAM0sB,qBAAqB5P,SAAS5c,SACzC4c,UAAS1d,WAAcA,YAAayB,gBACrCic,SAASjc,eAAgB,EACzBic,SAAS1d,WAAa5P,OAAO4U,gBAAkB5U,OAAO4U,gBAAkBjD,KAAKC,UAAY,IAAMP,cAEnG,IAAIX,UAAW4c,SAAS5c,SAAW3U,MAAMu4B,cAAchH,SAAS5c,SAAUiB,KACrEjB,WACD0sB,OAAOp9B,OAAQ,GAEnB,IAAIoT,QAAQ,CAOZ,OAN0B,sBAAtB1C,SAASkB,WACTlB,SAAWA,SAAS1O,KACpBoR,OAAQ,GAEZka,SAAS5c,SAAYurB,WAAa3O,SAASjxB,MAAqB,yBAAbqU,UAAuC0C,OAAUrX,MAAMyU,MAAMusB,iBAAiBprB,KAAMjB,SAAUqB,UAAWub,UAAY5c,SACxK4c,SAAShb,WAAavW,MAAMiS,eACrBsf,WAEPnxB,MACAkU,QAASgtB,UACTxpB,aAAcooB,SAAWlgC,MAAMyU,MAAM+rB,yBAAyB5qB,MAAQ,KAG1E,OADA5V,OAAMwE,cACCpE,MAGXJ,MAAMyU,MAAM+jB,eAAiB,SAAU5iB,KAAMnB,OACzC,GAAI+sB,OAWJ,OARIA,QAFkB,gBAAZ,QAA4C,MAApB/sB,MAAMjM,OAAO,GAElCxI,MAAM4xB,gBAAgBhc,MAAO,SAAUnB,QAGvCzU,MAAMu4B,cAAc9jB,MAAOmB,MAEnC4rB,QAA8B,sBAApBA,OAAO3rB,UAClB7V,MAAM+F,KAAK,yEAA0E0O,MAAO,2BAA4B+sB,QAErHA,QAGXxhC,MAAMyU,MAAMgtB,aAAe,SAAU7rB,KAAMnB,OACvC,MAAyB,gBAAZ,OACTzU,MAAMyU,MAAM+jB,eAAe5iB,KAAMnB,OACjCzU,MAAM+C,UAAU0R,MAAO,SAAUitB,UAC7B,MAAO1hC,OAAMyU,MAAM+jB,eAAe5iB,KAAM8rB,aAIpD1hC,MAAMyU,MAAM0D,aAAe,SAAUvC,KAAMI,UAAWgC,WAClDhY,MAAM+D,aAAa,eAAgB,oEAC9BiS,UAAWA,UAAWJ,KAAMA,MACjC,IAAI+qB,OAAQ3gC,MAAMyU,MAAM+rB,yBAAyB5qB,KACvB,iBAAhB,aACNoC,WAAavD,MAAOuD,WAExB,IAAIvD,OAA+B,sBAAvBuD,UAAUnC,SAAmCmC,UAAYA,UAAUvD,OAASuD,UAAUV,MAC7F7C,QACDzU,MAAM+F,KAAK,2CAA6CiQ,UAAY,iDAAkDgC,UAG1H,IAOIX,OAPAmqB,OAA4B,sBAAnB/sB,MAAMoB,SAAmCpB,MAAQzU,MAAMyU,MAAMgtB,aAAa7rB,KAAMnB,OAEzFktB,WAAiC,sBAApBH,OAAO3rB,SACpB+rB,YAAc5pB,UAAU1X,MAAQqhC,UAKpC,IAAIC,YAAa,CACbvqB,MAAQrX,MAAMiW,gBAAgB9P,KAAM,gBAAkBnG,MAAMyU,MAAMsB,UAAUH,KAAMI,YAClF,IAAI6rB,YAAa7hC,MAAMyU,MAAMusB,iBAAiBprB,KAAMyB,MAAMpR,KAAM+P,UAAWgC,UAAW2pB,WAClFA,YACA3hC,MAAMyU,MAAMgsB,eAAee,OAAQK,WAAYlB,OAG/CA,MAAMa,QAAQlrB,YAAYurB,gBAI9BxqB,QAASxB,SAAU,qBACnBwB,MAAMpR,KAAO,WACT,GAAI67B,WAAY9hC,MAAMe,UAAUgE,UAChC/E,OAAM+D,aAAa,gBAAiB,sCAAuCiS,UAAWA,WACtF,IAAI5V,MAAOohC,OAAOv7B,KAAKpB,MAAM,KAAMi9B,UAEnC,OADA9hC,OAAMwE,cACCpE,MAEXiX,MAAMf,YAAc,SAAU3B,SAAUd,UAAWrN,SAAU8O,cAAeiB,YACxE,GAAIsrB,YAAa7hC,MAAMyU,MAAMusB,iBAAiBprB,KAAMjB,SAAUqB,UAAWgC,UACzE2oB,OAAMa,QAAQlrB,YAAYurB,WAAYhuB,UAAWrN,SAAU8O,cAAeiB,aAE9Ec,MAAMR,eAAiB,SAAUlC,UAC7B6sB,OAAO3qB,eAAelC,UAI9B,OADA3U,OAAMwE,cACC6S,OAOXrX,MAAM+hC,gBAAkB,SAAUC,OAAQngC,KAAM0B,MAC5C,GAAIlD,IACJkD,MAAOA,MAAQvD,MAAMqD,mBACrB,KACI,IAAKhD,MAAO2hC,QACRz+B,KAAKlD,KAAO2hC,OAAO3hC,IAGvB,OADAJ,GAAEyJ,OAAOnG,KAAMy+B,QACRngC,OACT,QACE,IAAKxB,MAAO2hC,cACDz+B,MAAKlD,OAKxBL,MAAMiiC,sBAAwB,SAAU5uB,OAAQ6uB,YAAanxB,IAAKoxB,WAAYC,iBAGtED,aACA9uB,OAAS8uB,WAAW9uB,OAAQtC,KAEhC,IAAIsxB,MAAOhvB,OAAO8hB,QAAUpkB,IAAIsC,OAAO8hB,SAAW+M,WAClD,KAAKG,KAAM,CACP,GAAIC,iBAAkBF,iBAAmBA,gBAAgB/uB,OACzD,OAAOivB,kBAAmBD,KAE9B,MAAOhvB,QAAOkvB,cAAgBlvB,OAAOtE,KAAO/O,MAAMmL,IAAIk3B,KAAMhvB,OAAOtE,OAGvE/O,MAAMwiC,uBAAyB,SAAUN,YAAaC,WAAYM,UAAWL,iBAEzE,MADAK,WAAYA,WAAaziC,MAAMqD,kBACxB,SAAUgQ,QACb,GAAItC,KAAM0xB,WACV,OAAOziC,OAAMiiC,sBAAsB5uB,OAAQ6uB,YAAanxB,IAAKoxB,WAAYC,mBAQjFpiC,MAAM0iC,kBAAoB,SAAUx6B,QAChC,MAAkB,UAAXA,SAAyC,SAAXA,SAChC2E,SAAS3E,QAAU4E,OAAO5E,QAAUA,UAG7ClI,MAAM2iC,mBAAqB,SAAUz6B,OAAQlE,MACzC,GAAI4+B,SAAU16B,OAAOO,QAAQ,KACzBo6B,SAAW36B,OAAOO,QAAQ,IAI9B,KAHIm6B,aAAiBC,eAAmBD,QAAUC,WAC9C7iC,MAAM+F,KAAK,wBAA0B/B,KAAO,yCAA2CkE,QAEvF06B,cAAkBC,cAAiB,CACnC,GAAIC,OAAQ56B,OAAOvF,UAAUkgC,SAAW,EAClB,MAAlB5iC,EAAEwkB,KAAKqe,QACP9iC,MAAM+F,KAAK,wBAA0B/B,KAAO,WAAakE,OAAS,uDAAyD46B,MAE/H,IAAIn0B,QAASzG,OAAOvF,UAAU,EAAGigC,SAC7BG,KAAO9iC,EAAEwkB,KAAKvc,OAAOvF,UAAUigC,QAAU,EAAGC,WAC5CviC,KAAgB,KAATyiC,QAAmB/iC,MAAM+C,UAAUggC,KAAKt0B,MAAM,KAAMxO,EAAEwkB,KAAMzkB,MAAM0iC,mBACzEtiC,KAAOJ,MAAM+a,qBAAqBpM,OAAQ,KAE9C,OADAvO,MAAKE,KAAOA,KACLF,KAKX,MAHkB,aAAT4D,MACLhE,MAAM+F,KAAK,6DAA+DmC,QAEvEA,QAGXlI,MAAMgjC,aAAe,WAErBhjC,MAAMijC,oBAAsB,SAAU/6B,OAAQg7B,QAC1C,GAAIpsB,KAAM5O,MACV,IAA2C,IAAvCA,OAAOO,QAAQzI,MAAMgjC,cAAqB,CAC1C,GAAIG,KAAMj7B,OAAOvF,UAAU3C,MAAMgjC,aAAaviC,OAC9CqW,MACIinB,SAAU/9B,MAAM2iC,mBAAmBQ,IAAK,iBAGvCD,UACLpsB,IAAM9W,MAAM2iC,mBAAmBz6B,OAAQg7B,QAE3C,OAAOpsB,KAGX,IAAIssB,oBACAluB,UAAW,WACXmuB,eAAgB,iBAGhBC,eAAiBrjC,EAAEyJ,QACnByR,SAAU,WACXioB,kBAEHpjC,OAAMujC,iBAAmB,SAAU5iC,KAAMyF,OAAQjG,QAC7CH,MAAMwjC,uBAAuB7iC,KAAMA,KAAKF,OACxC,IAAIgjC,KAAM9iC,KAAKF,OAAS,EAAIE,KAAKA,KAAKF,OAAS,GAAK,GAChDyiC,OAASI,eAAeG,MACvBP,QAAUviC,KAAKF,OAAS,IACzByiC,OAASE,kBAAkBziC,KAAKA,KAAKF,OAAS,KAElDT,MAAM6D,KAAK1D,OAAQ,SAAU+C,MAAO7C,KAChC,MAAIL,OAAM0F,cAAcxC,QACpBkD,OAAO/F,KAAOL,MAAMqJ,eAAenG,OACnCvC,KAAKU,KAAKhB,KACVL,MAAMujC,iBAAiB5iC,KAAMyF,OAAO/F,KAAM6C,WAC1CvC,MAAK+D,QAGkB,gBAAZ,SACXxB,MAAQlD,MAAMijC,oBAAoB//B,MAAOggC,cAE7C98B,OAAO/F,KAAO6C,WAItBlD,MAAMub,cAAgB,SAAUrF,SAC5B,GAAI9V,QAEJ,OADAJ,OAAMujC,oBAAqBnjC,KAAM8V,SAC1B9V,MAKXJ,MAAM0jC,UAAY,SAAUx7B,OAAQgO,SAChC,GAAwB,QAApBA,QAAQytB,QACR,MAAOz7B,OAEN,IAA+B,IAA3BgO,QAAQytB,QAAQljC,QACrB,GAAIyH,OAAOM,OAAO,KAAO0N,QAAQytB,QAC7B,MAAOz7B,QAAOvF,UAAU,OAG3B,IAAwB,QAApBuT,QAAQytB,QAAmB,CAChC,GAAIC,IAAK17B,OAAOO,QAAQ,MACpBo7B,GAAK37B,OAAO8G,YAAY,IAC5B,IAAW,IAAP40B,IAAYC,QACZ,MAAO37B,QAAOvF,UAAU,EAAGkhC,MAKvC7jC,MAAM8jC,qBAAuB,SAAU57B,OAAQgO,SAC3C,GAAI3H,IAAKvO,MAAM0jC,UAAUx7B,OAAQgO,QACjC,OAAIlW,OAAMsI,eAAeiG,IACdvO,MAAMy2B,sBAAsBloB,IAEhCA,IAAMQ,KAAMR,IAAMA,IAY7BvO,MAAMy2B,sBAAwB,SAAUsN,UAAWxhC,MAAOssB,WACtDtsB,MAAQA,OAAS,CACjB,IAAoDyhC,SAAS7O,QAAS8G,OAAlEgI,SAA2C,MAAhCF,UAAUv7B,OAAOjG,MAAQ,EACpC0hC,WACAhI,OAASj8B,MAAMy2B,sBAAsBsN,UAAWxhC,MAAQ,EAAG,KAC3DyhC,QAAU/H,OAAOiI,QAEjBF,QAAUD,UAAUt7B,QAAQ,IAAKlG,MAAQ,GAEzCyhC,cACAhkC,MAAM+F,KAAK,mCAAsCg+B,UAAY,4CAG7D5O,QADA8O,SACUhI,OAEA8H,UAAUphC,UAAUJ,MAAQ,EAAGyhC,QAE7C,IAAIE,QAASrV,UAAYkV,UAAUt7B,QAAQomB,UAAWmV,QAAU,GAAKD,UAAUtjC,OAC3EsO,KAAOg1B,UAAUphC,UAAUqhC,QAAU,EAAGE,OAI5C,OAHuB,MAAnBn1B,KAAKvG,OAAO,KACZuG,KAAOA,KAAKpM,UAAU,KAElBwyB,QAASA,QAASpmB,KAAMA,KAAMm1B,OAAQA,SAGlDlkC,MAAM46B,uBAAyB,SAAUvnB,QACrC,GAAI8hB,SAAU9hB,OAAO8hB,OACrB,OAAO,KAA2B,gBAAd,SAAyBA,QAAUn1B,MAAM46B,uBAAuBzF,UAAY,KAAO9hB,OAAOtE,KAAO,IAAMsE,OAAOtE,KAAO,KAI7I/O,MAAMmkC,oBAAsB,SAAUj8B,OAAQgO,SAC1C,QAASkuB,OAAM/wB,QACXrT,MAAM+D,aAAa,sBAAuB,mCAAoCsP,OAAQA,QACtF,IAAIjT,MAAO8V,QAAQ8kB,QAAQ3nB,OAG3B,OAFArT,OAAM+D,aAAa,uBAAwB,0CAA2CsP,OAAQA,OAAQnQ,MAAO9C,OAC7GJ,MAAMwE,YAAY,GACXpE,KAEX,GAAIiT,OACJ,IAAI6C,QAAQmuB,iBAAmBrkC,MAAMsI,eAAeJ,QAEhD,MADAmL,QAASrT,MAAMy2B,sBAAsBvuB,QAC9Bk8B,MAAM/wB,OAEZ,IAAI6C,QAAQytB,SAA+B,QAApBztB,QAAQytB,UAChCtwB,OAASrT,MAAM8jC,qBAAqB57B,OAAQgO,UAExC,MAAOkuB,OAAM/wB,OAGrB,MAA0B,gBAAb,SAAuB,CAChC,GAAIuwB,IAAK17B,OAAOO,QAAQ,MACpBo7B,GAAK37B,OAAOO,QAAQ,IAAKm7B,GAAK,EAClC,IAAIA,SAAaC,QAiBb,KAhB8B,OAA1B37B,OAAOM,OAAOo7B,GAAK,IACnBvwB,OAASrT,MAAMy2B,sBAAsBvuB,OAAQ07B,GAAK,EAAG,KACrDC,GAAKxwB,OAAO6wB,QAGZ7wB,QAAUtE,KAAM7G,OAAOvF,UAAUihC,GAAK,EAAGC,IAE7C,IAAIS,MAAOF,MAAM/wB,QACbkxB,IAAc,IAAPX,IAAYC,KAAO37B,OAAOzH,OAAS,CAE9C,IAAaW,SAATkjC,MAA+B,OAATA,KACtB,MAAOA,KAEXp8B,QAASq8B,IAAMD,KAAOp8B,OAAOvF,UAAU,EAAGihC,IAAMU,KAAOp8B,OAAOvF,UAAUkhC,GAAK,GAMrF,MAAO37B,SAQXlI,MAAMwkC,oBAAsB,SAAUp+B,OAAQtF,EAAGH,KAAMR,OAAQqa,YAAatE,SACxE,GAAI/V,OAAO49B,SAAU,CACjB,GAAIxM,UAAWvxB,MAAMykC,eAAer+B,OAAQjG,OAAQ+V,QACpD,IAAIlW,MAAMyF,YAAY8rB,YAAcvxB,MAAM0F,cAAc6rB,WAAcvxB,MAAM4H,YAAY2pB,UAAYvxB,MAAM4H,YAAYxB,QAClH,MAAOmrB,SAGPtxB,GAAEyJ,QAAO,EAAMtD,OAAQmrB,UAmB/B,MAXAvxB,OAAM6D,KAAK1D,OAAQ,SAAUod,UAAWld,KAClBe,SAAdmc,UACAnX,OAAO/F,KAAOe,OAED,aAARf,MACLM,KAAKG,GAAKT,IACNL,MAAMyQ,aAAayF,QAAQ+M,WAAYtiB,KAAMG,MAAO,GACpDoV,QAAQyH,SAASvX,OAAQ/F,IAAKS,EAAI,EAAGH,KAAMR,OAAQqa,gBAIxDpU,QAcXpG,MAAM0kC,eAAiB,SAAUvkC,QAC7B,MAAOH,OAAMyF,YAAYtF,UAAYH,MAAM0F,cAAcvF,SAG7DH,MAAM2kC,aAAe,SAAUzuB,QAAS9P,OAAQtF,EAAGH,KAAMikC,UAAWzkC,OAAQqc,OAAQqoB,SAChF,GAAItT,UAAUuT,QACVxnB,WAAatd,MAAMuc,iBAAiBC,OA0BxC,OAzBwB,gBAAb,SAA0Bc,WAAWkF,SASvClF,WAAWkF,UAAYxiB,MAAM0kC,eAAevkC,QACjDoxB,SAAWpxB,OAENA,OAAO49B,SACZxM,SAAWvxB,MAAMykC,eAAeG,UAAWzkC,OAAQ+V,UAGnDqb,SAAWvxB,MAAMqJ,eAAelJ,QAChC2kC,SAAU,GAhBL5uB,QAAQ6uB,WAAkC,MAArB5kC,OAAOqI,OAAO,GAKpC+oB,SAAWpxB,QAJXH,MAAM+D,aAAa,qBAAsB,sDAAuD5D,OAAQA,OAAQ4O,KAAM/O,MAAM+O,KAAKlK,MAAM,KAAMlE,KAAKyT,MAAM,EAAGtT,MAC3JywB,SAAWvxB,MAAMmkC,oBAAoBhkC,OAAQ+V,SAC7ClW,MAAMwE,YAAY,IAetB+sB,WAAavxB,MAAM+N,UACnB62B,UAAUrT,UAEVuT,SACAD,QAAQtT,SAAUpxB,OAAQW,EAAGH,KAAM6b,QAEhC+U,UAGXvxB,MAAMwjC,uBAAyB,SAAU7iC,KAAMG,GACvCA,EAAId,MAAMwJ,0BACVxJ,MAAM+F,KAAK,8DAA+DpF,KAAM,aAAeG,EAAG,6HAI1Gd,MAAMglC,mBAAqB,SAAU9uB,SACjC,GAAI2uB,SAAU,SAAUz+B,OAAQjG,OAAQW,EAAGH,KAAM6b;AAC7C,MAAOxc,OAAMwkC,oBAAoBp+B,OAAQtF,GAAK,EAAGH,SAAYR,OAAQqc,OAAQtG,UAE7EyH,SAAW,SAAUvX,OAAQD,KAAMrF,EAAGH,KAAMR,OAAQqc,QAcpD,QAASooB,WAAU1hC,OACfkD,OAAOD,MAAQjD,MAbnB,GADAlD,MAAMwjC,uBAAuB7iC,KAAMG,GAC9BsF,OAAL,CAGA,GAAIA,OAAOgC,eAAejC,MACtB,MAAOC,QAAOD,KAEH/E,UAAXjB,SACAA,OAASO,iBAAiBwV,QAAQ/V,OAAQQ,KAAMG,EAAI,EAAGoV,QAAQrV,gBAC/D2b,OAAS9b,iBAAiBwV,QAAQsE,YAAa7Z,KAAMG,EAAI,EAAGd,MAAMyd,kBAEtE,IAAItc,YAAa+U,QAAQrV,eAAeV,OAAQgG,KAAMrF,EAAGH,MACrD2c,WAAatd,MAAMyd,iBAAiBjB,OAAQrW,KAIhD,OAAOnG,OAAM2kC,aAAazuB,QAAS9P,OAAQtF,EAAGH,KAAMikC,UAAWzjC,WAAYmc,WAAYunB,UAI3F,OAFA3uB,SAAQ2uB,QAAUA,QAClB3uB,QAAQyH,SAAWA,SACZA,UAGX3d,MAAMsa,SAAS,2BACXqpB,QAAkB,MAClBU,iBAAkB,EAClBj+B,OAAkBpG,MAAMilC,mBAG5BjlC,MAAM08B,kBAAoB,SAAUv8B,OAAQ+V,SAyBxC,MAxBAA,SAAUjW,EAAEyJ,UAAW1J,MAAM2Z,YAAY,2BAA4BzD,SACrEA,QAAQ6uB,UAAgC,QAApB7uB,QAAQgvB,SAAqBhvB,QAAQmuB,gBACzDnuB,QAAQyuB,aAAe,SAAUxkC,QAC7B,MAAOH,OAAM2kC,aAAazuB,QAAS,KAAM,KAAOlW,MAAMgJ,SAAU7I,OAAQ+V,QAAQsE,aAAa,IAE5Fxa,MAAM0kC,eAAevkC,SAUtB+V,QAAQyH,SAAW3d,MAAMyd,iBACzBvH,QAAQ4I,QAAU9e,MAAMgJ,SACD,gBAAb,QACNkN,QAAQ9P,OAAS8P,QAAQyuB,aAAaxkC,QAGtC+V,QAAQ9P,OAASjG,SAfrB+V,QAAQ/V,OAASA,OACjB+V,QAAQ9P,OAASpG,MAAMqJ,eAAelJ,QACtC+V,QAAQrV,eAAiBqV,QAAQrV,gBAAkBb,MAAMyd,iBACzDzd,MAAMglC,mBAAmB9uB,SACzBA,QAAQ4I,QAAU,WACd5I,QAAQ9P,OAASpG,MAAMwkC,oBAAoBtuB,QAAQ9P,OAAQ,KAAO8P,QAAQ/V,OAAQ+V,QAAQsE,YAAatE,WAaxGA,SAIXlW,MAAM28B,OAAS,SAAUx8B,OAAQ+V,SAC7B,GAAIqiB,eAAgBv4B,MAAM08B,kBAAkBv8B,OAAQ+V,QAEpD,OADAqiB,eAAczZ,UACPyZ,cAAcnyB,QAGzBpG,MAAMmlC,iBAAmB,SAAU5hC,KAAMpD,OAAQyJ,OAAQC,OAAQu7B,UAE7D,QAASC,cAAatH,UAClBx6B,KAAK+hC,UAAUjkC,MAAM08B,SAAUA,SAAUn0B,OAAQA,OAAQC,OAAQA,eAC1DD,QAAOC,QAElB,GALA7J,MAAMwjC,uBAAuB4B,SAAUA,SAAS3kC,QAK5CT,MAAMsI,eAAenI,QAAS,CAC9B,GAAIkT,QAASrT,MAAMy2B,sBAAsBt2B,QACrCQ,KAAOX,MAAMoO,MAAME,QAAQ+E,OAAOtE,KACtCs2B,eACIE,SAAUvlC,MAAM+9B,SAASqG,MACzBjP,QAAS9hB,OAAO8hB,QAChBx0B,KAAMA,WAEHX,OAAM0F,cAAcvF,UACvBA,OAAO49B,UACP59B,OAAO49B,SAASwH,SAAWvlC,MAAMgR,eAAe7Q,OAAO49B,SAAS/5B,MAAQ,oBACxEqhC,aAAallC,OAAO49B,WAEpB/9B,MAAM6D,KAAK1D,OAAQ,SAAU+C,MAAO7C,KAChC+kC,SAAS/jC,KAAKhB,KACdL,MAAMmlC,iBAAiB5hC,KAAML,MAAO/C,OAAQE,IAAK+kC,UACjDA,SAAS1gC,UAMzB1E,MAAMqgC,UAAY,SAAUlgC,QACxB,GAAIoD,OACA+hC,aACAnlC,OAAQH,MAAM0kC,eAAevkC,QAAUA,OAASH,MAAMyJ,KAAKtJ,QAG/D,OADAH,OAAMmlC,iBAAiB5hC,KAAMA,KAAKpD,OAAQoD,KAAM,aACzCA,MAIXvD,MAAM0X,gBAAkB,SAAUvX,OAAQyV,KAAM4L,aAC5C,GAAItL,SAAUlW,MAAMi7B,yBAAyBrlB,KAAM4L,aAAa,GAC5Dje,KAAOvD,MAAMqgC,UAAUlgC,OAE3B,OADAH,OAAMugC,oBAAoBh9B,KAAM2S,SACzB3S,KAAKpD,QAIhBH,MAAMugC,oBAAsB,SAAUh9B,KAAM2S,SAExC,IAAK,GADDovB,WAAY/hC,KAAK+hC,UACZxkC,EAAI,EAAGA,EAAIwkC,UAAU7kC,SAAUK,EAAG,CACvC,GAAIi9B,UAAWuH,UAAUxkC,EACzBi9B,UAASn0B,OAAOm0B,SAASl0B,QAAUk0B,SAASA,SAASwH,SAAS,KAAMxH,SAAU7nB,WAItFlW,MAAMykC,eAAiB,SAAUG,UAAWzkC,OAAQ+V,SAChD,GAAI6nB,UAAW/9B,MAAMgR,eAAe7Q,OAAO49B,SAAS/5B,MAAQ,mBAI5D,OAHK+5B,WACD/9B,MAAM+F,KAAK,8BAAgC5F,OAAO49B,SAAS/5B,MAExD+5B,SAAS6G,UAAWzkC,OAAQ+V,UAGvClW,MAAMuR,kBAAkB,kBAGxBvR,MAAM+9B,SAASqG,MAAQ,SAAUQ,UAAWzkC,OAAQ+V,SAChD,GAAIsL,aAActL,QAAQsL,YAAa2T,QAAUh1B,OAAO49B,SAAS5I,QAASx0B,KAAOR,OAAO49B,SAASp9B,KAE7F6kC,QAAmCpkC,SAAzBogB,YAAY2T,SACtBsQ,cAAgBvvB,QAAQgK,YAAY6C,gBAGpCyX,KAAyB,oBAAlBiL,eAAyD,cAAlBA,cAC9CruB,UAAYouB,QAAUhkB,YAAY2T,SAAWn1B,MAAM22B,eAAexB,QAASjf,QAAQgK,YAAasa,KACpG,IAAIpjB,UAAW,CACX,GAAI7T,MAAO6T,SACX,IAAIouB,SAAyC,iBAA9BpuB,UAAU2L,gBACrB,IAAK,GAAIjiB,GAAI,EAAGA,EAAIH,KAAKF,SAAUK,EAC/ByC,KAAOA,KAAOA,KAAK5C,KAAKG,IAAMM,WAGlCmC,MAAOvD,MAAM4xB,gBAAgBxa,UAAWzW,KAK5C,OAHaS,UAATmC,MAAuBiiC,UACvBjiC,KAAOvD,MAAM4xB,gBAAgBxa,UAAWzW,OAErC4C,KACA5C,KAAKF,OAAS,GACrBT,MAAM06B,2BAA2Bv6B,OAAO49B,SAAU7nB,QAAQgK,cAUlElgB,MAAM0lC,WAAa,SAAUd,UAAWzkC,OAAQ+V,SAC5C,GAAI6nB,UAAW59B,OAAO49B,SAClBz9B,KAAON,MAAMe,UAAUg9B,SAASz9B,KACpCy9B,UAASz9B,KAAOA,KACZ4V,QAAQ2uB,QACRvkC,KAAO4V,QAAQ2uB,WAAYvkC,OAE3By9B,SAAW/9B,MAAM0X,gBAAgBqmB,SAAU7nB,QAAQgK,YAAahK,QAAQsL,aACxElhB,KAAOy9B,SAASz9B,KAEpB,IAAIqlC,WAAY5H,SAASl8B,MAAQk8B,SAASH,SACtC/7B,MAAQqU,QAAQyuB,aAAezuB,QAAQyuB,aAAagB,WAAaA,YAAc3lC,MAAMigC,mBAAmBlC,SAAU7nB,QAAQgK,YAO9H,OANqB,gBAAX,QACNre,KAAO7B,MAAMgR,eAAenP,OAE3BA,MACD7B,MAAM+F,KAAK,4BAA6Bg4B,SAAU,KAAO4H,UAAY,sDAAuDzvB,QAAQgK,aAEjIre,KAAKgD,MAAM,KAAMvE,OAI5BN,MAAMwiB,SAAW,SAAUoiB,UAAWzkC,QAClC,MAAOA,QAAO49B,SAAS76B,MAAQ/C,OAAO49B,SAAS76B,MAAQ/C,OAAO49B,SAAS6H,OAG5ElgB,OAAQ3lB,YC/4EX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YAQAA,OAAMoO,MAAMy3B,wBAA0B,SAAUrkC,aAC5C,MAAO,UAAU+B,KAAMiM,QAASjN,OAC5B,MAAiB,KAAVA,OAAef,YAAYgO,SAC9BhO,YAAYgO,SAAWpO,SAInCpB,MAAMoO,MAAM03B,uBAAyB,SAAUviC,KAAMiM,SACjD,GAAsBpO,SAAlBmC,KAAKiM,SAEL,MADAjM,MAAKiM,YACEjM,KAAKiM,UAIpBxP,MAAMoO,MAAM23B,qBAAuB,SAAUxiC,KAAMiM,SAC/C,MAAOjM,MAAKiM,UAGhBxP,MAAMoO,MAAM8qB,qBAAuB,SAAU31B,KAAMiM,SAC/C,GAAIjM,KAAKgM,mBACL,MAAOhM,MAAKgM,mBAAmBC,UAIvCxP,MAAMoO,MAAM43B,qBAAuB,SAAUziC,KAAM5C,KAAMwP,QAASP,OAAQQ,QAGtE,IAAK,GAFD6oB,YAAarpB,OAAOqpB,WACpBr4B,MAAQD,KAAKF,OAAS2P,OACjBtP,EAAIqP,QAASrP,EAAIF,QAASE,EAAG,CAClC,IAAKyC,KACD,MAAOA,KAGX,KAAK,GADD0iC,UACKzlC,EAAI,EAAGA,EAAIy4B,WAAWx4B,SAC3BwlC,SAAWhN,WAAWz4B,GAAG+C,KAAM5C,KAAKG,GAAIA,EAAI,EAAGH,MAC9BS,SAAb6kC,YAFiCzlC,GAMrCylC,WAAajmC,MAAM+N,WACnBk4B,SAAW7kC,QAEfmC,KAAO0iC,SAEX,MAAO1iC,OAIXvD,MAAMoO,MAAM83B,oBAAsB,SAAU3iC,KAAMgL,GAAIqB,OAAQI,UAC1D,MAAOhQ,OAAMoO,MAAM+3B,mBAAmB5iC,KAAMgL,GAAIvO,MAAM+N,SAAU6B,OAAQI,UAAU,IAItFhQ,MAAMoO,MAAMg4B,aAAe,SAAUx2B,QACjC,MAAO,UAAUy2B,SAAU93B,IACvB,MAAOvO,OAAMoO,MAAM83B,oBAAoBG,SAAS9iC,KAAMgL,GAAIqB,OAAQy2B,SAAS1lC,QAInFX,MAAMoO,MAAMkB,gBAAkB,SAAU/L,KAAMgL,GAAIqB,OAAQI,UACtD,MAAOhQ,OAAMoO,MAAM+3B,mBAAmB5iC,KAAMgL,GAAIvO,MAAM+N,SAAU6B,OAAQI,WAG5EhQ,MAAMoO,MAAMiB,gBAAkB,SAAU9L,KAAMgL,GAAIpL,SAAUyM,OAAQI,UAChEhQ,MAAMoO,MAAM+3B,mBAAmB5iC,KAAMgL,GAAIpL,SAAUyM,OAAQI,WAG/DhQ,MAAMoO,MAAM+3B,mBAAqB,SAAU5iC,KAAMgL,GAAIpL,SAAUyM,OAAQI,SAAUC,YAG7E,GAAKjQ,MAAMyF,YAAY8I,KAAQvO,MAAM4H,YAAY2G,IAe7C,MAAOvO,OAAMoO,MAAM2B,WAAWxM,KAAMgL,GAAIpL,SAAUyM,OAAQI,SAAUC,WAAYjQ,MAAMoO,MAAM43B,qBAd5F,IAAI3lC,KAAMkO,GAAGvK,MAAQ,UACjBsiC,SAAW12B,OAAO22B,UAAUlmC,IAC3BimC,WACDtmC,MAAM+F,KAAK,mCAAqC1F,IAEpD,IAAImmC,UAAWxmC,MAAMoO,MAAMg4B,aAAax2B,QACpCy2B,UAAY9iC,KAAMA,KAAM5C,KAAMqP,SAKlC,OAJAq2B,UAAWC,SAASD,SAAU93B,GAAIi4B,UAC9Bj4B,GAAGQ,MAAQs3B,WACXA,SAAWG,SAASH,SAAU93B,GAAGQ,OAE9BkB,WAAao2B,SAAYA,SAAWA,SAAS9iC,KAAOnC,QAmBnEpB,MAAMuR,kBAAkB,kBAExBvR,MAAMu6B,SAASkM,mBAAqB,SAAUC,OAAQ33B,KAAMjO,GACxD,GAAI0O,SAAU,IACVk3B,UACAl3B,QAAU,GAId,KAFA,GAAIm3B,UAAU,EACV/lC,MAAQmO,KAAKtO,OACVK,EAAIF,QAASE,EAAG,CACnB,GAAI6S,GAAI5E,KAAKvG,OAAO1H,EACpB,IAAK6lC,QAYDA,SAAU,EACM,OAAZn3B,UACAA,SAAWmE,OAdL,CACV,GAAU,MAANA,EACA,KAEW,QAANA,EACLgzB,SAAU,EAEO,OAAZn3B,UACLA,SAAWmE,IAavB,MAHgB,QAAZnE,UACAk3B,OAAO,GAAKl3B,SAET1O,EAGX,IAAI8lC,gBAOJ5mC,OAAMu6B,SAASjsB,QAAU,SAAUS,MAI/B,IAHA,GAAI3O,SACAmC,MAAQ,EACR3B,MAAQmO,KAAKtO,OACV8B,MAAQ3B,OAAO,CAClB,GAAIimC,UAAW7mC,MAAMu6B,SAASkM,mBAAmBG,aAAc73B,KAAMxM,MACrEnC,MAAKiB,KAAKulC,aAAa,IACvBrkC,MAAQskC,SAAW,EAEvB,MAAOzmC,OAIXJ,MAAMu6B,SAASuM,eAAiB,SAAUn4B,OAAQo4B,UAC9CA,SAAWA,SAASh/B,UACpB,KAAK,GAAIjH,GAAI,EAAGA,EAAIimC,SAAStmC,SAAUK,EAAG,CACtC,GAAI6S,GAAIozB,SAASv+B,OAAO1H,EACd,OAAN6S,GAAmB,OAANA,GAAoB,MAANA,IAC3BhF,QAAU,MAEdA,QAAUgF,EAEd,MAAOhF,SAOX3O,MAAMu6B,SAASyM,cAAgB,SAAUx3B,SACrC,MAAOxP,OAAMu6B,SAASuM,eAAe,GAAIt3B,UAQ7CxP,MAAMu6B,SAAS7rB,YAAc,SAAUC,OAAQC,QAI3C,MAHsB,KAAlBD,OAAOlO,SACPkO,QAAU,KAEP3O,MAAMu6B,SAASuM,eAAen4B,OAAQC,SASjD5O,MAAMu6B,SAAS1rB,gBAAkB,WAE7B,IAAK,GADDE,MAAO,GACFjO,EAAI,EAAGA,EAAIiE,UAAUtE,SAAUK,EACpCiO,KAAO/O,MAAMu6B,SAAS7rB,YAAYK,KAAMhK,UAAUjE,GAEtD,OAAOiO,OAMX/O,MAAMu6B,SAAS0M,cAAgB,SAAUC,QAASvmC,KAAMyd,MAAO+oB,KAC3D,GAAIA,IAAM/oB,QAAU8oB,QAAQzmC,OACxB,OAAO,CAEX,KAAK,GAAIK,GAAIsd,MAAOtd,EAAIqmC,MAAOrmC,EAC3B,GAAIH,KAAKG,KAAOomC,QAAQpmC,EAAIsd,OACxB,OAAO,CAGf,QAAO,GAGXpe,MAAMoO,MAAMg5B,iBACRt3B,MAAO9P,MAAMoO,MAAME,QACnB+4B,QAASrnC,MAAMoO,MAAMS,iBAIzB7O,MAAMoO,MAAMwC,kBACRf,OAAQ7P,MAAMoO,MAAMg5B,gBACpBnO,YAAaj5B,MAAMoO,MAAM8qB,qBAAsBl5B,MAAMoO,MAAM23B,uBAI/D/lC,MAAMoO,MAAMyC,kBACRhB,OAAQ7P,MAAMoO,MAAMg5B,gBACpBnO,YAAaj5B,MAAMoO,MAAM8qB,qBAAsBl5B,MAAMoO,MAAM23B,qBAAsB/lC,MAAMoO,MAAM03B,yBAGjG9lC,MAAMoO,MAAMk5B,eACRx3B,MAAO9P,MAAMu6B,SAASjsB,QACtB+4B,QAASrnC,MAAMu6B,SAAS1rB,iBAI5B7O,MAAMoO,MAAMm5B,kBACR13B,OAAQ7P,MAAMoO,MAAMk5B,cACpBrO,YAAaj5B,MAAMoO,MAAM23B,uBAI7B/lC,MAAMoO,MAAMo5B,kBACR33B,OAAQ7P,MAAMoO,MAAMk5B,cACpBrO,YAAaj5B,MAAMoO,MAAM23B,qBAAsB/lC,MAAMoO,MAAM03B,yBAK/D9lC,MAAMynC,eAAiB,SAAU7xB,MAE7B,MADA5V,OAAM0nC,uBAAuB9xB,MACtBA,KAAKxH,OAOhBpO,MAAM2nC,gBAAkB,SAAU/xB,MAC9B,MAAO,SAAWA,OAAQA,KAAKxH,QAAUpO,MAAM6d,oBAKnD7d,MAAM4nC,qBAAuB,SAAUhyB,MACnC,GAAIoa,cAAehwB,MAAMuwB,gBAAgB3a,MACrCiyB,OAAS7X,aAAayL,kBAAkBC,KAAK9lB,KAAKE,GAStD,OARK+xB,UACDA,QACIjyB,KAAMA,KACN0N,QAAStjB,MAAM4xB,gBAAgBhc,KAAM,WACrCqQ,SAAUjmB,MAAM2nC,gBAAgB/xB,OAEpCoa,aAAayL,kBAAkBC,KAAK9lB,KAAKE,IAAM+xB,QAE5CA,QAGX7nC,MAAM8nC,kBAAoB,WACtB,GAAI9X,cAAehwB,MAAMqwB,kBACzBrwB,OAAMyM,MAAMujB,aAAayL,mBACzBzL,aAAayL,kBAAkBC,SAGnC17B,MAAMgG,aAAasQ,YAAYtW,MAAM8nC,kBAAmB,oBAAqB,eAM7E9nC,MAAM+nC,gBAAkB,SAAUzoB,SAAU0oB,YAExChoC,MAAM6D,KAAKyb,SAAU,SAAUpc,MAAO7C,KACZ,gBAAZ,OACNif,SAASjf,KAAO,EACT2nC,YAAc9kC,MAAMgT,SAAwC,gBAAtBhT,OAAgB,aAC7DA,MAAM+kC,WAAa,MAK/BjoC,MAAMkoC,iBAAmB,SAAUC,KAAMC,MACrC,OAAQD,KAAKE,eAAiB,EAAI,IAAMD,KAAKC,eAAiB,EAAI,IAItEroC,MAAMsoC,0BAA4B,SAAU1yB,KAAM2yB,MAC9C,GAEIC,SAFAC,QAAUzoC,MAAMiS,eAChBqN,SAAWtf,MAAM0oC,uBAAuB9yB,KAAM6yB,SAE9CE,SAAW3oC,MAAM+C,UAAUwlC,KAAM,SAAUK,OAG3C,MAFAJ,SAAUI,MAAMhzB,KAAK0N,QAAQulB,SAAS,KAAM,OAAQJ,SACpDnpB,SAASspB,MAAMhzB,KAAK0N,QAAQwlB,YAAcC,YAAaP,SAChDA,UAIPQ,KAAOhpC,MAAM2L,OAAO48B,MAAM/iB,KAAKxlB,MAAMkoC,iBACzCloC,OAAM6D,KAAKmlC,KAAM,SAAUJ,OACvB,GAAIhzB,MAAOgzB,MAAMhzB,KACb4yB,QAAUG,SAAS/yB,KAAKE,GACxB8yB,OAAMP,eACNroC,MAAMipC,eAAerzB,KAAMA,KAAK0N,QAASklB,QAAS5yB,KAAK0N,QAAQpO,UAAUmB,iBAEzErW,MAAM6D,KAAK+kC,MAAMM,WAAY,SAAUC,WACnCX,QAAQY,mBAAmBplC,KAAM,MAAOrD,QAAUuC,MAAOimC,YACzDnpC,MAAM+nC,gBAAgBzoB,UAAU,IAGxC,IAAI2Q,QAASjwB,MAAM6xB,mBAAmBjc,KAClCqa,UACAA,OAAOoZ,eAAgB,KAI/Bb,QAAQc,UAIZtpC,MAAM0nC,uBAAyB,SAAU9xB,MACrC,GAAIoa,cAAehwB,MAAMuwB,gBAAgB3a,MACrC2yB,KAAOvY,aAAayL,kBAAkBC,IAC1C,IAAK6M,KAAK3yB,KAAKE,IAAf,CAGAF,KAAKxH,MAAQhN,OACbmnC,KAAK3yB,KAAKE,IAAImQ,UAAW,CACzB,IAAIsjB,YAAavpC,MAAMiK,QAAQs+B,KAAM,SAAUK,OAC3C,MAAOA,OAAM3iB,YAAa,GAEzBsjB,cACDvpC,MAAMsoC,0BAA0B1yB,KAAM2yB,MAEtCvY,aAAayL,kBAAkBC,WAIvC17B,MAAMwpC,oBAAsB,SAAU5zB,KAAMrN,KACxC,GAAI8K,QAASrT,MAAMy2B,sBAAsBluB,IAEzC,OADA8K,QAAO1S,KAAOiV,KAAK0N,QAAQhV,QAAQ+E,OAAOtE,MACnCsE,QAwBXrT,MAAM8/B,yBAA2B,SAAUlqB,KAAMzP,KAAMoC,IAAKkhC,eACxD,GAGIp2B,QAHA6S,OAAS,SAAU5jB,SACnBtC,MAAM+F,KAAK,YAAcI,KAAO,KAAMoC,IAAKjG,SAG/C,IAAoB,gBAAV,KACN,GAAItC,MAAMsI,eAAeC,KAAM,CAC3B8K,OAASrT,MAAMwpC,oBAAoB5zB,KAAMrN,IACzC,IAAImhC,YAAar2B,OAAO1S,KAAK8H,QAAQ,QACjCihC,iBACID,cACAp2B,OAAOs2B,UAAW,EAElBzjB,OAAO,yFAGX7S,OAAO2sB,UAAY3sB,OAAO1S,KAAKyT,MAAMs1B,WAAa,GAClDr2B,OAAOu2B,YAAcv2B,OAAO1S,KAAKyT,MAAM,EAAGs1B,kBACnCr2B,QAAOtE,UAIlBsE,SACItE,KAAMxG,IACNy3B,UAAWpqB,KAAK0N,QAAQhV,QAAQ/F,UAInCvI,OAAM4H,YAAYW,IAAI5H,OACvBulB,OAAO,iGAEX7S,QACI8hB,QAAS5sB,IAAI4sB,QACb6K,UAAWhgC,MAAMu4B,cAAchwB,IAAI5H,KAAMiV,MAGjD,IAAIxP,OAyBJ,OAxBIiN,QAAO8hB,SACP/uB,OAASpG,MAAM22B,eAAetjB,OAAO8hB,QAASvf,MACzCxP,QACD8f,OAAO,iDAEP7S,OAAOu2B,cACPxjC,OAASpG,MAAM4xB,gBAAgBxrB,OAAQiN,OAAOu2B,eAGlDxjC,OAASwP,KAERvC,OAAOs2B,WACHvjC,OAAOkd,SACRtjB,MAAM4xB,gBAAgBxrB,QAAS,YAE9BA,OAAOkd,SACR4C,OAAO,mGAGf7S,OAAOuC,KAAOxP,OACdiN,OAAOiQ,QAAUld,OAAOkd,QACnBjQ,OAAOtE,OACRsE,OAAOtE,KAAO3I,OAAOkd,QAAQzU,gBAAgBhK,MAAM,KAAMwO,OAAO2sB,YAE7D3sB,QAMXrT,MAAM0oC,uBAAyB,SAAU9yB,KAAM6yB,SAC3C,GAAIzY,cAAehwB,MAAMuwB,gBAAgB3a,KAIzC,IAHK6yB,SACDzoC,MAAM+F,KAAK,yDAEViqB,aACD,MAAO,KAEX,IAAI1Q,UAAW0Q,aAAayL,kBAAkBgN,QAQ9C,OAPKnpB,YACDA,SAAW0Q,aAAayL,kBAAkBgN,UACtCoB,UACA5oC,WACA6oC,qBAGDxqB,UAGXtf,MAAM+pC,qBAAuB,SAAU3yB,UAAWkM,QAAS0mB,eAAgBzzB,YACvE,GAAI0Z,QAASjwB,MAAM6xB,mBAAmBza,UACtCpX,OAAM24B,eAAerV,QAAQ2mB,aAAcD,eAAgB/Z,OAAQ1Z,aAGvEvW,MAAMkqC,yBAA2B,SAAU5qB,SAAU6qB,cAAe1B,QAASvyB,QAASk0B,WAClF,GAAIC,UAAWF,cAActB,SAAS,QAAS,KAAMJ,SACjD6B,QAAUhrB,SAAS6qB,cAAcrB,YAAcC,YAAasB,SAAUpC,WAAY,EAAGp0B,UAAWu2B,UAAUv2B,UAAWrN,SAAU4jC,UAAU5jC,SAAU0P,QAASA,QAGhK,OAFAo0B,SAAQ9jC,SAAWxG,MAAMgT,cAAcs3B,QAAQ9jC,SAAU8Y,SAASuqB,OAAOppC,QAAQ,EAAO,eACxF6e,SAASuqB,OAAOxoC,KAAKipC,SACdA,SAIXtqC,MAAMuqC,sBAAwB,IAoB9BvqC,MAAMwqC,0BAA4B,SAAUpkC,OAAQ6rB,WAAY9xB,OAAQqyB,WAAYiY,OAAQC,WAAYx0B,QAASk0B,WAC7G,GAAID,eAAgBj0B,QAAQi0B,eAAiB/jC,OAAOkd,QAChDqnB,cAAgBz0B,QAAQy0B,eAAiBxqC,OAAOmjB,QAChDwlB,UAAYqB,cAAcrB,SAC9B7W,YAAajyB,MAAMe,UAAUkxB,YAC7BO,WAAaA,WAAaxyB,MAAMe,UAAUyxB,YAAcA,UACxD,IAiCI9Q,MAjCAsoB,eAAiB,SAAU7mC,SAAUynC,SAAU77B,KAAM87B,cAAeC,MAAOxnB,SAC3E,GAAImlB,SAAUqC,MAAMh1B,GAChBwJ,SAAWtf,MAAM0oC,uBAAuBtiC,OAAQqiC,QAChDnlB,UAAWwnB,QAAUxrB,SAASgE,QAAQwlB,aACtCxpB,SAASgE,QAAQwlB,YAAcC,YAAa+B,OAEhD,IAAIr5B,UAAW6N,SAASwpB,UACxBxpB,UAASmrB,QAAUnrB,SAASmrB,SAAW,CAEvC,IAAIM,QAAQ,CACRA,WACEzrB,SAASmrB,QACPnrB,SAASmrB,QAAUzqC,MAAMuqC,uBACzBvqC,MAAM+F,KAAK,mDAAoDK,OAAQ,yBAA2BpG,MAAMuqC,sBAAwB,qEAAsEO,MAAME,UAAU58B,OAErNqD,WACDA,SAAWzR,MAAMkqC,yBAAyB5qB,SAAU6qB,cAAe1B,QAASvyB,QAASk0B,YAErFM,aAAex0B,QAAQi0B,cAIvBO,WAAWj5B,SAASs3B,YAAa7yB,QAAQy0B,cAAgBvpC,OAAY+B,SAAUqvB,WAAYP,WAAY4Y,iBAElG30B,QAAQ+0B,sBAAwBJ,eAAwC,WAAvBA,cAAc7mC,MAChEyN,SAASs3B,YAAYK,mBAAmBplC,KAAM,SAAUrD,KAAMsxB,aAEjD7wB,SAAb+B,UACAsO,SAASs3B,YAAYK,mBAAmBplC,KAAM,MAAOrD,KAAMsxB,WAAY/uB,MAAOC,aAM1FqvB,cACA9Q,KAAOipB,cAAcV,aAAa3zB,aAC9B40B,SAAS,EACTvqC,KAAM6xB,WACN2Y,cAAej1B,QAAQi1B,eACxBnB,gBACChqC,MAAMqE,aAAarE,MAAMsE,SAASC,QAClCvE,MAAM4D,IAAI5D,MAAMsE,SAASC,MAAO,yCAA2Cmd,KAAKnL,WAAa,8BACzFo0B,cAAc7B,UAAY,gCAAkCA,UAAY,iCAAmC1iC,OAAO0P,KAG1H3V,SAGAH,MAAM+pC,qBAAqB5pC,OAAQwqC,cAAeX,eAAgBtoB,KAAKnL,YACnEnQ,SAAWjG,QACXH,MAAM+pC,qBAAqB3jC,OAAQukC,cAAeX,eAAgBtoB,KAAKnL,cAQnFvW,MAAMorC,kBAAoB,SAAUjrC,OAAQqyB,WAAYpsB,OAAQ6rB,WAAY/b,SAExE,QAASm1B,iBAAgBj0B,WACrB,GAAIywB,QAAS7nC,MAAM4nC,qBAAqBxwB,UAExC,IAAIywB,OAAO5hB,SAAU,CACjB,GAAIgK,QAASjwB,MAAM6xB,mBAAmBza,UAClC6Y,QAAOoZ,gBACPxB,OAAOQ,gBAAiB,IAPpC,GAAIoC,QAASzqC,MAAMiS,cAWnBo5B,iBAAgBjlC,QAChBilC,gBAAgBlrC,OAChB,IAAIiqC,WAAYpqC,MAAMoL,WAAW8K,SAAU,YAAa,YAEpDA,SAAQo1B,OACJp1B,QAAQi0B,cAERnqC,MAAMwqC,0BAA0BrqC,OAAQqyB,WAAYpsB,OAAQ6rB,WAAYwY,OAAQ,MAC5EU,eAAe,EACfhB,cAAej0B,QAAQi0B,cACvBmB,OAAQp1B,QAAQo1B,QACjBlB,WAKHpqC,MAAMwqC,0BAA0BpkC,OAAQ6rB,WAAY9xB,UAAYsqC,OAAS,aAAcv0B,QAAQq1B,gBAAiBJ,eAAe,EAAMR,cAAez0B,QAAQs1B,gBAAiBpB,YAGjLpqC,MAAMwqC,0BAA0BpkC,OAAQ6rB,WAAY9xB,OAAQqyB,WAAYiY,OAAQv0B,QAAQq1B,gBAAiBJ,eAAe,GAAQf,WAC5H5X,YACAxyB,MAAMwqC,0BAA0BrqC,OAAQqyB,WAAYpsB,OAAQ6rB,WAAYwY,OAAQv0B,QAAQu1B,iBAAkBN,eAAe,GAAQf,aAK7IpqC,MAAM0rC,yBAA2B,SAAUC,WAAYC,YAGnD,MAFAD,YAAWE,cAAgB7rC,MAAM+L,YAAY/L,MAAMe,UAAU6qC,WAAWC,gBAAkBD,WAAWE,cAAgB,IAAM1qC,UAC3HuqC,WAAWG,cAAgB9rC,MAAM+L,YAAY/L,MAAMe,UAAU6qC,WAAWE,gBACjEH,YAGX3rC,MAAM+rC,uBAAyB,SAAUhD,YAAarnB,MAClD,IAAKA,OAASA,KAAKmqB,cACf,OAAO,CAEX,IAAIG,UAAWtqB,KAAKmqB,cAAc,IAClC,KAAK,GAAI1rC,UAAU4oC,aAAYkD,YACvBvqB,KAAKmqB,cAAc1rC,UACnB6rC,UAAW,GAEXtqB,KAAKoqB,cAAc3rC,UACnB6rC,UAAW,EAGnB,OAAOA,WAGXhsC,MAAMoO,MAAM89B,eAAiB,SAAUnD,YAAaoD,KAAMtqC,KAAMvB,MACvDN,MAAM+rC,uBAAuBhD,YAAaoD,OAC3CtqC,KAAKgD,MAAM,KAAMvE,OAKzBN,MAAMosC,mBAAqB,SAAUrpC,UAAWwxB,YAC5C,GAAI8X,kBAEJ,OADAA,gBAAe9X,YAAcxxB,UACtB,SAAU+nC,MAAO3nC,SAAUqvB,WAAYP,WAAY4Y,eAClDA,eAAwC,WAAvBA,cAAc7mC,MAC/B8mC,MAAM1B,mBAAmBplC,KAAM,SAAU+K,KAAMwlB,aAGnDv0B,MAAMoO,MAAMk+B,mBAAmBnpC,SAAUkpC,gBAAiBE,aAAczB,UAKhF9qC,MAAMwsC,qBAAuB,SAAUC,cAAe1pC,UAAWivB,WAAYuC,WAAYmY,YAAaC,aAAc94B,UAAWrN,UAC3H,GAAIoP,OACAg3B,eAAgBx+B,MAAOrL,WACvB8pC,gBAAiBz+B,MAAO,MAE5BwH,MAAKk3B,iBAAmB,SAAUhC,OAE9Bl1B,KAAKm3B,mBAAqB/sC,MAAMosC,mBAAmBtB,MAAQA,MAAME,UAAU58B,MAAQwH,KAAKg3B,cAAcx+B,MAAOmmB,YAC1F,OAAfvC,aACApc,KAAKi3B,eAAez+B,MAAQpO,MAAMoO,MAAMrL,UAAUiqC,oBAAoBjqC,WACtE6S,KAAKq3B,oBAAsBjtC,MAAMosC,mBAAmBx2B,KAAKi3B,eAAez+B,MAAO4jB,cAGvFpc,KAAK21B,eAAiB,SAAUxC,YAAa5lC,UACxB/B,SAAb+B,UACAyS,KAAKk3B,mBAGT9sC,MAAMoO,MAAM89B,eAAenD,YAAa2D,YAAa92B,KAAKm3B,mBAAoBhoC,YAGlF6Q,KAAKs3B,aAAe,SAAUpC,OAC1BA,MAAMxB,SAGNwB,MAAMqC,SAEVv3B,KAAK41B,eAAiBxrC,MAAMotC,wBAAwBx3B,KAAKg3B,eACzDh3B,KAAK41B,eAAe6B,gBAAiB,EACrCz3B,KAAK03B,YAActtC,MAAMiW,gBAAgB9P,KAAM,4CAA8CyP,KAAK41B,eAAe1C,YAC9F,OAAf9W,aACApc,KAAK23B,gBAAkBvtC,MAAMotC,wBAAwBx3B,KAAKi3B,gBAC1Dj3B,KAAK61B,gBAAkB,SAAU1C,aAC7B/oC,MAAMoO,MAAM89B,eAAenD,YAAa4D,aAAc/2B,KAAKq3B,oBAAqBloC,aAGxF6Q,KAAK01B,OAAS11B,KAAK03B,YAAYrnC,IAC/B,IAAIunC,kBACArD,cAAev0B,KAAK41B,eACpBF,OAAQ11B,KAAK01B,OACbz3B,UAAWA,UACXrN,SAAUA,SACVinC,SAAU,EASd,OAPA73B,MAAKg3B,cAAcx+B,MAAQpO,MAAM0tC,mBAAmBjB,cAAe1pC,aAAeyqC,iBAClF53B,KAAK63B,SAAWD,gBAAgBC,SAChC73B,KAAK/B,UAAYA,UACjB+B,KAAKpP,SAAWA,SAChBoP,KAAKk3B,mBACLl3B,KAAK03B,YAAYh3B,YAAYV,KAAKk3B,kBAClCl3B,KAAK03B,YAAYh3B,YAAYV,KAAKs3B,cAC3Bt3B,MAGX5V,MAAM2tC,sBAAwB,SAAUC,iBACpC,GAAIC,UAAW5tC,EAAEyJ,QAAO,GAAOokC,UAAW,IAAKF,gBAC/C,QACI3pB,IACIlhB,UAAW8qC,YAMvB7tC,MAAMoO,MAAM2/B,iBACRC,UAAWlC,cAAe,QAC1BmC,UAAWpC,cAAe,QAC1BqC,OAAWpC,kBACXqC,WAGJnuC,MAAMoO,MAAMggC,oBAAsB,SAAUp1B,WACtB,aAAdA,UACAhZ,MAAM4D,IAAI5D,MAAMsE,SAAS6J,KAAM,uGACV,aAAd6K,WACPhZ,MAAM4D,IAAI5D,MAAMsE,SAAS6J,KAAM,sGAEnC,IAAIkgC,aAWJ,OAVKr1B,WAE4B,gBAAhB,YACbq1B,aAAeruC,MAAMoO,MAAM2/B,gBAAgB/0B,WACtCq1B,cACDruC,MAAM+F,KAAK,8CAAiDiT,UAAY,wGAG5Eq1B,aAAer1B,UAPfq1B,gBASGruC,MAAM0rC,4BAA6B2C,eAG9CruC,MAAMsuC,gBAAkB,SAAU14B,KAAM24B,MAAOluC,KAC3C,GAAImuC,cAAeD,MAAMpuC,OAASH,MAAM8/B,yBAAyBlqB,KAAM,oCAAuC24B,MAAMpuC,SAC/G4O,KAAM,KAAMixB,UAAW,MACxByO,aAAezuC,MAAM8/B,yBAAyBlqB,KAAM,oCAAuC24B,MAAMnoC,QACjGyN,UAAY06B,MAAM16B,WAAaxT,IAE/B0C,UAAYwrC,MAAMX,gBAAkB5tC,MAAM2tC,sBAAsBY,MAAMX,iBAAmBW,MAAMxrC,SAC9FA,YACD/C,MAAM+F,KAAK,mFAAwFwoC,MAEvG,IAAI7B,aAAc1sC,MAAMoO,MAAMggC,oBAAoBG,MAAMG,SAAU/B,aAAe3sC,MAAMoO,MAAMggC,oBAAoBG,MAAMI,UAEnHC,iBAAmB5uC,MAAMwsC,qBAAqB52B,KAAM7S,UAAWyrC,aAAaz/B,KAAM0/B,aAAa1/B,KAAM29B,YAAaC,aAAc94B,UAAW06B,MAAM/nC,UACjJqoC,gBAAkB5D,sBAAuB,EACX,KAA9B2D,iBAAiBnB,SAEjBztC,MAAMorC,kBAAkBoD,aAAa54B,MAAQA,KAAM44B,aAAaxO,UAAWyO,aAAa74B,KAAM64B,aAAazO,UAEvGhgC,MAAMoL,WAAWwjC,kBAAmB,iBAAkB,kBAAmB,YAAa,aACpFC,iBAEFL,aAAaxO,WACbhgC,MAAM+F,KAAK,4MAAiNwoC,MAAO,kBAAmB34B,MAG1P5V,MAAMorC,kBAAkBoD,aAAa54B,MAAQA,KAAM44B,aAAaxO,UAAWyO,aAAa74B,KAAM64B,aAAazO,UAAW4O,oBAI9H5uC,MAAM0tC,mBAAqB,SAAU93B,KAAMk5B,SAAUnuC,KAAMuV,SACvD,GAAIhT,MACJ,IAAIlD,MAAMsI,eAAewmC,UAAW,CAChC,GAAIz7B,QAASrT,MAAM8/B,yBAAyBlqB,KAAM,8CAA+Ck5B,UAAU,EACvGz7B,QAAOs2B,SACPzmC,MAAQlD,MAAM4xB,gBAAgBve,OAAOuC,KAAMvC,OAAO1S,SAEhDuV,QAAQu3B,SACVztC,MAAMorC,kBAAkBx1B,KAAMjV,KAAM0S,OAAOuC,KAAMvC,OAAO2sB,UAAW9pB,cAEhElW,OAAMyF,YAAYqpC,YAAc9uC,MAAM0F,cAAcopC,UAC3D5rC,MAAQ4rC,SACDA,SAAS/Q,UAAY/9B,MAAM0F,cAAcopC,SAAS/Q,UACzD76B,MAAQlD,MAAMu4B,cAAcuW,SAAUl5B,OAEtC1S,MAAQlD,MAAMqJ,eAAeylC,UAC7B9uC,MAAM6D,KAAKirC,SAAU,SAAUC,WAAY1uC,KACvCM,KAAKU,KAAKhB,IACV,IAAI2uC,YAAahvC,MAAM0tC,mBAAmB93B,KAAMm5B,WAAYpuC,KAAMuV,QAC/C9U,UAAf4tC,aACA9rC,MAAM7C,KAAO2uC,YAEjBruC,KAAK+D,QAGb,OAAOxB,QAKXlD,MAAMoO,MAAM6gC,eAAiB,SAAU3vB,UACnC,GAAI4vB,YAAa5vB,SAAWtf,MAAM2L,OAAO2T,SAASwqB,mBAClD9pC,OAAMgU,eAAek7B,WACrB,KAAK,GAAIpuC,GAAI,EAAGA,EAAIouC,WAAWzuC,SAAUK,EAAG,CACxC,GAAIopB,QAASglB,WAAWpuC,GACpBqpC,cAAgBjgB,OAAO5pB,KAAK,EAC3B6pC,eAAc3zB,WACf0T,OAAOvV,SAAS9P,MAAM,KAAMqlB,OAAO5pB,MAG3CN,MAAM+nC,gBAAgBzoB,UAAU,IAGpCtf,MAAMoO,MAAM+gC,aAAe,SAAUnf,aAAcof,eAC/C,GAAI9vB,UAAW0Q,aAAayL,kBAAkB2T,cAC9CpvC,OAAM6D,KAAKyb,SAAU,SAAUgrB,SAEvBA,QAAQvB,cACRuB,QAAQvB,YAAYO,OAAO,SAC3BgB,QAAQvB,YAAYoE,YAMhCntC,MAAMoO,MAAMihC,aAAe,SAAUrf,aAAcof,eAC/C,GAAI9vB,UAAW0Q,aAAayL,kBAAkB2T,eAC1CE,QAAU,CAWd,OAVAtvC,OAAMgU,eAAesL,SAASuqB,QAC9B7pC,MAAM6D,KAAKyb,SAASuqB,OAAQ,SAAUS,SAE9BA,QAAQvB,YAAYwG,aAAaC,QAAU,GAAKlF,QAAQrC,WAAa,GAAKqC,QAAQp0B,QAAQo1B,SAC1FhB,QAAQrC,aACRjoC,MAAM+nC,gBAAgBzoB,UACtBgrB,QAAQp0B,QAAQo1B,OAAOhB,QAAQvB,YAAazpB,YAC1CgwB,WAGHA,SAGXtvC,MAAMyvC,oBAAsB,SAAU75B,KAAM85B,aAAcC,UAAWC,UAAWtsB,SAwB5E,QAAS+rB,cAAatG,aAClB,KAAO/oC,MAAMoO,MAAMihC,aAAarf,aAAc+Y,YAAYjzB,IAAM,KAGpE,QAASq5B,cAAapG,YAAazlB,QAASqI,MAC3B,UAATA,MACA3rB,MAAMoO,MAAM+gC,aAAanf,aAAc+Y,YAAYjzB,IAI3D,QAAS+5B,qBAAoB9G,YAAazlB,QAASqI,MAClC,UAATA,OACA3rB,MAAMoO,MAAM6gC,eAAejf,aAAayL,kBAAkBsN,YAAYjzB,WAC/Dka,cAAayL,kBAAkBsN,YAAYjzB,KApC1D,GAAIma,QAASjwB,MAAM6xB,mBAAmBjc,KACjCqa,QAAO6f,sBAGR9vC,MAAM+F,KAAK,iEAAkE6P,MAF7Eqa,OAAO6f,uBAAwB,EAInC9vC,MAAM+vC,oBAAoBn6B,KAAM+5B,UAEhC,IAAI9H,QAAS7nC,MAAM4nC,qBAAqBhyB,KACxC5V,OAAM6D,KAAK+rC,UAAW,SAAUrB,MAAOluC,KACnC,IAAK,GAAIS,GAAI,EAAGA,EAAIytC,MAAM9tC,SAAUK,EAChCd,MAAMsuC,gBAAgB14B,KAAM24B,MAAMztC,GAAIT,MAK9C,IAAI6oC,YAAalpC,MAAM+C,UAAU2sC,aAAc,SAAUZ,UACrD,MAAO9uC,OAAM0tC,mBAAmB93B,KAAMk5B,aAAerB,SAAU,EAAGjnC,SAAU,WAEhFqhC,QAAOqB,WAAaA,UAEpB,IAAIlZ,cAAehwB,MAAMuwB,gBAAgB3a,KAuBzC,OAJA0N,SAAQ0sB,UAAU15B,YAAY+4B,cAC9B/rB,QAAQ0sB,UAAU15B,YAAY64B,cAC9B7rB,QAAQ2sB,WAAW35B,YAAYu5B,qBAExB,MAIX7vC,MAAMsa,SAAS,wBACXf,YAAa,mBACb22B,sBACIC,YAAY,EACZC,eAAe,GAEnB/pC,SACI+H,MAAO,0DACPkV,QAAS,qFACT5K,WAAY,6IAEhB8B,aACIpM,OACIoU,UAAU,EACV3gB,KAAM7B,MAAMuY,mBAEhB8qB,eAAgBrjC,MAAMwY,yBAAyBxY,MAAMuY,mBACrDG,WAAY1Y,MAAMwY,yBAAyBxY,MAAMuY,mBAAmB,MAI5EvY,MAAMqwC,qBAAuB,SAAU/vC,MACnC,OACI4C,MAAO5C,KAAK,GACZsqC,SAAUtqC,KAAK,GACfyO,KAAMzO,KAAK,GACXyoC,YAAazoC,KAAK,KAK1BN,MAAMyU,MAAM67B,eAAiB,SAAU37B,SAAUrU,KAAMkhB,YAAaqe,aAIhE,MAHyB,gBAAf,YACNlrB,SAAW3U,MAAMyU,MAAMc,gBAAgBZ,WAEpCA,SAAS9P,MAAM,KAAMvE,KAAMkhB,YAAaqe,cAGnD7/B,MAAMuwC,qBAAuB,SAAU36B,KAAM3R,QACzC,GAAI7D,MAAO,WACP,IAAIJ,MAAMojB,YAAYxN,MAAtB,CAGA,GAAIsU,QAASlqB,MAAMqwC,qBAAqBtrC,WACpCzE,KAAOyE,UACPyc,aAAe0I,OAAQA,OAAQnlB,UAAazE,MAC5Cu/B,aAAe1/B,OAAQ+E,OAAOoG,KAAK4e,OAAO6e,YAAY9nC,SACtDgD,QAAO3D,OACPA,KAAON,MAAMu4B,cAAct0B,OAAO3D,KAAMsV,QAAU4L,cAEtDxhB,MAAMyU,MAAM67B,eAAersC,OAAO0Q,SAAU3U,MAAMe,UAAUT,MAAOkhB,YAAaqe,cAGpF,OADA7/B,OAAMyU,MAAMK,oBAAoB7Q,OAAO0Q,SAAUvU,MAC1CA,MAGXJ,MAAMwwC,uBAAyB,SAAU56B,KAAM3R,OAAQwsC,MAAO58B,WAC1D,GAAIhS,MAAO7B,MAAMuwC,qBAAqB36B,KAAM3R,OAC5CjE,OAAM6D,KAAKI,OAAOysC,SAAU,SAAUC,aAgBlC,QAAS1H,kBACL,GAAIjpC,MAAM2nC,gBAAgBt0B,OAAOuC,MAAO,CACpC,GAAIk1B,OAAQz3B,OAAOiQ,QAAQulB,SAAS,KAAM,OAC1C7oC,OAAMipC,eAAerzB,KAAMvC,OAAOiQ,QAASwnB,OAAQppB,OACnDopB,MAAMxB,UAnBd,GAAIj2B,QAASs9B,YAAY,GACrBjvB,MACA/M,SAAU9S,KACV0U,WAAYvW,MAAMiS,eAClB2+B,UAAW5wC,MAAMkL,WAAWylC,YAAa,aACzCE,UAAW7wC,MAAMkL,WAAWylC,YAAa,QACzC7E,cAAe7nC,OAAO6nC,cACtBD,cAAe5nC,OAAO4nC,cACtBrlC,SAAUxG,MAAMu4B,cAAct0B,OAAOuC,SAAUoP,MAC/Cu1B,eAAe,EAanB,IAVAzpB,KAAOrO,OAAOiQ,QAAQ2mB,aAAa3zB,YAAYoL,KAAM7f,KAAMgS,UAAW5P,OAAOqR,eAE7EtV,MAAM+pC,qBAAqBn0B,KAAMvC,OAAOiQ,QAASzhB,KAAM6f,KAAKnL,YAQxDX,OAASvC,OAAOuC,OAAS5V,MAAM2nC,gBAAgB/xB,MAAO,CAMtD,GAAI6M,UAAWziB,MAAM4xB,gBAAgBhc,MAAO,SAAU,YACtD6M,UAASnM,YAAY2yB,oBAKjCjpC,MAAM+vC,oBAAsB,SAAUn6B,KAAMV,WACxClV,MAAM6D,KAAKqR,UAAW,SAAUhS,MAAO7C,KACb,gBAAZ,SACN6C,OACI06B,SAAU16B,OAIlB,IAAIoR,SAAUtU,MAAMyU,MAAMgD,sBAAsBvU,MAAO0S,KAAM,iBAAkB,MAAM,GAAOtB,OAC5FtU,OAAM6D,KAAKyQ,QAAS,SAAUrQ,QAI1BA,OAAOysC,WACP,IAAID,OAAQzwC,MAAMe,UAA0BK,SAAhB6C,OAAO8K,KAAqB1O,IAAM4D,OAAO8K,KACrE/O,OAAM6D,KAAK4sC,MAAO,SAAU1hC,MACxB,GAAIsE,QAASrT,MAAM8/B,yBAAyBlqB,KAAM,uBAAwB7G,KAC1E/O,OAAM2J,UAAU1F,OAAOysC,SAAUr9B,OAAOuC,KAAKE,GAAIzC,SAErD,IAAIQ,YAAa5P,OAAO4P,YAAc5P,OAAOqR,cAAgBrR,OAAO4P,UAAY,QAA0BzS,SAAhB6C,OAAO8K,KAAqB1O,IAAM,KAC5HL,OAAMwwC,uBAAuB56B,KAAM3R,OAAQwsC,MAAO58B,gBAS9D7T,MAAM8wC,YAAc,SAAUxtB,QAASksB,SACnC,IAAK,GAAI1uC,GAAI,EAAGA,EAAI0uC,QAAQ/uC,SAAUK,EAClCwiB,QAAQ8lB,kBAAkBoG,QAAQ1uC,KAI1Cd,MAAMoO,MAAM2iC,cAAgB,SAAUC,UAAWrwC,MAC7C,IAAK,GAAIG,GAAI,EAAGA,GAAKH,KAAKF,SAAUK,EAAG,CACnC,GAA0B,gBAAhB,WACN,OAAO,CAEPA,GAAIH,KAAKF,QAAUuwC,YACnBA,UAAYA,UAAUrwC,KAAKG,KAGnC,OAAO,GAGXd,MAAMoO,MAAM6iC,eAAiB,SAAU/6B,QAASvV,KAAMuC,OAClD,GAAIguC,UAAW,SAAUjtC,QACrBtD,KAAKoG,QAAQ9C,QACbjE,MAAMoO,MAAMmC,UAAU2F,QAASvV,KAAMuC,OACrCvC,KAAKuG,QAEJlH,OAAMoO,MAAM2iC,cAAc76B,QAAQ86B,UAAWrwC,UAC5CuV,QAAQs5B,QACV0B,SAAS,cAERlxC,MAAMoO,MAAM2iC,cAAc76B,QAAQi7B,SAAUxwC,UAC3CuV,QAAQk7B,OACVF,SAAS,cAIjBlxC,MAAMoO,MAAMijC,oBAAsB,SAAUjrC,OAAQtF,EAAGH,KAAMR,OAAQ+V,SACjElW,MAAM6D,KAAK1D,OAAQ,SAAU+C,MAAO7C,KAChCM,KAAKG,GAAKT,IACVL,MAAMoO,MAAMkjC,oBAAoBlrC,OAAQ/F,IAAKS,EAAGH,KAAMuC,MAAOgT,SAC7DvV,KAAKF,OAASK,KAOtBd,MAAMoO,MAAMmjC,YAAc,SAAUpoC,EAAGC,GACnC,GAAkB,gBAAR,IAAkC,gBAAR,GAChC,MAAOD,KAAMC,CAGb,IAAID,IAAMC,GAAKD,IAAMA,GAAKC,IAAMA,EAC5B,OAAO,CAEP,IAAIooC,UAAWpkC,KAAKG,KAAKpE,EAAIC,GAAKA,EAClC,OAAOooC,UAAW,OAK9BxxC,MAAMoO,MAAMkjC,oBAAsB,SAAUlrC,OAAQD,KAAMrF,EAAGH,KAAMR,OAAQ+V,SACvE,GAAIu7B,YAAarrC,OAAOD,MACpBurC,WAAa1xC,MAAMqI,SAASlI,QAC5BwxC,WAAa3xC,MAAMqI,SAASopC,YAC5BG,aAAe5xC,MAAM+N,QACN,eAAf2jC,WACK1xC,MAAMoO,MAAMmjC,YAAYE,WAAYtxC,UACrCyxC,aAAezxC,SACb+V,QAAQ27B,YAEPF,aAAeD,YAA6B,UAAfA,YAA0BvxC,OAAOM,SAAWgxC,WAAWhxC,UAE3FmxC,aAAe5xC,MAAMqJ,eAAelJ,SAEpCyxC,eAAiB5xC,MAAM+N,WACvB3H,OAAOD,MAAQyrC,aACX17B,QAAQ86B,WACRhxC,MAAMoO,MAAM6iC,eAAe/6B,QAASvV,KAAMuV,QAAQ47B,QAAU,SAAW,QAG5D,cAAfJ,YACA1xC,MAAMoO,MAAMijC,oBAAoBjrC,OAAOD,MAAOrF,EAAI,EAAGH,KAAMR,OAAQ+V,UAI3ElW,MAAMoO,MAAM2jC,iBAAmB,SAAU3rC,OAAQpC,KAAMrD,KAAMqxC,SAAU9N,OAAQhuB,SAC3E,IAAK,GAAIpV,GAAIkxC,SAAUlxC,EAAIojC,SAAUpjC,EACjC,GAAKsF,OAAL,CAGA,GAAI6rC,UAAW7rC,OAAOzF,KAAKG,GAC3BsF,QAASpG,MAAMoO,MAAM43B,qBAAqB5/B,OAAQzF,KAAMG,EAAGoV,QAAiB,QAATlS,KAAiB,oBAAsB,qBACtGrD,KAAKF,OAASK,EAAI,GAClBmxC,WAAa7rC,QAAU8P,QAAQ86B,WAC/BhxC,MAAMoO,MAAM6iC,eAAe/6B,QAASvV,KAAKyT,MAAM,EAAGtT,EAAI,GAAI,OAGlE,OAAQyC,KAAM6C,OAAQgM,KAAMzR,KAAKujC,UAGrClkC,MAAMoO,MAAM8jC,sBAAwB,SAAUh8B,SAI1C,MAHAA,SAAUA,YACVA,QAAQi8B,kBAAoBj8B,QAAQi8B,mBAAqBnyC,MAAMoO,MAAMo5B,iBACrEtxB,QAAQk8B,kBAAoBl8B,QAAQk8B,mBAAqBpyC,MAAMoO,MAAMm5B,iBAC9DrxB,SAMXlW,MAAMoO,MAAMikC,yBAA2B,SAAUzoC,OAAQ+W,QAASzK,SAC9DA,QAAUlW,MAAMoO,MAAM8jC,sBAAsBh8B,SAC5CA,QAAQi7B,SAAWj7B,QAAQ86B,aAAiB,KAC5C96B,QAAQk7B,OAAS,CACjB,IACI3N,KADAhjC,OAASkgB,QAAQhgB,KAAKF,OACjB6xC,OAAoB,IAAX7xC,MAUlB,IATI6xC,OACA7O,KAAOlgC,KAAMqG,OAAQwI,KAAM,UAEtBxI,OAAOwE,QACRxE,OAAOwE,SACPpO,MAAMoO,MAAM6iC,eAAe/6B,WAAaA,QAAQ47B,QAAU,SAAW,QAEzErO,IAAMzjC,MAAMoO,MAAM2jC,iBAAiBnoC,OAAOwE,MAAOuS,QAAQ3c,KAAM2c,QAAQhgB,KAAM,EAAGF,OAAS,EAAGyV,UAE3E,QAAjByK,QAAQ3c,KAAgB,CACxB,GAAId,OAAQyd,QAAQzd,MAChBvC,KAAOX,MAAMe,UAAU4f,QAAQhgB,KACnCX,OAAMoO,MAAMkjC,oBAAoB7N,IAAIlgC,KAAMkgC,IAAIrxB,KAAM3R,OAAS,EAAGE,KAAMuC,MAAOgT,QAASo8B,YAC9D,WAAjB3xB,QAAQ3c,KACXy/B,IAAIlgC,MAA+BnC,SAAvBqiC,IAAIlgC,KAAKkgC,IAAIrxB,cAClBqxB,KAAIlgC,KAAKkgC,IAAIrxB,MAChB8D,QAAQ86B,WACRhxC,MAAMoO,MAAM6iC,eAAe/6B,QAASyK,QAAQhgB,KAAM,WAI1DX,MAAM+F,KAAK,+BAAiC4a,QAAQ3c;AAExD,MAAOkS,SAAQk7B,OAASl7B,QAAQi7B,SAAW,MAkB/CnxC,MAAMoO,MAAMmkC,KAAO,SAAUC,OAAQC,OAAQv8B,SACzCA,QAAUA,UAAYs5B,QAAS,EAAGqC,UAAW,EAAGb,aAChD,IAEI5wC,MAFAsyC,MAAQ1yC,MAAMqI,SAASmqC,QACvBG,MAAQ3yC,MAAMqI,SAASoqC,OAE3B,IAAc,cAAVC,OAAmC,cAAVC,MACzBvyC,KAAOJ,MAAMoO,MAAMmjC,YAAYiB,OAAQC,YACpC,IAAc,cAAVC,MAAkC,cAAVC,MAC/BvyC,MAAO,MACJ,CAGH,GAAIwyC,UACAxkC,MAAOpO,MAAMyJ,KAAK+oC,QAEtBxyC,OAAMoO,MAAMikC,yBAAyBO,SAAU1vC,MAAOuvC,OAAQ9xC,QAAUqD,KAAM,OAAQkS,QACtF,IAAI28B,UACAzkC,MAAOpO,MAAMyJ,KAAKgpC,QAEtBv8B,SAAQ47B,SAAU,EAClB9xC,MAAMoO,MAAMikC,yBAAyBQ,SAAU3vC,MAAOsvC,OAAQ7xC,QAAUqD,KAAM,OAAQkS,SACtF9V,KAA2B,IAApB8V,QAAQs5B,QAQnB,MANIpvC,SAAS,GAA6B,IAApB8V,QAAQs5B,SAC1Bt5B,QAAQs5B,QAAU,EAClBt5B,QAAQ86B,UAAuB5vC,SAAXqxC,OAAuB,SAAW,OAC/CryC,QAAS,GAA8B,IAAtB8V,QAAQ27B,YAChC37B,QAAQ27B,UAAY,GAEjBzxC,MAGXJ,MAAM8yC,cAAgB,SAAUC,QAASC,QAASzvC,MAC9CvD,MAAM6D,KAAKN,KAAM,SAAUL,MAAO7C,KAC9B0yC,QAAQ1xC,KAAK2xC,QAAQ1tC,OAAOjF,SAMpCL,MAAMizC,aAAe,SAAUjC,UAAWkC,SAAUlI,UAAWmI,WAO3D,IAAK,GANDC,SAAUpI,UAAU58B,MACpBilC,QAAUF,UAAU/kC,MACpBsY,IAAMsqB,UACNgC,SAAW,SACXM,UAAW,EACXlzC,QACKU,EAAI,EAAGA,EAAIoyC,SAASzyC,SAAUK,EAAG,CACtC,GAAI4d,KAAMw0B,SAASpyC,EACP,OAAR4d,IACI5d,IAAMoyC,SAASzyC,OAAS,EACxB6yC,UAAW,EAEXtzC,MAAM+F,KAAK,iGAAmGmtC,SAASptC,KAAK,OAGhIktC,QAAQ3xC,KAAKqd,KACbgI,IAAM1mB,MAAMyF,YAAYihB,KAAOA,IAAMA,IAAIhI,KACzC00B,QAAUA,QAAUA,QAAQ10B,KAAOtd,OACnCiyC,QAAUA,QAAUA,QAAQ30B,KAAOtd,QAgB3C,MAbIslB,OACI4sB,SACY,WAAR5sB,IACA1mB,MAAM8yC,cAAc1yC,KAAM4yC,QAASK,SACpB,QAAR3sB,IACP1mB,MAAM8yC,cAAc1yC,KAAM4yC,QAASI,SAEnCpzC,MAAM8yC,cAAc1yC,KAAM4yC,QAAStsB,KAGvCtmB,KAAKiB,KAAK2xC,UAGX5yC,MAGXJ,MAAMuzC,oBAAsB,SAAUj0B,SAAUgE,QAASkwB,YAAa9xB,KAAMphB,MACxE,GAAImzC,YAAanwB,QAAQzU,gBAAgBhK,MAAM,KAAM2uC,aACjDE,SAAWpwB,QAAQ1Z,OAAOkM,GAAI4L,KAAKnL,WAAamL,KAAK4xB,SAAWG,WAAa,IAC7EE,UAAYD,QAAQ5tC,KAAK,IAG7BwZ,UAASwqB,gBAAgB6J,YAAch/B,SAAU+M,KAAK/M,SAAUd,UAAW6N,KAAK7N,UAAWrN,SAAUkb,KAAKlb,SAAUlG,KAAMA,OAG9HN,MAAM4zC,mBAAqB,SAAU1+B,UAAW87B,UAAWhG,UAAWmI,UAAWtI,cAAe9B,YAAazlB,QAAS1N,MAClH,GAAKV,UAIL,IAAK,GADDoK,UAAWypB,aAAe/oC,MAAM0oC,uBAAuB9yB,KAAMmzB,YAAYjzB,IACpEhV,EAAI,EAAGA,EAAIoU,UAAUzU,SAAUK,EAGpC,IAAK,GAFD4gB,MAAOxM,UAAUpU,GACjB+yC,cAAgBnyB,KAAKkvB,UAAUnwC,OAAS,EACnCD,EAAI,EAAGA,EAAIkhB,KAAKkvB,UAAUnwC,SAAUD,EAGzC,IAAK,GAFDszC,cAAe9zC,MAAMizC,aAAajC,UAAWtvB,KAAKkvB,UAAUpwC,GAAIwqC,UAAWmI,WAEtEjnC,EAAI,EAAGA,EAAI4nC,aAAarzC,SAAUyL,EAAG,CAC1C,GAAIoX,QAAQ9M,UACR,MAEJ,IAAIg9B,aAAcM,aAAa5nC,EAC/BwV,MAAK/M,SAAW3U,MAAMyU,MAAMc,gBAAgBmM,KAAK/M,SACjD,IAAIrU,OAAQuzC,cAAgB7I,UAAU58B,MAAQpO,MAAMoO,MAAMoC,UAAUw6B,UAAWwI,aACnEK,cAAgBV,UAAU/kC,MAAQpO,MAAMoO,MAAMoC,UAAU2iC,UAAWK,aACnEK,iBAAqBL,YAAYp/B,MAAM,GAAIy2B,cAAe9B,YAAazlB,QAMnF,KAAK5B,KAAKwpB,QAAS,CACf,GAAI6I,QAAS/zC,MAAMoO,MAAMmkC,KAAKjyC,KAAK,GAAIA,KAAK,GAC5C,IAAIyzC,OACA,QAEJ,IAAIC,gBAAiBh0C,MAAM+rC,uBAAuBhD,YAAarnB,KAC/D,IAAIsyB,eACA,SAGJ10B,WAAaoC,KAAKwpB,SAAWxpB,KAAKypB,cAClCnrC,MAAMuzC,oBAAoBj0B,SAAUgE,QAASkwB,YAAa9xB,KAAMphB,MAEhEohB,KAAK/M,SAAS9P,MAAM,KAAMvE,QAO9CN,MAAMi0C,cAAgB,SAAU3wB,SAC5BA,QAAQhV,QAAU,SAAUC,IACxB,MAAOvO,OAAMoO,MAAMuB,eAAepB,GAAI+U,QAAQpN,QAAQi8B,oBAE1D7uB,QAAQzU,gBAAkB,WACtB,MAAOyU,SAAQpN,QAAQi8B,kBAAkBtiC,OAAOw3B,QAAQxiC,MAAM,KAAME,aAI5E/E,MAAMipC,eAAiB,SAAUrzB,KAAM0N,QAASwnB,MAAO51B,WACnDlV,MAAM4zC,mBAAmB1+B,UAAW,MAAO41B,MAAMqI,UAAWnzC,MAAMk0C,YAAa,KAAMpJ,MAAOxnB,QAAS1N,OAIzG5V,MAAMk0C,YAAcl0C,MAAMwN,iBAAkBY,MAAOhN,SAEnDpB,MAAMm0C,qBAAuB,SAAU7wB,QAASunB,eACvCA,cAAc7mC,OACf6mC,cAAc7mC,KAAO,OAEzB6mC,cAAclqC,KAAOkqC,cAAclqC,MAAQ2iB,QAAQhV,QAAQu8B,cAAc97B,OAI7E/O,MAAMo0C,kBAAoB,SAAUx+B,MAChCA,KAAKsU,OAAS,SAAUnb,KAAM7L,MAAOc,KAAM7D,QACvC,GAAI0qC,gBACA97B,KAAMA,KACN7L,MAAOA,MACPc,KAAMA,KACN7D,OAAQA,OAEZyV,MAAKwzB,kBAAkByB,iBAK/B7qC,MAAMq0C,eAAiB,SAAUxsC,QAC7B,MAAkD,oBAA3C3C,OAAOD,UAAU8C,SAASC,KAAKH,SAG1C7H,MAAMs0C,mBAAqB,SAAUluC,OAAQmuC,eACrCv0C,MAAMq0C,eAAeE,eACrBv0C,MAAM0J,OAAOtD,OAAQmuC,eAErBv0C,MAAM6D,KAAK7D,MAAMe,UAAUwzC,eAAgB,SAAUC,cACjDpuC,OAAOouC,eAAgB,KAKnCx0C,MAAMy0C,cAAgB,aAEtBz0C,MAAMotC,wBAA0B,SAAUxjC,OAAQsM,SAC9CA,QAAUlW,MAAMoO,MAAM8jC,sBAAsBh8B,QAC5C,IAAI4yB,WAAY9oC,MAAMiS,eAClB2D,KAAO,GAAI5V,OAAMy0C,cACjBtuC,KAAOnG,MAAM4I,YAAYgB,QAAU,+BAAiC5J,MAAMm6B,SAASvwB,QAAU,yBAA2Bk/B,SAyH5H,OAxHA7oC,GAAEyJ,OAAOkM,MACLkzB,UAAWA,UACXl/B,OAAQA,OACRsL,UAAWlV,MAAMiW,gBAAgB9P,KAAM,iCAAmCA,OAC1EuuC,eAAgB10C,MAAMiW,gBAAgB9P,KAAM,iCAAmCA,OAC/E+P,QAASA,QACT+zB,gBACA+F,UAAWhwC,MAAMiW,gBAAgB9P,KAAM,uBAAyBA,OAChE8pC,WAAYjwC,MAAMiW,gBAAgB9P,KAAM,wBAA0BA,SAEtEyP,KAAKgB,QAAU,WACXhB,KAAKo6B,UAAUp5B,UACfhB,KAAKq6B,WAAWr5B,UAChBhB,KAAKY,WAAY,GAErBZ,KAAKq0B,aAAa3zB,YAAc,SAAUoL,KAAM/M,SAAUd,UAAWyB,eAE7DoM,KADiB,gBAAX,OAEF3S,KAAM2S,MAGH1hB,MAAMyJ,KAAKiY,MAEtBA,KAAKnL,WAAamL,KAAKnL,YAAcvW,MAAMiS,eAC3CyP,KAAK7N,UAAYA,UACjB6N,KAAKpM,cAAgBA,cACI,gBAAf,YACNX,UAAYc,WAAYd,WAE5B+M,KAAK/M,SAAWA,SACZ+M,KAAKypB,iBAAkB,IACvBzpB,KAAKypB,eAAgB,GAEpBzpB,KAAKkvB,YACYxvC,SAAdsgB,KAAK3S,OACL2S,KAAK/gB,KAAO+gB,KAAK/gB,MAAQiV,KAAKtH,QAAQoT,KAAK3S,OAE1C2S,KAAKkvB,YACNlvB,KAAKkvB,WAAalvB,KAAK/gB,QAG/BX,MAAM0rC,yBAAyBhqB,KAAMA,MACrCA,KAAK4xB,SAAWtzC,MAAMqK,WAAWrK,MAAM+C,UAAU2e,KAAKkvB,UAAW,SAAUjwC,MACvE,MAAOX,OAAM4L,SAASjL,KAAM,OAC5BX,MAAMwK,IAAK,GACXkX,KAAK4xB,UAAY5xB,KAAKkvB,UAAUnwC,OAAS,GACzCT,MAAM+F,KAAK,yCAA0C2b,KAAM,2FAE/D,IAAIrK,OAAQzB,KAAK8L,KAAKypB,cAAgB,iBAAmB,YAEzD,OADA9zB,OAAMf,YAAYoL,MACXA,MAEX9L,KAAKq0B,aAAapzB,eAAiB,SAAUlC,UACzCiB,KAAKV,UAAU2B,eAAelC,UAC9BiB,KAAK8+B,eAAe79B,eAAelC,WAEvCiB,KAAKwzB,kBAAoB,SAAUyB,eAC/B,GAAI8J,OAAQ/+B,KAAKizB,SAAS,QAASgC,cAAc1qC,OACjDw0C,OAAMvL,kBAAkByB,eACxB8J,MAAMrL,UASV1zB,KAAKizB,SAAW,SAAU+L,YAAaL,cAAenF,eAClDwF,YAAgC,SAAlBL,cAA2B,KAAQK,aAAe,OAChE,IAAIC,YAA6B,UAAhBD,YACb9J,OACAgK,WAAY90C,MAAMiS,eAClB6D,GAAIs5B,eAAiBpvC,MAAMiS,eAC3Bs9B,cACI4C,kBAAmBj8B,QAAQi8B,kBAC3BC,kBAAmBl8B,QAAQk8B,mBAE/BjF,MAAO,WACHrC,MAAMqI,UAAYvpC,OAClBkhC,MAAME,WAAc58B,MAAOpO,MAAMyJ,KAAKG,OAAOwE,QAC7C08B,MAAMyE,aAAaC,QAAU,EAC7B1E,MAAMyE,aAAasC,UAAY,EAC/B/G,MAAMyE,aAAayB,cAEvB1H,OAAQ,SAAU3d,MAEd,GADA/V,KAAKo6B,UAAU/pC,KAAK6kC,MAAOl1B,KAAM+V,MAC7Bmf,MAAMyE,aAAaC,QAAU,EAAG,CAChC,GAAI2D,YAAa/kC,MAAOxE,OAAOwE,MAC/BxE,QAAOwE,MAAQ08B,MAAME,UAAU58B,MAC/BpO,MAAM4zC,mBAAmBh+B,KAAK8+B,eAAer+B,gBAAiBy0B,MAAMyE,aAAayB,UAAWpnC,OAAQupC,UAAW,KAAMrI,MAAOl1B,KAAMhM,QAEjIirC,YACDj/B,KAAKq6B,WAAWhqC,KAAK6kC,MAAOl1B,KAAM+V,OAG1Cyd,kBAAmB,SAAUyB,eACzB7qC,MAAMm0C,qBAAqBv+B,KAAMi1B,eACjCA,cAAcuE,cAAgBtE,MAAMh1B,EACpC,IAAIq7B,UAAWnxC,MAAMoO,MAAMikC,yBAAyBvH,MAAME,UAAWH,cAAeC,MAAMyE,aAC1FvvC,OAAM4zC,mBAAmBh+B,KAAKV,UAAUmB,gBAAiB86B,SAAUrG,MAAME,UAAWphC,OAAQihC,cAAeC,MAAOl1B,KAAMhM,SAE5HmrC,gBAAiB,SAAU50C,QACvB,MAAO2qC,OAAMmB,YAAY9rC,UAG7Bmf,SAAWtf,MAAM0oC,uBAAuB9+B,OAAQkhC,MAAMh1B,GAS1D,OARIwJ,YACAtf,MAAMs0C,mBAAmBh1B,SAASre,QAASszC,eAC3CzJ,MAAM7pC,QAAUqe,SAASre,QACzB6pC,MAAMmB,YAAc/mC,OAAOC,OAAOma,SAASre,SAC3C6pC,MAAMmB,YAAY2I,cAAe,GAErC9J,MAAMqC,QACNntC,MAAMo0C,kBAAkBtJ,OACjBA,OAGX9qC,MAAMo0C,kBAAkBx+B,MACxB5V,MAAMi0C,cAAcr+B,MACbA,MAgBX5V,MAAMg1C,mBAAqB,SAAU9xC,MAAO0nC,SAAUqK,kBAClDA,iBAAmBA,kBAAoB,EAGvC,IAAIC,cAAe1F,QAAS,EAAGqC,UAAW,EAAGb,aAC7ChxC,OAAMoO,MAAMmkC,KAAK3H,SAAU1nC,MAAOgyC,YAElC,IAAI1F,WAQJ,OAJAxvC,OAAMm1C,uBAAuBjyC,MACzBlD,MAAMu6B,SAASjsB,QAAQ2mC,kBACvBC,YAAYlE,aAAexB,SAExBA,SAiBXxvC,MAAMm1C,uBAAyB,SAAUjyC,MAAOkyC,qBAAsBpE,UAAWqE,WAAY7F,SACvE,QAAdwB,UAEAxB,QAAQnuC,MACJ0N,KAAMqmC,qBACNlyC,MAAOA,MACPc,KAAM,QAEW,WAAdgtC,UAEPxB,QAAQnuC,MACJ0N,KAAMqmC,qBACNlyC,MAAO,KACPc,KAAM,WAEHhE,MAAM0F,cAAcsrC,WAAW,IAEtChxC,MAAM6D,KAAKmtC,UAAW,SAAU9mB,OAAQxL,KACpC,GAAI42B,mBAAoBD,WAAW/vC,QAAQoZ,KAC5B,SAAXwL,OACAslB,QAAQnuC,MACJ0N,KAAMqmC,qBAAqB9vC,OAAOgwC,mBAClCpyC,MAAOlD,MAAMmL,IAAIjI,MAAOoyC,mBACxBtxC,KAAM,QAEQ,WAAXkmB,OACPslB,QAAQnuC,MACJ0N,KAAMqmC,qBAAqB9vC,OAAOgwC,mBAClCpyC,MAAO,KACPc,KAAM,WAEHhE,MAAM0F,cAAcwkB,QAAQ,IAEnClqB,MAAMm1C,uBAAuBjyC,MAAOkyC,qBAChClrB,OAAQorB,kBAAmB9F,aAMhD9pB,OAAQ3lB,YC5iDX,IAAIA,aAAcA,gBACdC,MAAQA,OAASD,aAErB,SAAWE,EAAGD,OACV,YAEAA,OAAMuR,kBAAkB,yBAIxBvR,MAAMsa,SAAS,2BACXf,WAAY,mBAKhBvZ,MAAMsa,SAAS,wCACXf,WAAY,4BAGhBvZ,MAAMsa,SAAS,yCACXf,WAAY,4BAKhBvZ,MAAMsa,SAAS,qCACXf,WAAY,4BAIhBvZ,MAAMsa,SAAS,mCACXf,YAAa,uCAAwC,2CAGzDvZ,MAAMsa,SAAS,cACXf,WAAY,0BACZyzB,oBAAqB,OAUzBhtC,MAAMoO,MAAMrL,UAAUwyC,WAAa,SAAUzH,WACzC,OACI/qC,WACIiB,KAAM,yBACN8pC,UAAWA,aAMvB9tC,MAAMoO,MAAMrL,UAAUyyC,mBAAqB,SAAUC,OACjD,OACI1yC,WACIiB,KAAM,gCACNyxC,MAAOA,SAMnBz1C,MAAMoO,MAAMsnC,aAAe,SAAU/mC,OAAQC,QAGzC,MAFAD,QAAoB,IAAXA,OAAe,IAAMA,QAAU,GACxCC,OAAoB,IAAXA,OAAe,IAAMA,QAAU,GAChCD,OAAoBC,OAAkBD,OAAS,IAAMC,OAAxBD,OAApBC,QAGrB5O,MAAMoO,MAAMrL,UAAU4yC,oBAAsB,SAAU7H,UAAWtuB,YAAaixB,OACxDrvC,SAAd0sC,WACA2C,MAAMpvC,KAAKrB,MAAMoO,MAAMsnC,aAAal2B,YAAYo2B,YAAa9H,aAIrE9tC,MAAMoO,MAAMrL,UAAU8yC,4BAA8B,SAAUJ,MAAOK,cAAet2B,YAAaixB,OAC7FzwC,MAAMoO,MAAMrL,UAAUgzC,SAAS30C,OAAW00C,cAAcL,OAAQj2B,aAChExf,MAAMoO,MAAMrL,UAAU4yC,oBAAoBG,cAAcL,MAAQ,QAASj2B,YAAaixB,QAG1FzwC,MAAMoO,MAAMrL,UAAUizC,0BAA4B,SAAUC,eAAgBH,cAAet2B,YAAaixB,OACpGzwC,MAAM6D,KAAKoyC,eAAgB,SAAUC,EAAGhqC,GACpClM,MAAMoO,MAAMrL,UAAU8yC,4BAA4B3pC,EAAG4pC,cAAet2B,YAAaixB,UAIzFzwC,MAAMoO,MAAMrL,UAAUgzC,SAAW,SAAUjI,UAAW5qC,MAAOsc,aACzD,GAAIpf,KAUJ,OATkBgB,UAAd0sC,YACA1tC,KAAOJ,MAAMmL,IAAIqU,YAAYrf,OAAQH,MAAMoO,MAAMsnC,aAAal2B,YAAYo2B,YAAa9H,WAAYtuB,YAAY4yB,oBAEtGhxC,SAAThB,OAEAA,KAAOJ,MAAMyF,YAAYvC,OAASA,MAC7B,gBAAkBA,OAAQA,MAAMizC,aACZ/0C,SAApB8B,MAAMH,UAA0BG,MAAQsc,YAAYmd,OAAOz5B,QAE7D9C,MAMXJ,MAAMoO,MAAMrL,UAAUqzC,iCAEtBp2C,MAAMoO,MAAMrL,UAAUszC,SAAW,SAAUC,eAAgBpzC,MAAOsc,aAE9D,GAAI+2B,OAAQv2C,MAAMyJ,KAAKvG,OACnBszC,WAAax2C,MAAMoO,MAAMsnC,aAAal2B,YAAYi3B,aAAcH,eAKpE,OAHcl1C,UAAVm1C,OACA/2B,YAAY8D,QAAQ4G,OAAOssB,WAAYD,OAEpCD,eAAiBt2C,MAAMoO,MAAMrL,UAAUqzC,8BAAgCG,OAQlFv2C,MAAMoO,MAAMrL,UAAU2zC,aAAe,SAAUZ,cAAet2B,YAAanf,IAAKs2C,KAC5E,GAAI1sB,KAAMjqB,MAAMoO,MAAMrL,UAAUgzC,SAASD,cAAcz1C,IAAM,QAASy1C,cAAcz1C,KAAMmf,YAC1F,OAAgBpe,UAAR6oB,IAAqBA,IAAM0sB,KAKvC32C,MAAMoO,MAAMrL,UAAU6zC,WAAa,SAAUC,SAAUC,OAAQC,gBAC3D,GAAIC,QAASxH,QAAS,EAAGqC,UAAW,EAAGb,aAMvC,OALAhxC,OAAMoO,MAAMmkC,KAAKsE,SAAUC,OAAQE,OAKR,IAApBA,MAAMnF,UAAkB,EACxBkF,eAAiB,eAAiB,SAAYC,MAAMxH,QAAUwH,MAAMnF,UACtEmF,MAAMxH,QAAU,EAAI,eAAiBwH,MAAMnF,WAGpD7xC,MAAMoO,MAAMrL,UAAUk0C,YAAc,SAAUnB,cAAet2B,aAGzD,GAAI03B,WAAYl3C,MAAMoO,MAAMsnC,aAAal2B,YAAYi3B,aAAcX,cAAcU,WAGjF,OAFAV,eAAcU,WAAax2C,MAAMoO,MAAMsnC,aAAal2B,YAAYo2B,YAAaE,cAAchI,WAC3FgI,cAAchI,UAAYoJ,UACnBpB,eAKX91C,MAAMoO,MAAMrL,UAAUo0C,cAAgB,SAAUrB,cAAet2B,aACvDs2B,cAAcF,aACdp2B,YAAY43B,cAAc/1C,KAAKy0C,cAAcF,aAE7CE,cAAcW,cACdj3B,YAAY63B,eAAeh2C,KAAKy0C,cAAcW,cAElDj3B,YAAYmd,OAAOmZ,cAAcL,OAC7BK,cAAcF,aACdp2B,YAAY43B,cAAc1yC,MAE1BoxC,cAAcW,cACdj3B,YAAY63B,eAAe3yC,OAInC1E,MAAMsa,SAAS,uCACXf,YAAa,6BAIjBvZ,MAAMoO,MAAMkpC,cAAgB,SAAUv0C,UAAWw0C,YAC7C,GAAIvyC,OAAQjC,UAAUw0C,WAAa,WAEnC,OADAx0C,WAAUw0C,YAAc,IAEpBl2C,KAAM,SAAUsN,QACZ,GAAI6oC,SAAUx3C,MAAMoO,MAAMsnC,aAAa3yC,UAAUw0C,YAAa5oC,OAC9D3J,OAAM3D,KAAK0B,UAAUw0C,aACrBx0C,UAAUw0C,YAAcC,SAE5B9yC,IAAK,WACD3B,UAAUw0C,YAAcvyC,MAAMN,SAM1C1E,MAAMoO,MAAMrL,UAAU00C,YAAc,SAAU3B,cAAet2B,YAAak4B,eACtE,GAAIC,QAASD,cAAcp9B,SACvBs9B,YAAc53C,MAAMgR,eAAe0mC,cAAc7hC,SACzB,mBAAlB,cACN7V,MAAM+F,KAAK,qEACP+vC,cAAc9xC,KAAO,8BAA+B4zC,aAEvD53C,MAAMoa,SAASu9B,OAAQ,6BAExBA,OAAS33C,MAAMsa,SAAS,mCAE5B,IAAIu9B,gBAAiB/B,cAAet2B,YACpC,IAAIxf,MAAMoa,SAASu9B,OAAQ,qCAAsC,CAC7D,GAAIG,UACJ93C,OAAM6D,KAAK8zC,OAAO1B,eAAgB,SAAUC,EAAGhqC,GAC3C4rC,OAAO5rC,GAAK,WACR,GAAIupC,OAAQz1C,MAAMoO,MAAMrL,UAAUgzC,SAASD,cAAc5pC,EAAI,QAAS4pC,cAAc5pC,GAAIsT,YAIxF,OADAi2B,OAAmBr0C,SAAVq0C,OAA6B,OAANS,EAAcA,EAAIT,SAI1DoC,cAAc9wC,QAAQ+wC,QAE1B,GAAI93C,MAAMoa,SAASu9B,OAAQ,wCAAyC,CAC1D,SAAW7B,gBAAoB,aAAeA,gBAChD91C,MAAM+F,KAAK,oIAAyI+vC,cAExJ,IAAIvkB,UAAWvxB,MAAMoO,MAAMrL,UAAUgzC,SAASD,cAAchI,UAAWgI,cAAcL,MAAOj2B,YAI5F,IAFAq4B,cAAc9wC,QAAQwqB,UAELnwB,SAAbmwB,SACA,OAGR,GAAIwmB,aAAcH,YAAY/yC,MAAM,KAAMgzC,cAC1C,IAAI73C,MAAMoa,SAASu9B,OAAQ,yCAA0C,CAEjE,GAAInB,YAA0Cp1C,SAA7B00C,cAAcU,WAA2BV,cAAcU,WAAckB,cAAcM,SAAW,GAAK52C,MACjGA,UAAfo1C,YAA4Cp1C,SAAhB22C,cAI5B/3C,MAAMoO,MAAMrL,UAAUszC,SAASP,cAAcU,WAAYuB,YAAav4B,aACtEu4B,YAAc32C,QAGtB,MAAO22C,aAIX,IAAInR,gBAEJ5mC,OAAMuR,kBAAkB,kBAGxBvR,MAAMu6B,SAAS0d,eAAiB,SAAUlpC,KAAMjO,GAE5C,MADAd,OAAMu6B,SAASkM,mBAAmBG,aAAc73B,KAAMjO,GAC/C8lC,aAAa,IAGxB5mC,MAAMu6B,SAAS2d,YAAc,SAAUnpC,MACnC,MAAO/O,OAAMu6B,SAAS0d,eAAelpC,KAAM,IAI/C/O,MAAMu6B,SAAS4d,gBAAkB,SAAUppC,MACvC,GAAI83B,UAAW7mC,MAAMu6B,SAASkM,mBAAmB,KAAM13B,KAAM,EAC7D,OAAO83B,YAAa93B,KAAKtO,OAAS,GAAKsO,KAAKpM,UAAUkkC,SAAW,IAYrE7mC,MAAMu6B,SAAS6d,UAAY,SAAU12B,KAAM3S,KAAMspC,OAE7C,IADA,GAAIj4C,WACS,CACT,GAAe,KAAT2O,KAAyB,KAAT2S,MAAiB22B,MACnC,MAAO,KAKX,KAAK32B,OAAS3S,KACV,KAEJ,IAAIupC,UAAWt4C,MAAMu6B,SAAS2d,YAAYx2B,MACtC62B,SAAWv4C,MAAMu6B,SAAS2d,YAAYnpC,KAE1C,IAAiB,MAAbupC,UAAoBA,WAAaC,SACjC,MAAO,KAEXn4C,MAAKiB,KAAKk3C,UACV72B,KAAO1hB,MAAMu6B,SAAS4d,gBAAgBz2B,MACtC3S,KAAO/O,MAAMu6B,SAAS4d,gBAAgBppC,MAE1C,MAAO3O,OAIXJ,MAAMoO,MAAMrL,UAAUy1C,gBAAkB,SAAUh5B,YAAarf,QAC3DH,MAAM6D,KAAK1D,OAAQ,SAAU+C,MAAO7C,KAChC,GAAIo4C,GAAIj5B,YAAYk5B,gBACpBl5B,aAAYm5B,OAAOt3C,KAAKrB,MAAMu6B,SAASyM,cAAc3mC,IAAI0H,YACzD,KAAK,GAAIjH,GAAI,EAAGA,EAAI23C,EAAEh4C,SAAUK,EAC5B,GAAId,MAAMu6B,SAAS6d,UAAUK,EAAE33C,GAAGs3C,UAAW54B,YAAYzQ,MAAM,GAAO,CAClE,GAAI6pC,QAAS54C,MAAMyJ,KAAKgvC,EAAE33C,GAAGg1C,gBACJ10C,SAArBw3C,OAAO9K,WAA2B9tC,MAAMoO,MAAMrL,UAAU81C,YAAYD,OAAO9K,cAC3E8K,OAAO9K,UAAY,IAIvBtuB,YAAY43B,cAAc/1C,KAAKme,YAAYzQ,MAC3CyQ,YAAY63B,eAAeh2C,KAAKme,YAAYzQ,KAC5C,IAAI2oC,eAAgB13C,MAAMoO,MAAMrL,UAAU+1C,WAAWF,OAAO50C,MACxD+0C,OAAS/4C,MAAMoO,MAAMrL,UAAU00C,YAAYmB,OAAQp5B,YAAak4B,cACrDt2C,UAAX23C,QACA/4C,MAAMoO,MAAMrL,UAAUszC,SAAS,KAAM0C,OAAQv5B,aAEjDA,YAAY63B,eAAe3yC,MAC3B8a,YAAY43B,cAAc1yC,MAG7B1E,MAAMyF,YAAYvC,QACnBlD,MAAMoO,MAAMrL,UAAUy1C,gBAAgBh5B,YAAatc,OAEvDsc,YAAYm5B,OAAOj0C,SAK3B1E,MAAMoO,MAAMrL,UAAU81C,YAAc,SAAU9pC,MAC1C,MAAwB,gBAAX,OAAuBA,KAAKtG,QAAQ,WAIrDzI,MAAMoO,MAAMrL,UAAUi2C,kBAAoB,SAAUlD,cAAet2B,aAC/D,GACI44B,WADAa,GAAKj5C,MAAMoO,MAAMrL,UAAU81C,WAS/B,OAPII,IAAGnD,cAAchI,WACjBsK,UAAYp4C,MAAMoO,MAAMsnC,aAAal2B,YAAYo2B,YAAaE,cAAchI,YAEvEmL,GAAGz5B,YAAYi3B,eAAiBwC,GAAGnD,cAAcU,eACtD4B,UAAYp4C,MAAMoO,MAAMsnC,aAAal2B,YAAYi3B,aAAcX,cAAcU,eAG7E4B,YACA54B,YAAYk5B,iBAAiBr3C,MAAMy0C,cAAeA,cAAeW,aAAcj3B,YAAYi3B,aAAcb,YAAap2B,YAAYo2B,YAAawC,UAAWA,aACnJ,IAKfp4C,MAAMoO,MAAM8qC,gBAAkB,SAAUC,UACpC,GAAI7tC,MAAOtL,MAAMsL,KAAK6tC,SACtB,OAAO7tC,MAAKka,KAAKxlB,MAAM0M,qBAAoB,KAK/C1M,MAAMoO,MAAMrL,UAAUq2C,wBAA0B,SAAUtD,cAAet2B,YAAak4B,eAClF,MAAI13C,OAAMoO,MAAMrL,UAAUi2C,kBAAkBlD,cAAet2B,aACvD,OAGOxf,MAAMoO,MAAMrL,UAAU00C,YAAY3B,cAAet2B,YAAak4B,gBAI7E13C,MAAMoO,MAAMrL,UAAUs2C,qBAAuB,SAAUvD,cAAet2B,YAAak4B,eAC/E5B,cAAgB91C,MAAMyJ,KAAKqsC,eAEvB91C,MAAMoa,SAASs9B,cAAcp9B,SAAU,qCACvCw7B,cAAgB91C,MAAMoO,MAAMrL,UAAUk0C,YAAYnB,cAAet2B,aAErE,IAAI85B,UAAW5B,cAAcp9B,UAAYo9B,cAAcp9B,SAAS0yB,mBAChE,IAAIsM,SAAU,CACV,GAAIC,UAAWv5C,MAAMmR,qBAAqBmoC,UAAWxD,cAAet2B,aACpEA,aAAY+5B,SAASl4C,KAAKk4C,YAKlCv5C,MAAMoO,MAAMrL,UAAUy2C,sBAAwB,SAAU1D,cAAet2B,YAAak4B,eAChF,GAAIp9B,UAAWo9B,cAAcp9B,SACzBm/B,cAAgBz5C,MAAMoa,SAASE,SAAU,wCACzCo/B,WAAa15C,MAAMoa,SAASE,SAAU,oCAQ1C,IANIm/B,eACAz5C,MAAMoO,MAAMrL,UAAU8yC,4BAA4B,QAASC,cAAet2B,YAAaA,YAAYm6B,YAEnGD,YACA15C,MAAMoO,MAAMrL,UAAUizC,0BAA0B17B,SAAS27B,eAAgBH,cAAet2B,YAAaA,YAAYm6B,aAEhHD,aAAeD,cAAe,CAC/B,GAAIG,WAAYt/B,SAASu/B,iBACzB,IAAID,UAAW,CACX,GAAIE,WAAY95C,MAAMe,UAAUf,MAAMmR,qBAAqByoC,WAAY9D,cAAet2B,cACtFA,aAAYm6B,WAAan6B,YAAYm6B,WAAWr0C,OAAOw0C,cAKnE95C,MAAMoO,MAAMrL,UAAU+1C,WAAa,SAAUjjC,SAAUigC,eAC9CjgC,UACD7V,MAAM+F,KAAK,iDAAkD+vC,eAE7DjgC,SAASpN,QAAQ,YACjBoN,SAAW,oBAAsBA,SAErC,IAAIyE,UAAWta,MAAMsa,SAASzE,SAC9B,QAASyE,SAAUA,SAAUzE,SAAUA,WAI3C7V,MAAMoO,MAAMrL,UAAUg3C,YAAc,SAAUC,KAAMx6B,aAC3B,gBAAX,MACNw6B,KAAOh6C,MAAMoO,MAAMrL,UAAUwyC,WAAWyE,MAGb54C,SAAtB44C,KAAK7D,eACV6D,KAAOh6C,MAAMoO,MAAMrL,UAAUyyC,mBAAmBwE,KAAK7D,cAEzD,IAAI/1C,KACJ,IAAI45C,KAAKj3C,UAAW,CAChB,GAAI+yC,eAAe4B,aACnB,IAAI13C,MAAM4H,YAAYoyC,KAAKj3C,WAAY,CAEnC,GAAIk3C,YAAaD,KAAKj3C,SACtB3C,MAAOgB,MACP,KAAK,GAAIN,GAAI,EAAGA,EAAIm5C,WAAWx5C,SAAUK,EACrCg1C,cAAgBmE,WAAWn5C,GAC3B42C,cAAgB13C,MAAMoO,MAAMrL,UAAU+1C,WAAWhD,cAAc9xC,MAC/Dwb,YAAY06B,iBAAiBpE,cAAet2B,YAAak4B,mBAI7D5B,eAAgBkE,KAAKj3C,UACrB20C,cAAgB13C,MAAMoO,MAAMrL,UAAU+1C,WAAWhD,cAAc9xC,MAC/D5D,KAAOof,YAAY06B,iBAAiBpE,cAAet2B,YAAak4B,eAqBxE,MAjBI13C,OAAM4H,YAAYoyC,QAClBx6B,YAAY26B,wBAA0B36B,YAAY26B,4BAClD36B,YAAY26B,wBAAwB36B,YAAYi3B,cAAgB,SAEpEz2C,MAAM6D,KAAKm2C,KAAM,SAAU92C,MAAO7C,KAC9B,GAAY,cAARA,IAAqB,CACrBmf,YAAY63B,eAAeh2C,KAAKhB,IAChC,IAAID,MAAOof,YAAYmd,OAAOz5B,MAAOsc,YAExBpe,UAAThB,OACAJ,MAAMoO,MAAMrL,UAAUszC,SAAS,KAAMj2C,KAAMof,aAE3Cpf,KAAOgB,QAEXoe,YAAY63B,eAAe3yC,SAG5BtE,MAKXJ,MAAMoO,MAAMrL,UAAUq3C,aAAe,SAAU56B,YAAa66B,SAAUzC,aAClEA,YAAcA,aAAe53C,MAAMoO,MAAMrL,UAAUg3C,YACnDv6B,YAAYmd,OAAS,SAAU2d,OAC3B,MAAO1C,aAAY0C,MAAO96B,cAE9BA,YAAY63B,eAAiBr3C,MAAMoO,MAAMkpC,cAAc93B,YAAa,gBACpEA,YAAY43B,cAAgBp3C,MAAMoO,MAAMkpC,cAAc93B,YAAa,eACnEA,YAAY06B,iBAAmBG,UAGnCr6C,MAAMoO,MAAMrL,UAAUiqC,oBAAsB,SAAUsN,OAClD,GAAI96B,cACA+5B,YAIJ,OAFAv5C,OAAMoO,MAAMrL,UAAUq3C,aAAa56B,YAAaxf,MAAMoO,MAAMrL,UAAUs2C,sBACtE75B,YAAYmd,OAAO2d,QAEfv3C,UAAWyc,YAAY+5B,WAI/Bv5C,MAAMoO,MAAMrL,UAAU82C,kBAAoB,SAAUS,OAChD,GAAI96B,cACAm6B,cAIJ,OAFA35C,OAAMoO,MAAMrL,UAAUq3C,aAAa56B,YAAaxf,MAAMoO,MAAMrL,UAAUy2C,uBACtEh6B,YAAYmd,OAAO2d,OACZ96B,YAAYm6B,YAIvB35C,MAAMoO,MAAMrL,UAAUw3C,mBAAqB,SAAUC,WAAYxhB,WAC7D,GAAI1tB,MAAOtL,MAAMoO,MAAM8qC,gBAAgBsB,WACvC,OAAO,UAAUj3C,KAAMiM,QAASjN,MAAO5B,MAGnC,IAAK,GAFDoO,MAAOiqB,UAAUnpB,OAAOw3B,QAAQxiC,MAAM,KAAMlE,KAAKyT,MAAM,EAAG7R,QAErDzB,EAAI,EAAGA,EAAIwK,KAAK7K,SAAUK,EAAG,CAClC,GAAIT,KAAMiL,KAAKxK,EACf,IAAkD,OAA9Cd,MAAMu6B,SAAS6d,UAAU/3C,IAAK0O,MAAM,GACpC,MAAOyrC,YAAWn6C,QAOlCL,MAAMoO,MAAMrL,UAAU03C,mBAAqB,SAAUC,aACjD,GAAI12C,MAAOhE,MAAMyF,YAAYi1C,aAAeA,YAAcA,YAAY12C,IACtE,OAAgB,UAATA,YAIXhE,MAAMoO,MAAMrL,UAAU43C,yBAA2B,SAAUx6C,OAAQ64B,WAC/D,MAAO,UAAUz1B,KAAMiM,QAASjN,MAAO5B,MACnC,GAAI8Q,UAAWzR,MAAMmL,IAAIhL,OAAQQ,KAAKyT,MAAM,EAAG7R,OAAQy2B,UACvD,OAAOh5B,OAAM4H,YAAY6J,UAAY,QAAU,WAKvDzR,MAAMoO,MAAMrL,UAAU63C,eAAiB,SAAUz6C,OAAQ+V,QAAS8iB,WAC9D,MAAI9iB,SAAQ2kC,WACD76C,MAAMoO,MAAMrL,UAAU43C,yBAAyBx6C,OAAQ64B,WAEzD9iB,QAAQskC,WACNx6C,MAAMoO,MAAMrL,UAAUw3C,mBAAmBrkC,QAAQskC,WAAYxhB,WADnE,QAMTh5B,MAAMoO,MAAMrL,UAAU+3C,wBAA0B,SAAUn9B,UACtD,MAAO,UAAUpa,KAAMiM,QAASjN,MAAO5B,MACnC,GAAsBS,SAAlBmC,KAAKiM,SAAwB,CAC7B,GAAIkrC,aAAc/8B,SAASpa,KAAMiM,QAASjN,MAAO5B,KAEjD,OADA4C,MAAKiM,SAAWxP,MAAMoO,MAAMrL,UAAU03C,mBAAmBC,aAClDn3C,KAAKiM,YAQxBxP,MAAMoO,MAAMrL,UAAU0kB,SAAW,SAAUtnB,OAAQm6C,MAAOpkC,SACtD,IAAK,GAAIpV,GAAI,EAAGA,EAAIw5C,MAAM75C,SAAUK,EAChCX,OAASH,MAAMoO,MAAMrL,UAAU5C,OAAQm6C,MAAMx5C,GAAIoV,QAErD,OAAO/V,SAGXH,MAAMoO,MAAM2sC,oBAAsB,SAAUC,QAASC,SACjD,GAAIC,OAAQF,QAAQjsC,KAAKtO,OAASw6C,QAAQlsC,KAAKtO,MAC/C,OAAiB,KAAVy6C,MAAcF,QAAQvzB,SAAWwzB,QAAQxzB,SAAWyzB,OAK/Dl7C,MAAMoO,MAAM+sC,kBAAoB,SAAU3L,QAASlsB,SAC/CksB,QAAQhqB,KAAKxlB,MAAMoO,MAAM2sC,qBACzB/6C,MAAM8wC,YAAYxtB,QAASksB,UAuB/BxvC,MAAMoO,MAAMk+B,mBAAqB,SAAUnsC,OAAQm6C,MAAOpkC,SACtDA,QAAUA,WAEV,IAAI8iB,WAAYh5B,MAAMoO,MAAMm5B,iBACxB6T,UAAYp7C,MAAMoO,MAAMo5B,iBAExB6T,eAAiBr7C,MAAMoO,MAAMrL,UAAU63C,eAAez6C,OAAQ+V,QAAS8iB,WAEvExZ,aACArf,OAAQA,OACRiG,QAEIgI,MAAOitC,eAAiBr7C,MAAMoO,MAAMrL,UAAU03C,mBAAmBY,eAAe,KAAM,GAAI,GAAI,UAElGjJ,kBAAmBpZ,UACnBmZ,kBAAmBiJ,UACnBjB,wBAAyB/4C,OACzBk6C,iBACA5C,oBAEJ14C,OAAMoO,MAAMrL,UAAUq3C,aAAa56B,YAAaxf,MAAMoO,MAAMrL,UAAUq2C,yBACtE55B,YAAY8D,SACR8lB,kBAAmB,SAAUyB,eACzBA,cAAcpjB,SAAWjI,YAAY87B,cAAc76C,OACnD+e,YAAY87B,cAAcj6C,KAAKwpC,iBAGvC7qC,MAAMo0C,kBAAkB50B,YAAY8D,SAEpC9D,YAAYmd,OAAO2d,MAEnB,IAAIiB,eAAgBv7C,MAAMyJ,KAAK2xC,UAgB/B,OAd4Ch6C,UAAxCoe,YAAY26B,0BACZl6C,EAAEyJ,OAAO8V,YAAY26B,wBAAyBjkC,QAAQskC,YACtDa,eAAiBr7C,MAAMoO,MAAMrL,UAAUw3C,mBAAmB/6B,YAAY26B,wBAAyBnhB,YAEnGuiB,cAActiB,YAAcj5B,MAAMoO,MAAM23B,qBAAsBsV,eAAiBr7C,MAAMoO,MAAMrL,UAAU+3C,wBAAwBO,gBACnHr7C,MAAMoO,MAAM03B,wBACtBtmB,YAAY+sB,aAAer2B,QAAQq2B,cAAgBvsC,MAAMotC,wBAAwB5tB,YAAYpZ,QAAS+rC,kBAAmBoJ,gBAErH/7B,YAAYk5B,iBAAiBj4C,OAAS,IACtC+e,YAAYg8B,aACZh8B,YAAYm5B,OAAS34C,MAAMoO,MAAMkpC,cAAc93B,YAAa,QAC5Dxf,MAAMoO,MAAMrL,UAAUy1C,gBAAgBh5B,YAAarf,SAEvDH,MAAMoO,MAAM+sC,kBAAkB37B,YAAY87B,cAAe97B,YAAY+sB,cAC9D/sB,YAAYpZ,OAAOgI,OAG9BnO,EAAEyJ,OAAO1J,MAAMoO,MAAMk+B,mBAAoBtsC,MAAMoO,MAAMrL,WACrD/C,MAAMoO,MAAMrL,UAAY/C,MAAMoO,MAAMk+B,mBAGpCtsC,MAAMy7C,aAAe,SAAUnB,OAC3B,OACIj7B,kBACIG,YAAa,iCACb5P,OAAQ0qC,SAMpBt6C,MAAM07C,cAAgB,SAAUpB,OAC5B,OACIj7B,kBACIG,YAAa,iCACb5P,OAAQ0qC,UAKrB50B,OAAQ3lB,YCppBX,IAAI47C,aAAcA,gBACd37C,MAAQA,OAAS27C,aAErB,SAAW17C,EAAGD,OACV,YAEAA,OAAMuR,kBAAkB,yBACxBvR,MAAMuR,kBAAkB,oBAMxBvR,MAAMsa,SAAS,0BACXf,WAAY,kCACZyzB,oBAAqB,mBAGzBhtC,MAAMi6C,WAAW/2C,MAAQlD,MAAMgJ,SAG/BhJ,MAAMi6C,WAAWjxC,SAAWhJ,MAAMi6C,WAAW/2C,MAC7ClD,MAAMsa,SAAS,6BACXf,WAAY,2BAIhBvZ,MAAMi6C,WAAW2B,iBAAmB,SAAU9F,eAE1C,MADAA,eAAc9xC,KAAO,4BACd8xC,eAGX91C,MAAMsa,SAAS,iCACXf,WAAY,0CAGhBvZ,MAAMi6C,WAAW9D,aAAe,SAAUL,eACtC,MAAOA,eAAcL,OAGzBz1C,MAAMsa,SAAS,mCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,2CAGzBhtC,MAAMi6C,WAAW4B,eAAiB,SAAU34C,OACxC,GAAIC,UAAW2J,OAAO5J,MACtB,OAAO44C,OAAM34C,UAAY/B,OAAY+B,UAGzCnD,MAAMi6C,WAAW4B,eAAeE,OAAS,SAAUjG,eAE/C,MADAA,eAAc9xC,KAAO,kCACd8xC,eAGX91C,MAAMsa,SAAS,mCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,2CAGzBhtC,MAAMi6C,WAAW+B,eAAiB,SAAU94C,MAAO4yC,eAC/C,GAAqB,gBAAV5yC,OAAoB,CAC3B,GAAmC,gBAAxB4yC,eAAc5oC,OAAuB4uC,MAAMhG,cAAc5oC,OAIhE,MAAOhK,OAAM6E,UAHb,IAAIk0C,SAAUj8C,MAAMgN,eAAe9J,MAAO4yC,cAAc5oC,MAAO4oC,cAAc3oC,OAC7E,OAAO8uC,SAAQl0C,aAO3B/H,MAAMi6C,WAAW+B,eAAeD,OAAS,SAAUjG,eAE/C,MADAA,eAAc9xC,KAAO,kCACd8xC,eAGX91C,MAAMsa,SAAS,0BACXf,WAAY,oCAGhBvZ,MAAMi6C,WAAWjvC,MAAQ,SAAU9H,OAC/B,MAAOlD,OAAMe,UAAUmC,OAAOzC,QAIlCT,MAAMsa,SAAS,0BACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,sCAGzBhtC,MAAMi6C,WAAW5sC,MAAQ,SAAUnK,OAC/B,MAAOkK,MAAKC,MAAMnK,QAItBlD,MAAMsa,SAAS,2BACXf,WAAY,4BAGhBvZ,MAAMi6C,WAAW,UAAY,SAAUnE,cAAet2B,aAClD,GAAIg3B,YAAax2C,MAAMoO,MAAMsnC,aAAal2B,YAAYi3B,aAAcX,cAAcU,WAClFh3B,aAAY8D,QAAQ4G,OAAOssB,WAAY,KAAM,WAIjDx2C,MAAMsa,SAAS,+BACXf,WAAY,0CAGhBvZ,MAAMi6C,WAAWiC,WAAa,SAAUpG,cAAet2B,aAC9Cs2B,cAAcnqC,QAAWmqC,cAAcnqC,OAAOlL,QAC/CT,MAAM+F,KAAK,sFAAyF+vC,cAExG,KAAK,GAAIh1C,GAAI,EAAGA,EAAIg1C,cAAcnqC,OAAOlL,OAAQK,IAAK,CAClD,GAAIoC,OAAQ4yC,cAAcnqC,OAAO7K,GAE7BywB,SAAW/R,YAAYmd,OAAOz5B,MAClC,IAAiB9B,SAAbmwB,SACA,MAAOA,YAKnBvxB,MAAMsa,SAAS,gCACXf,YAAa,oCACA,kCACA,cACbyzB,oBAAqB,sCACrBiJ,gBACIkG,OAAQ,EACRroC,OAAQ,KAKhB9T,MAAMi6C,WAAWmC,YAAc,SAAU3G,MAAO4G,aAC5C,GAAIF,QAASE,YAAYF,SACrBroC,OAASuoC,YAAYvoC,QAEzB,IAAsB,gBAAZ,QAA2C,gBAAb,SAA4C,gBAAb,QAGvE,MAAO2hC,OAAQ0G,OAASroC,QAI5B9T,MAAMi6C,WAAWmC,YAAYL,OAAS,SAAUjG,eAW5C,aATOA,eAAcwG,iBACdxG,eAAcyG,WAEQn7C,SAAzB00C,cAAcqG,SACdrG,cAAcqG,OAAmC,IAAzBrG,cAAcqG,OAAgB,EAAI,EAAIrG,cAAcqG,QAEnD/6C,SAAzB00C,cAAchiC,SACdgiC,cAAchiC,QAAUgiC,cAAchiC,QAAmC1S,SAAzB00C,cAAcqG,OAAuBrG,cAAcqG,OAAS,IAEzGrG,eAGX91C,MAAMsa,SAAS,6BACXf,YAAc,oCAAqC,yCACnD08B,gBACIuG,KAAM,KACNC,MAAO,QAIfz8C,MAAMi6C,WAAWyC,cACbC,MAAO,SAAUxzC,EAAGC,GAAK,MAAOpJ,OAAMoO,MAAMmjC,YAAYpoC,EAAGC,IAC3DwzC,MAAO,SAAUzzC,EAAGC,GAAK,OAAQpJ,MAAMoO,MAAMmjC,YAAYpoC,EAAGC,IAC5DyzC,KAAM,SAAU1zC,EAAGC,GAAK,MAAOD,IAAKC,GACpC0zC,IAAK,SAAU3zC,EAAGC,GAAK,MAAOD,GAAIC,GAClC2zC,KAAM,SAAU5zC,EAAGC,GAAK,MAAOD,IAAKC,GACpC4zC,IAAK,SAAU7zC,EAAGC,GAAK,MAAOD,GAAIC,GAClC6zC,IAAK,SAAU9zC,EAAGC,GAAK,MAAOD,GAAIC,GAClC8zC,IAAK,SAAU/zC,EAAGC,GAAK,MAAOD,GAAIC,GAClC+zC,IAAK,SAAUh0C,EAAGC,GAAK,MAAOD,GAAIC,GAClCg0C,IAAK,SAAUj0C,EAAGC,GAAK,MAAOD,GAAIC,GAClCi0C,IAAK,SAAUl0C,EAAGC,GAAK,MAAOD,GAAIC,GAClCk0C,KAAM,SAAUn0C,EAAGC,GAAK,MAAOD,IAAKC,GACpCm0C,KAAM,SAAUp0C,EAAGC,GAAK,MAAOD,IAAKC,IAGxCpJ,MAAMi6C,WAAWuD,SAAW,SAAU1F,OAAQhC,cAAet2B,aACzD,GAAIg9B,MAAO1E,OAAO0E,OACdC,MAAQ3E,OAAO2E,QAEfgB,SAAWz9C,MAAMoO,MAAMrL,UAAUgzC,SAAS30C,OAAW00C,cAAc2H,SAAUj+B,aAE7Ek+B,IAAM19C,MAAMi6C,WAAWyC,aAAae,SACxC,OAAgBr8C,UAARs8C,KAA8Bt8C,SAATo7C,MAAgCp7C,SAAVq7C,MAC/Cr7C,OAAYs8C,IAAIlB,KAAMC,QAG9Bz8C,MAAMsa,SAAS,8BACXf,YAAc,oCAAqC,yCACnD08B,gBACI0H,OAAQ,KACRC,QAAS,KACT5kC,UAAa,QAIrBhZ,MAAMi6C,WAAWjhC,UAAY,SAAU8+B,QACnC,GAAI9+B,WAAY8+B,OAAO9+B,WACvB,IAAkB,OAAdA,UAIJ,MAAO8+B,QAAO9+B,UAAY,OAAS,YAGvChZ,MAAMsa,SAAS,gCACXf,YAAa,0BAA2B,cACxCyzB,oBAAqB,sCACrB6M,kBAAmB,yCAOvB75C,MAAMoO,MAAMrL,UAAU86C,eAAiB,SAAUC,MAAOC,OACpD,GAAIC,WAAYD,MAAMnH,WAAakH,MAAMlH,UACzC,OAAqB,KAAdoH,UAAkBF,MAAMv7C,MAAQw7C,MAAMx7C,MAAQy7C,WAGzDh+C,MAAMi6C,WAAWgE,YAAc,SAAUnI,cAAet2B,aAC/Cs2B,cAAcrzC,OACfzC,MAAM+F,KAAK,oFAAuF+vC,cAEtG,IAAI5yC,OAAQlD,MAAMoO,MAAMrL,UAAUgzC,SAASD,cAAcoI,iBAAkB98C,OAAWoe,aAElF2+B,aAAgBn+C,MAAM4H,YAAYkuC,cAAcrzC,OAChDzC,MAAMi6C,WAAWgE,YAAYG,cAAcl7C,MAAO4yC,cAAet2B,aACjEs2B,cAAcrzC,MAAMS,MAMxB,IAJqB9B,SAAjB+8C,eACAA,aAAerI,cAAcuI,SAGZj9C,SAAjB+8C,aAAJ,CAIA,GAAI3H,YAAyCp1C,SAA5B+8C,aAAa3H,WAA2BV,cAAcwI,kBAAoBH,aAAa3H,UACxGh3B,aAAY63B,eAAeh2C,KAAKm1C,WAEhC,IAAI+H,YAgBJ,OAfIv+C,OAAMyF,YAAY04C,cAClBI,YAAcJ,aACPA,aAAaK,qBACpBD,YAAcn9C,QAGdm9C,YAAcv+C,MAAMoO,MAAMrL,UAAU2zC,aAAayH,aAAc3+B,YAAa,cAAepe,QAC3Fm9C,YAA+Bn9C,SAAhBm9C,YAA6BzI,cAAc2I,mBAAqBF,aAGxD,gBAAjB,aAA6Cn9C,SAAhBm9C,cACnCv+C,MAAMoO,MAAMrL,UAAUszC,SAASj1C,OAAWm9C,YAAa/+B,YAAas2B,cAAcp7B,OAClF6jC,YAAcn9C,QAElBoe,YAAY63B,eAAe3yC;AACpB65C,cAIXv+C,MAAMi6C,WAAWgE,YAAYG,cAAgB,SAAUM,qBAAsB5I,cAAet2B,aACxF,GAAIm/B,GAAI7I,cAAcrzC,KACL,KAAbk8C,EAAEl+C,QACFT,MAAM+F,KAAK,+CAAgD+vC,cAG/D,KAAK,GADD8I,eACK99C,EAAI,EAAGA,EAAI69C,EAAEl+C,SAAUK,EAAG,CAC/B,GAAI+9C,QAASF,EAAE79C,GACXoC,MAAQ27C,OAAO/Q,UACf9tC,MAAMoO,MAAMrL,UAAUgzC,SAAS8I,OAAO/Q,UAAW1sC,OAAWoe,aAAek/B,qBAE3E9H,WAAa52C,MAAMoO,MAAMrL,UAAU6zC,WAAWiI,OAAOC,WAAY57C,MAAO27C,OAAO9H,eACnF6H,YAAW99C,IAAMyB,MAAOzB,EAAG81C,WAAYA,YAG3C,MADAgI,YAAWp5B,KAAKxlB,MAAMoO,MAAMrL,UAAU86C,gBAC/Be,WAAW,GAAGhI,YAAc,EAAIx1C,OAAYu9C,EAAEC,WAAW,GAAGr8C,QAGvEvC,MAAMi6C,WAAWgE,YAAYlC,OAAS,SAAUjG,cAAet2B,aAC3D,GAAI/c,UACArC,MACA4D,KAAM,+BACNvB,MAAOA,OAEPs8C,QAAU/+C,MAAM4H,YAAYkuC,cAAcrzC,MAE9CrC,MAAK89C,iBAAmBl+C,MAAMoO,MAAMsnC,aAAal2B,YAAYi3B,aAAcX,cAAcwI,mBACzFl+C,KAAKk+C,kBAAoBt+C,MAAMoO,MAAMsnC,aAAal2B,YAAYo2B,YAAaE,cAAcoI,iBAEzF,IAAIvH,KAAM32C,MAAMkJ,YAsBhB,OArBAlJ,OAAM6D,KAAKiyC,cAAcrzC,MAAO,SAAUo8C,OAAQx+C,KAC9C,GAAIw+C,OAAOL,wBAAyB,EAApC,CAGA,GAAIQ,cACAC,eAAiBtI,IAAIoI,QAAUF,OAAOC,WAAaz+C,IAAKy1C,cAAcoJ,kBACnD99C,UAAnB69C,gBACAj/C,MAAM+F,KAAK,iGAAmG1F,IAAM,KAAMy1C,eAE9HkJ,UAAUT,YAAcU,eACxBD,UAAUF,YAAcC,SAAW/+C,MAAMyF,YAAYo5C,QACjDA,OAASlI,IAAIkI,OAAON,YAAazI,cAAc2I,oBAE/CI,OAAOrI,aACPwI,UAAUlR,UAAY9tC,MAAMoO,MAAMsnC,aAAal2B,YAAYi3B,aAAcE,IAAIkI,OAAOrI,WAAYV,cAAcU,cAE9GqI,OAAO/Q,YACPkR,UAAUxI,WAAax2C,MAAMoO,MAAMsnC,aAAal2B,YAAYo2B,YAAae,IAAIkI,OAAO/Q,UAAWgI,cAAchI,aAEjHrrC,MAAMpB,KAAK29C,cAER5+C,MAGXJ,MAAMi6C,WAAWgE,YAAYkB,QAAU,SAAUrJ,cAAet2B,aAC5D,GAAIpf,QAKJ,OAJAJ,OAAMoO,MAAMrL,UAAU4yC,oBAAoBG,cAAcoI,iBAAkB1+B,YAAapf,MACvFJ,MAAM6D,KAAKiyC,cAAcrzC,MAAO,SAAUo8C,QACtC7+C,MAAMoO,MAAMrL,UAAU4yC,oBAAoBkJ,OAAO/Q,UAAWtuB,YAAapf,QAEtEA,MAKXJ,MAAMsa,SAAS,yCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,iDAIzBhtC,MAAMi6C,WAAWmF,qBAAuB,SAAUl8C,MAAO4yC,cAAet2B,aACpE,GAAIuN,WACA7W,QAAU4/B,cAAc5/B,OAsB5B,OApBKhT,QAAUlD,MAAM4H,YAAY1E,QAC7BlD,MAAM+F,KAAK,2EAA4E+vC,eAEtF5/B,SACDlW,MAAM+F,KAAK,sDAGoB3E,SAA/B00C,cAAcuJ,eACdvJ,cAAcuJ,cAAe,GAGEj+C,SAA/B00C,cAAcwJ,eACdxJ,cAAcwJ,cAAe,GAGjCt/C,MAAM6D,KAAKqS,QAAS,SAAUqpC,QAASl/C,KAEnC,GAAIm/C,QAAUt8C,MAAMuF,QAAQpI,UAAey1C,cAAcuJ,aAAevJ,cAAcwJ,YACtFt/C,OAAM8Q,IAAIic,OAAQwyB,QAASC,OAAQhgC,YAAY2yB,qBAE5CplB,QAQX/sB,MAAMi6C,WAAWmF,qBAAqBK,eAAiB,SAAU3J,cAAet2B,YAAakgC,SACzF5J,cAAc9xC,KAAO07C,OACrB,IAAIC,cAKJ,OAJA3/C,OAAM6D,KAAKiyC,cAAc5/B,QAAS,SAAUnH,KAAM6wC,QAC9CD,WAAW5wC,MAAQ6wC,SAEvB9J,cAAc5/B,QAAUypC,WACjB7J,eAGX91C,MAAMi6C,WAAWmF,qBAAqBrD,OAAS,SAAUjG,cAAet2B,aACpE,MAAOxf,OAAMi6C,WAAWmF,qBAAqBK,eAAe3J,cAAet2B,YACvE,0CAGRxf,MAAMsa,SAAS,yCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,iDAGzBhtC,MAAMi6C,WAAW4F,qBAAuB,SAAUpK,MAAOK,cAAet2B,aACpE,GAAItJ,SAAU4/B,cAAc5/B,OAEvBA,UACDlW,MAAM+F,KAAK,4DAGoB3E,SAA/B00C,cAAcuJ,eACdvJ,cAAcuJ,cAAe,GAGEj+C,SAA/B00C,cAAcwJ,eACdxJ,cAAcwJ,cAAe,EAGjC,IAAIQ,aAOJ,OANA9/C,OAAM6D,KAAKqS,QAAS,SAAU6pC,UAAW1/C,KACrC,GAAI6C,OAAQlD,MAAMmL,IAAIsqC,MAAOp1C,IAAKmf,YAAY4yB,kBAC1ClvC,SAAU4yC,cAAcuJ,cACxBS,UAAUz+C,KAAK0+C,aAGhBD,WAGX9/C,MAAMi6C,WAAW4F,qBAAqB9D,OAAS,SAAUjG,cAAet2B,aACpE,MAAOxf,OAAMi6C,WAAWmF,qBAAqBK,eAAe3J,cAAet2B,YACvE,0CAgCRxf,MAAMoO,MAAMrL,UAAUi9C,WAAa,SAAUC,UAAWtH,OAAQlI,OAC5D,IAAK,GAAI3vC,GAAI,EAAGA,EAAI2vC,MAAMhwC,SAAUK,EACd,SAAdm/C,UACAtH,OAAOt3C,KAAKovC,MAAM3vC,IAElB63C,OAAOj0C,OAKnB1E,MAAMoO,MAAMrL,UAAUm9C,kBAAoB,SAAUpS,UAAW0I,WAAYh3B,YAAa2gC,aACpF,GAAI/I,eAAgB53B,YAAY43B,cAC5BC,eAAiB73B,YAAY63B,eAC7BxyC,MAAQ7E,MAAMoO,MAAMrL,UAAUi9C,UAElCn7C,OAAM,OAAQuyC,cAAetJ,WAC7BjpC,MAAM,OAAQwyC,eAAgBb,WAC9B,IAAIjlB,YAYJ,OAXAvxB,OAAM6D,KAAKs8C,YAAa,SAAUpR,YAC9B,GAAIqR,eAAgB5gC,YAAYmd,OAAOoS,WAClC/uC,OAAMyF,YAAY26C,eAGnB7uB,SAAW6uB,cAFXngD,EAAEyJ,QAAO,EAAM6nB,SAAU6uB,iBAKjCv7C,MAAM,MAAOwyC,eAAgBb,YAC7B3xC,MAAM,MAAOuyC,cAAetJ,WAErBvc,UAIXvxB,MAAMsa,SAAS,oCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,4CAazBhtC,MAAMi6C,WAAWoG,gBAAkB,SAAUC,IAAKxK,cAAet2B,aACnCpe,SAAtB00C,cAAcz1C,KACdL,MAAM+F,KAAK,2CAA4C+vC,eAEtD91C,MAAM4H,YAAY04C,MACnBtgD,MAAM+F,KAAK,kDAAmD+vC,cAElE,IAAIyK,YACAC,MAAQ1K,cAAcz1C,GAmB1B,OAjBAL,OAAM6D,KAAKy8C,IAAK,SAAUpK,EAAGhqC,GAEzB,GAAIu0C,QAASvK,EAAEsK,OACXE,cAAgB,OACJ,YAAZA,SAAoC,YAAZA,SAAqC,WAAZA,SACjD1gD,MAAM+F,KAAK,kFAAmFmwC,EAGlG,IAAIyK,SAAU3gD,MAAMyJ,KAAKysC,SAClByK,SAAQH,OAEX1K,cAAc/G,aACd4R,QAAU3gD,MAAMoO,MAAMrL,UAAUm9C,mBAAmB1gC,YAAYo2B,YAAaE,cAAchI,UAAW5hC,EAAEnE,aAClG+tC,cAAcU,WAAYiK,QAASjhC,YAAas2B,cAAc/G,aAEvEwR,QAAQE,QAAUE,UAEfJ,SAGXvgD,MAAMi6C,WAAWoG,gBAAgBtE,OAAS,SAAUjG,eAMhD,GALAA,cAAc9xC,KAAO,yCAKjB8xC,cAAc/G,WAEd,IAAK,GADDA,YAAa+G,cAAc/G,WACtBjuC,EAAI,EAAGA,EAAIiuC,WAAWtuC,SAAUK,EACrCiuC,WAAWjuC,GAAKd,MAAMoO,MAAMrL,UAAUiqC,oBAAoB+B,WAAWjuC,GAG7E,OAAOg1C,gBAIX91C,MAAMsa,SAAS,0CACXf,YAAc,kCAAmC,cACjDyzB,oBAAqB,kDAYzBhtC,MAAMi6C,WAAW2G,sBAAwB,SAAUx0C,KAAM0pC,cAAet2B,aAC1Cpe,SAAtB00C,cAAcz1C,KACdL,MAAM+F,KAAK,iDAAoD+vC,cAGnE,IAAI+K,aACAL,MAAQ1K,cAAcz1C,GAY1B,OAVAL,OAAM6D,KAAKuI,KAAM,SAAU8pC,EAAGhqC,GAC1B,GAAIy0C,WACJA,SAAQH,OAASt0C,EACb4pC,cAAc/G,aACdmH,EAAIl2C,MAAMoO,MAAMrL,UAAUm9C,mBAAmBpK,cAAchI,UAAW5hC,IAAK4pC,cAAcU,WAAYqK,SAASpgD,OAAOsH,YACjHyX,YAAas2B,cAAc/G,aAEnC9uC,EAAEyJ,QAAO,EAAMi3C,QAASzK,GACxB2K,SAASx/C,KAAKs/C,WAEXE,UAGX7gD,MAAMi6C,WAAW2G,sBAAsB7E,OAAS,SAAUjG,eAMtD,GALAA,cAAc9xC,KAAO,mCAKjB8xC,cAAc/G,WAEd,IAAK,GADDA,YAAa+G,cAAc/G,WACtBjuC,EAAI,EAAGA,EAAIiuC,WAAWtuC,SAAUK,EACrCiuC,WAAWjuC,GAAKd,MAAMoO,MAAMrL,UAAUiqC,oBAAoB+B,WAAWjuC,GAG7E,OAAOg1C,gBAGX91C,MAAMsa,SAAS,+BACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,sCAGzBhtC,MAAMi6C,WAAW6G,WAAa,SAAU59C,MAAO4yC,eAC3C,GAAIiL,KAAMjL,cAAciL,GACxB,IAAY3/C,SAAR2/C,IAAmB,CACnB,GAAIC,YAAalL,cAAckL,YAAc,CAC7CD,MAAOC,WACH99C,MAAQ69C,MACR79C,MAAQ69C,KAGhB,GAAIjnC,KAAMg8B,cAAch8B,GACxB,IAAY1Y,SAAR0Y,IAAmB,CACnB,GAAImnC,YAAanL,cAAcmL,YAAc,CAC7CnnC,MAAOmnC,WACH/9C,MAAQ4W,MACR5W,MAAQ4W,KAGhB,MAAO5W,QAGXlD,MAAMsa,SAAS,4BACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,oCAGzBhtC,MAAMi6C,WAAWxxC,QAAU,SAAUvF,MAAO4yC,eAEA,gBAA5BA,eAAsB,UAAkBA,cAAcoL,UAAY,GAC1ElhD,MAAM+F,KAAK,mEAEf,IAAI+N,QAAS9T,MAAMi6C,WAAWkH,sBAAsBrL,cAAchiC,OAAQ,WACtE/J,MAAQ/J,MAAMe,UAAU+0C,cAAc/rC,OACtCq3C,cAAgBr3C,MAAMtB,QAAQvF,MAClC,OAAOk+C,qBAAwBtL,cAAcoL,SAAWpL,cAAcoL,SAAWE,cAAgBttC,QAGrG9T,MAAMi6C,WAAWxxC,QAAQszC,OAAS,SAAUjG,cAAet2B,aACvD,GAAIpf,MAAOJ,MAAMi6C,WAAWoH,sBAAsBvL,cAAet2B,YAEjE,OADApf,MAAK4D,KAAO,+BACL5D,MAGXJ,MAAMsa,SAAS,gCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,wCAGzBhtC,MAAMi6C,WAAWqH,YAAc,SAAUp+C,MAAO4yC,eAC5C,GAAuB,gBAAZ,OAAX,CAGA,GAAIhiC,QAAS9T,MAAMi6C,WAAWkH,sBAAsBrL,cAAchiC,OAAQ,eACtE/J,MAAQ/J,MAAMe,UAAU+0C,cAAc/rC,OACtCxH,MAAQW,MAAQ4Q,MACpB,OAAO/J,OAAMxH,SAGjBvC,MAAMi6C,WAAWqH,YAAYvF,OAAS,SAAUjG,cAAet2B,aAC3D,GAAIpf,MAAOJ,MAAMi6C,WAAWoH,sBAAsBvL,cAAet2B,YAEjE,OADApf,MAAK4D,KAAO,2BACL5D,MAGXJ,MAAMi6C,WAAWkH,sBAAwB,SAAUrtC,OAAQytC,eACvD,GAAIC,cAAe,CAOnB,OANepgD,UAAX0S,SACA0tC,aAAexhD,MAAM4M,aAAakH,QAC9BgoC,MAAM0F,eACNxhD,MAAM+F,KAAKw7C,cAAgB,qGAAyGztC,OAAS,iBAG9I0tC,cAGXxhD,MAAMi6C,WAAWoH,sBAAwB,SAAUvL,eAI/C,MAHKgG,OAAMhvC,OAAOgpC,cAAchiC,WAC5BgiC,cAAchiC,OAAShH,OAAOgpC,cAAchiC,YAEzCgiC,eAGX91C,MAAMsa,SAAS,mCACXf,WAAY,0CAGhBvZ,MAAMi6C,WAAW30B,eAAiB,SAAUwwB,eACxC,MAAO91C,OAAMslB,eAAewwB,cAAcvwB,SAAUuwB,cAAc2L,QAGtEzhD,MAAMsa,SAAS,yBACXf,WAAY,4BAGhBvZ,MAAMi6C,WAAWyH,KAAO,SAAU5L,eAC9B,GAAIx1C,MAAON,MAAMe,UAAU+0C,cAAcx1C,KACzC,OAAON,OAAMmR,qBAAqB2kC,cAAcj0C,KAAMvB,OAG1DN,MAAMsa,SAAS,6BACXf,WAAY,oCAOhBvZ,MAAMi6C,WAAW0H,SAAW,SAAUz+C,MAAO4yC,cAAe/yC,WACnD+yC,cAAc8L,QAAW9L,cAAc8L,OAAOnhD,QAC/CT,MAAM+F,KAAK,4GAGf,KAAK,GAAIjF,GAAI,EAAGA,EAAIg1C,cAAc8L,OAAOnhD,OAAQK,IAAK,CAClD,GAAI+gD,WAAY/L,cAAc8L,OAAO9gD,EACrC,IAAIoC,OAAS2+C,UAAUC,YAAuC1gD,SAAzBygD,UAAUC,YAA4B5+C,OAAS4J,OAAOi1C,kBACvF,MAAO/hD,OAAMyF,YAAYo8C,UAAU90B,QAAU80B,UAAU90B,OAAShqB,UAAU45B,OAAOklB,UAAU90B,UAavG/sB,MAAMsa,SAAS,4BACXf,WAAY,oCAGhBvZ,MAAMi6C,WAAW+H,QAAU,SAAU9+C,MAAO4yC,eACxC,OAA8B10C,SAAtB00C,cAAciL,KAAqBjL,cAAciL,KAAO79C,SACrC9B,SAAtB00C,cAAch8B,KAAsBg8B,cAAch8B,KAAO5W,QAclElD,MAAMi6C,WAAWgI,gBAAkB,SAAU/+C,OACzC,QAAIA,SACmB,MAAVA,OAA2B,UAAVA,QAOlClD,MAAMi6C,WAAWgI,gBAAgBlG,OAAS,SAAUjG,eAEhD,MADAA,eAAc9xC,KAAO,mCACd8xC,eAGX91C,MAAMsa,SAAS,oCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,4CAYzBhtC,MAAMi6C,WAAWiI,gBAAkB,SAAUh/C,OACzC,MAAOA,OAAQ,OAAS,SAG5BlD,MAAMi6C,WAAWiI,gBAAgBnG,OAAS,SAAUjG,eAEhD,MADAA,eAAc9xC,KAAO,mCACd8xC,eAGX91C,MAAMsa,SAAS,oCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,4CASzBhtC,MAAMi6C,WAAWkI,mBAAqB,SAAUj/C,OAC5C,IACI,MAAOyC,MAAKmK,MAAM5M,OAEtB,MAAOkrB,GACH,SAIRpuB,MAAMi6C,WAAWkI,mBAAmBpG,OAAS,SAAUjG,eAEnD,MADAA,eAAc9xC,KAAO,sCACd8xC,eAGX91C,MAAMsa,SAAS,uCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,+CAuBzBhtC,MAAMi6C,WAAWmI,mBAAqB,SAAUl/C,MAAO4yC,eACnD,GAAIuM,OAAQvM,cAAcuM,OAAS,CACnC,OAAO18C,MAAKC,UAAU1C,MAAO,KAAMm/C,QAGvCriD,MAAMi6C,WAAWmI,mBAAmBrG,OAAS,SAAUjG,eAEnD,MADAA,eAAc9xC,KAAO,sCACd8xC,eAGX91C,MAAMsa,SAAS,uCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,+CAwBzBhtC,MAAMi6C,WAAWqI,aAAe,SAAUp/C,OACtC,GAAIoqB,MAAO,GAAInpB,MAAKjB,MACpB,OAAO44C,OAAMxuB,KAAKlpB,WAAahD,OAAYksB,MAG/CttB,MAAMi6C,WAAWqI,aAAavG,OAAS,SAAUjG,eAE7C,MADAA,eAAc9xC,KAAO,gCACd8xC,eAGX91C,MAAMsa,SAAS,iCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,yCA2BzBhtC,MAAMi6C,WAAWsI,aAAe,SAAUr/C,OACtC,GAAIA,gBAAiBiB,MAAM,CACvB,GAAIq+C,WAAYt/C,MAAMu/C,cAClBC,WAAaF,UAAU7/C,UAAU,EAAG6/C,UAAU/5C,QAAQ,KAC1D,OAAOi6C,cAOf1iD,MAAMi6C,WAAWsI,aAAaxG,OAAS,SAAUjG,eAE7C,MADAA,eAAc9xC,KAAO,gCACd8xC,eAGX91C,MAAMsa,SAAS,iCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,yCAyBzBhtC,MAAMi6C,WAAW0I,iBAAmB,SAAUz/C,OAC1C,MAAOA,iBAAiBiB,MAAOjB,MAAMu/C,cAAgBrhD,QAGzDpB,MAAMsa,SAAS,qCACXf,YAAa,kCAAmC,cAChDyzB,oBAAqB,0CAE1BtnB,OAAQ3lB,YCh8BX,IAAIA,aAAcA,gBACdC,MAAQA,OAASD,aAErB,SAAWE,EAAGD,OACV,YAuBAA,OAAM4iD,cAAgB,SAAUz8C,KAAM08C,MAElC,GAAIziD,MAAO,SAAU0iD,UAGjB,IAAK,GAFDniD,MAAOmiD,SAASr0C,MAAM,KACtBs0C,KAAOF,KACF/hD,EAAI,EAAGA,EAAIH,KAAKF,SAAUK,EAC/BiiD,KAAOA,KAAKpiD,KAAKG,GAErB,IAAIR,OAAQwE,KACa,KAArBC,UAAUtE,SACVH,KAAOA,KAAKgF,OAAOrF,EAAEc,UAAUgE,UAAU,KAE7C,IAAIkS,KAAM8rC,KAAKl+C,MAAM,KAAMvE,KAC3BwE,MAAK8Q,KAAO,WACR,MAAOqB,KAEX,IAAIjT,YAAa,IACjB,QAAQiT,KAAgB,WAATjT,MAA8B,WAATA,MAA8B,YAATA,MACpDiT,KAAsB7V,SAAf6V,IAAIxW,OAAwBwW,IAAMnS,KAGlD,OADA7E,GAAEsK,GAAGpE,MAAQ/F,KACNA,MAGXJ,MAAM4iD,cAAc,QAAS5iD,OAC7BA,MAAM4iD,cAAc,cAAe7iD,YAUnC,IAAIijD,uBAAwB,WACxB,MAAO/iD,GAAEuoB,QAAQI,KAAO,WAAa,YAGrCq6B,uBAAyB,SAAUC,UACnC,QAAIA,SAASziD,QAAU,IAIhBR,EAAEijD,SAAS,IAAIC,GAAG,qDAGzBpN,SAAW,SAAUmN,UACrB,KAAIA,SAASziD,QAAU,GAAvB,CAIA,IAAKT,MAAMojD,SAASC,QAAQH,UACxB,MAAOD,wBAAuBC,UAAYp2C,OAAO,GAAK1L,MAI1D,IAAI8B,OAAQggD,SAASxzB,KAAKszB,wBAC1B,OAAOl2C,QAAO5J,SAGdmzC,SAAW,SAAU6M,SAAUI,SAC/B,MAAOJ,UAASr/C,KAAK,SAAU/C,EAAGyiD,MAC9BtjD,EAAEsjD,MAAM7zB,KAAKszB,wBAAyBM,WAY9CtjD,OAAMojD,SAAW,SAAUh9C,OAAQk9C,SAE/B,MADAl9C,QAASnG,EAAEmG,QACK,OAAZk9C,SAAgCliD,SAAZkiD,QACbjN,SAASjwC,OAAQk9C,SAEjBvN,SAAS3vC,SAOxBpG,MAAMojD,SAASI,OAAS,SAAUp9C,QAE9B,MADAA,QAASnG,EAAEmG,QACJA,OAAOvC,KAAK,SAAU/C,EAAGyiD,MAC5BtjD,EAAEsjD,MAAME,WAAWT,4BAO3BhjD,MAAMojD,SAASC,QAAU,SAAUj9C,QAE/B,GADAA,OAASnG,EAAEmG,QACPA,OAAO3F,QAAU,EACjB,OAAO,CAEX,IAAIL,MAAOgG,OAAOsgB,IACd,WACI,GAAIg9B,eAAgB5+C,KAAK6+C,iBAAiBX,wBAC1C,SAAOU,eAAgBA,cAAcE,WAG7C,OAAuB,KAAhBxjD,KAAKK,OAAeL,KAAK,GAAKA,MAMzCJ,MAAMojD,SAASS,IAAM,SAAUz9C,QAE3B,MADAA,QAASnG,EAAEmG,QACJpG,MAAMojD,SAASC,QAAQj9C,SAAW68C,uBAAuB78C,SAKpEpG,MAAM8jD,KAAO7jD,EAAE6jD,SAEf9jD,MAAM8jD,KAAKC,aACPC,WAAY,EACZC,SAAU,EACVC,KAAM,EAGV,IAAIC,iBACAC,KAAMnkD,EAAEokD,GAAGC,QAAQC,KACnBC,SAAUvkD,EAAEokD,GAAGC,QAAQG,IAGvBC,mBACAN,KAAMnkD,EAAEokD,GAAGC,QAAQK,MACnBH,SAAUvkD,EAAEokD,GAAGC,QAAQM,MAIvBC,OAAS,SAAUr4C,SACnB,MAAOA,SAAQ1E,OAAS0E,QAAQ,GAAKA,SAIrCs4C,0BAA4B,SAAU5B,UAEtCA,SAASr/C,KAAK,SAAUkhD,IAAKxB,MACzBA,KAAOtjD,EAAEsjD,QACJA,KAAKvjD,MAAM,iBAAmBujD,KAAKvjD,MAAM,YAAc,IACxDujD,KAAKvjD,MAAM,WAAY,KASnCA,OAAMglD,SAAW,SAAU5+C,QACvBA,OAASnG,EAAEmG,QACX0+C,0BAA0B1+C,QAQ9B,IAAI6+C,aAAc,mBACdC,oBAEAC,4BAA8B,SAAUC,kBACpCA,iBAAiBC,kBAAoBH,eACjCE,iBAAiBlvC,QAAQovC,iBACzBF,iBAAiBlvC,QAAQovC,iBACrBF,iBAAiBG,YAAYH,iBAAiBC,kBAE3CD,iBAAiBlvC,QAAQsvC,YAChCJ,iBAAiBlvC,QAAQsvC,WACrBJ,iBAAiBG,YAAYH,iBAAiBC,mBAKrDD,iBAAiBlvC,QAAQuvC,yBAC1BL,iBAAiBC,gBAAkBH,eAOvCQ,cAAgB,SAAUC,gBAAiBC,SACvCA,SACAA,QAAQD,kBAOZE,eAAiB,SAAUC,gBAAiBF,SACxCA,SAAWE,iBACXF,QAAQE,kBAIZC,gBAAkB,SAAUD,gBAAiBV,kBAC7CS,eAAeC,gBAAiBV,iBAAiBlvC,QAAQsvC,aAGzDQ,cAAgB,SAAUL,gBAAiBP,kBAE3CW,gBAAgBX,iBAAiBU,kBAAmBV,kBAEpDO,gBAAkBd,OAAOc,gBACzB,IAAIM,UAAWb,iBAAiBG,YAAYhjD,MAAMojD,gBAG9CM,iBAKJb,iBAAiBC,gBAAkBY,SACnCP,cAAcC,gBAAiBP,iBAAiBlvC,QAAQgwC,YAGxDC,uBAAyB,SAAUf,kBACnC,MAAO,UAAUgB,KAOb,MAJAnmD,GAAEmmD,IAAIhgD,QAAQpG,MAAM,WAAY,GAChCgmD,cAAcI,IAAIhgD,OAAQg/C,kBAGnBgB,IAAIC,oBAIfC,sBAAwB,SAAUlB,kBAClC,MAAO,UAAUgB,KAKb,MAJAnmD,GAAEmmD,IAAIhgD,QAAQpG,MAAM,WAAYolD,iBAAiBlvC,QAAQqwC,qBACzDR,gBAAgBK,IAAIhgD,OAAQg/C,kBAGrBgB,IAAIC,oBAIfG,WAAa,SAAUC,SACvB,GAAIvD,UAAWuD,QAAQlB,WACnBkB,SAAQpB,iBAAmBnC,SAASziD,SACpCgmD,QAAQpB,gBAAmBoB,QAAQvwC,QAAQwwC,OAASxD,SAASziD,OAAS,EAAI,GAE1EgmD,QAAQpB,gBAAkB,GAAKoB,QAAQpB,kBAAoBH,eAC3DuB,QAAQpB,gBAAmBoB,QAAQvwC,QAAQwwC,OAAS,EAAIxD,SAASziD,OAAS,GAE1EgmD,QAAQpB,iBAAmB,GAC3BrlD,MAAM2mD,MAAMzD,SAASuD,QAAQpB,mBAIjCuB,aAAe,SAAUxB,kBAEzB,GAAIyB,QAASzB,iBAAiBU,iBAC1Be,SACA7mD,MAAM8mD,KAAKD,QAGfd,gBAAgBX,iBAAiBU,kBAAmBV,kBAChDA,iBAAiBC,kBAAoBH,eACrCE,iBAAiBC,qBAIrB0B,iBAAmB,SAAU3B,kBAC7BwB,aAAaxB,oBACXA,iBAAiBC,gBACnBmB,WAAWpB,mBAGX4B,qBAAuB,SAAU5B,kBACjCwB,aAAaxB,oBACXA,iBAAiBC,gBACnBmB,WAAWpB,mBAGX6B,gBAAkB,SAAU7B,iBAAkB8B,QAC9C,MAAO,UAAUd,KACTA,IAAIhgC,QAAU8gC,OAAO9C,MACrB2C,iBAAiB3B,kBACjBgB,IAAIe,kBACGf,IAAIhgC,QAAU8gC,OAAO1C,WAC5BwC,qBAAqB5B,kBACrBgB,IAAIe,oBAKZC,sBAAwB,SAAUC,WAElC,GAAIH,OASJ,OARIG,aAAcrnD,MAAM8jD,KAAKC,YAAYC,WACrCkD,OAASxC,kBAEJ2C,YAAcrnD,MAAM8jD,KAAKC,YAAYE,WAE1CiD,OAAS/C,gBAGN+C,QAGPI,cAAgB,SAAUlC,kBAC1B,MAAO,UAAUgB,KACTA,IAAIhgC,QAAUnmB,EAAEokD,GAAGC,QAAQiD,MAG/BpC,4BAA4BC,kBAGxBgB,IAAIoB,WACJpC,iBAAiBqC,yBAA0B,MAKnDC,sBAAwB,SAAUtC,kBAClC,MAAO,UAAUgB,KACb,GAAIuB,YAAavC,iBAAiBlvC,QAAQ0xC,oBACtCC,aAAsC,kBAAjB,YAA8BF,aAAeA,UAgBtE,OAbIvC,kBAAiBqC,0BACjBI,cAAe,GAIfA,cAAgBzB,IAAIhgD,SAAWg/C,iBAAiBj6B,UAAUhgB,IAAI,KAC1Di6C,iBAAiBC,kBAAoBH,eACrCE,iBAAiBC,gBAAkB,GAEvCrlD,MAAM2mD,MAAMvB,iBAAiBG,YAAYH,iBAAiBC,mBAIvDe,IAAIC,oBAIfyB,qBAAuB,SAAU1C,kBACjC,MAAO,UAAUgB,KAIb,MAHAhB,kBAAiBqC,yBAA0B,EAGpCrB,IAAIC,oBAIf0B,uBAAyB,SAAU58B,UAAW7Q,SAAU8E,aAExD,GAAIlJ,SAAUjW,EAAEyJ,QAAO,KAAU4Q,SAAU8E,aAEvC8nC,OAASE,sBAAsBlxC,QAAQmxC,WAEvCW,mBAAqB9xC,QAAQ8xC,mBAAqB9xC,QAAQ8xC,mBAC1D78B,UAAU/gB,KAAK8L,QAAQ+xC,oBAGvBryC,MACAuV,UAAWA,UACXk6B,gBAAiBH,aACjBK,YAAayC,mBACbP,yBAAyB,EACzBvxC,QAASA,QA8Cb,OA3CAN,MAAKsyC,mBAAqB,SAAUC,aAEiB,gBAAtCvyC,MAAKM,QAA2B,qBACvCN,KAAK2vC,YAAYvlD,MAAM,WAAY4V,KAAKM,QAAQqwC,qBAEpD3wC,KAAK2vC,YAAY6C,IAAI,SAAWnD,aAChCrvC,KAAK2vC,YAAY6C,IAAI,QAAUnD,aAC/BrvC,KAAK2vC,YAAYj8B,GAAG,SAAW27B,YAAakB,uBAAuBvwC,OACnEA,KAAK2vC,YAAYj8B,GAAG,QAAW27B,YAAaqB,sBAAsB1wC,OAC9DsxC,QAAUtxC,KAAKM,QAAQmyC,oBACvBzyC,KAAK2vC,YAAY6C,IAAI,WAAanD,aAClCrvC,KAAK2vC,YAAYj8B,GAAG,WAAa27B,YAAagC,gBAAgBrxC,KAAMsxC,UAEpEiB,YACAnC,cAAcmC,YAAavyC,MAG3B4wC,WAAW5wC,OAInBA,KAAK0yC,QAAU,WACN1yC,KAAKM,QAAQ+xC,oBACdjoD,MAAM+F,KAAK,6EAEf6P,KAAK2vC,YAAcp6B,UAAU/gB,KAAK8L,QAAQ+xC,oBAC1CryC,KAAKsyC,sBAGTtyC,KAAKkwC,gBAAkB,WACnB,MAAOlwC,MAAKyvC,gBAAkB,EAAI,KAAOzvC,KAAK2vC,YAAY3vC,KAAKyvC,kBAI/D6B,SAAWtxC,KAAKM,QAAQmyC,mBACxBl9B,UAAUo9B,QAAQtB,gBAAgBrxC,KAAMsxC,SAE5C/7B,UAAUo9B,QAAQjB,cAAc1xC,OAChCuV,UAAUw7B,MAAMe,sBAAsB9xC,OACtCuV,UAAU27B,KAAKgB,qBAAqBlyC,OAEpCA,KAAKsyC,qBAEEtyC,KASX5V,OAAMwoD,WAAa,SAAUpiD,OAAQ8P,SACjC9P,OAASnG,EAAEmG,OACX,IAAIwP,MAAOmyC,uBAAuB3hD,OAAQpG,MAAMwoD,WAAWluC,SAAUpE,QAErE,OADAlW,OAAMmpB,cAAc/iB,OAAQ6+C,YAAarvC,MAClCA,MAMX5V,MAAMwoD,WAAWC,OAAS,SAAUriD,OAAQsiD,UACxC1oD,MAAM2mD,MAAM+B,WAMhB1oD,MAAMwoD,WAAWG,WAAa,SAAUviD,QACpCA,OAASnG,EAAEmG,QACX2gD,iBAAiB/mD,MAAMipB,cAAc7iB,OAAQ6+C,eAMjDjlD,MAAMwoD,WAAWI,eAAiB,SAAUxiD,QACxCA,OAASnG,EAAEmG,QACX4gD,qBAAqBhnD,MAAMipB,cAAc7iB,OAAQ6+C,eAMrDjlD,MAAMwoD,WAAWK,iBAAmB,SAAUziD,QAC1CA,OAASnG,EAAEmG,OACX,IAAIwP,MAAO5V,MAAMipB,cAAc7iB,OAAQ6+C,YACvC,OAAOhlD,GAAE2V,KAAKkwC,oBAGlB9lD,MAAMwoD,WAAWluC,UACb+sC,UAAWrnD,MAAM8jD,KAAKC,YAAYE,SAClCsC,uBACAqB,qBAAqB,EACrBnC,wBAAwB,EACxBwC,mBAAoB,cACpBD,mBAAoB,KACpB9B,SAAU,KACVV,WAAY,KACZF,iBAAkB,KAClBoB,QAAQ,EAQZ,IAAIoC,kBAAmB,SAAUC,QAAS3C,KAEtC,IAAK2C,QAAQC,SACT,OAAO,CAGX,IAAIC,aAAcF,QAAQC,SACtBE,iBAAmBD,aAAe7C,IAAI+C,QACtCC,gBAAkBH,aAAe7C,IAAIiD,OACrCC,kBAAoBL,aAAe7C,IAAIoB,QAE3C,OAAO0B,mBAAoBE,iBAAmBE,mBAO9CC,sBAAwB,SAAUR,SAClC,MAAO,UAAU3C,KACb,GAAIhgD,QAASggD,IAAIhgD,MACjB,IAAKpG,MAAM8G,QAAQV,QAAnB,CASA,GAAIulB,MAAOy6B,IAAIhgC,MAAQggC,IAAIhgC,MAAQggC,IAAI9B,OACvC,IAAI34B,OAASo9B,QAAQ1oD,KAAO0oD,QAAQS,iBAAmBV,iBAAiBC,QAAS3C,KAAM,CACnF,GAAI3xC,OAAQxU,EAAEwpD,MAAM,iBACpBxpD,GAAEmG,QAAQ+hB,QAAQ1T,OAAQs0C,QAAQS,kBAC9B/0C,MAAMi1C,sBACNtD,IAAIe,qBAMhBwC,wBAA0B,SAAUzG,SAAU0G,kBAAmBC,YAAa3zC,SAE9E,GAAI4zC,YACJ7pD,GAAE4pD,aAAahmD,KAAK,SAAUtB,MAAOlC,KACjCypD,SAASzoD,MACL2nD,SAAU,KACV3oD,IAAKA,IACLmpD,gBAAiBI,sBAKrB1zC,SAAWA,QAAQ6zC,qBACnBD,SAAWA,SAASxkD,OAAO4Q,QAAQ6zC,qBAGvC/pD,MAAM4pB,eAAes5B,SAGrB,KAAK,GAAIpiD,GAAI,EAAGA,EAAIgpD,SAASrpD,SAAUK,EAAG,CACtC,GAAIioD,SAAUe,SAAShpD,EACvBoiD,UAASqF,QAAQgB,sBAAsBR,UAE3C7F,SAAS55B,GAAG,iBAAkB,SAAU88B,IAAKR,SAEzC,MADAA,SAAUA,SAAWgE,kBACdhE,QAAUA,QAAQQ,KAAO,OASxCpmD,OAAMgqD,YAAc,SAAU5jD,OAAQmE,GAAI2L,SACtC9P,OAASnG,EAAEmG,QACXujD,wBAAwBvjD,OAAQmE,GAAIvK,MAAMgqD,YAAY1vC,SAAShP,KAAM4K,UAMzElW,MAAMiqD,SAAW,SAAU7jD,QACvBnG,EAAEmG,QAAQ+hB,QAAQ,mBAItBnoB,MAAMgqD,YAAY1vC,UACdhP,MAAOrL,EAAEokD,GAAGC,QAAQ4F,MAAOjqD,EAAEokD,GAAGC,QAAQ6F,SAI7CzkC,OAAQ3lB,YC7lBX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YAEAA,OAAMsa,SAAS,uBACXf,YAAa,wBACb4C,aAAc,iBACdwF,aACIwJ,UAAW,EACXjV,QAAS,GAEb7P,SACI8jB,IAAK,mEAKbnqB,MAAMoqD,aAAe,SAAU5B,YAC3B,MAA+B,gBAAjB,YAA4BA,WACtCA,WAAWn1B,SAAWm1B,WAAWn1B,SAAW,IAQpDrzB,MAAMkjB,mBAAqB,SAAUjI,cAAerF,KAAMM,QAAS5V,MAC/D,IAAKsV,MAAQ5V,MAAMoa,SAASlE,QAAS,uBAAwB,CACzD,GAAIiV,WAAYnrB,MAAMqqD,KAAK/pD,KAAK,IAC5BgqD,SAAW,6CAA+CrvC,cAAgB,iBACzEkQ,WAGyB,IAArBA,UAAU1qB,OACfT,MAAM+F,KAAKukD,SAAW,aAAetqD,MAAMoqD,aAAa9pD,KAAK,IAAK,8CAElEN,MAAM+F,KAAKukD,SAAW,sDALtBtqD,MAAM+F,KAAKukD,SAAW,kCAUlCtqD,MAAMuqD,uBAAyB,WAC3B,GAAI/6B,UAAW9tB,OAAO8tB,WAAc/C,OAAQ,GAAI+9B,SAAU,SACtDC,UAAYj7B,SAAS/C,OAAOrY,MAAM,GAAG3F,MAAM,IAC/C,OAAOzO,OAAMoK,KAAKqgD,UAAW,SAAUC,OACnC,GAAoC,IAAhCA,MAAMjiD,QAAQ,cACd,OAAO,OAER,GAGXzI,MAAM2qD,WAAa3qD,MAAMuqD,yBAWzBvqD,MAAMqqD,KAAO,SAAU1hD,IAAKiiD,YAExB,MADAA,YAAaA,YAAc3qD,GACjB0I,KAAOA,IAAIb,OAAUa,IAAMiiD,WAAWjiD,MAQpD3I,MAAM6kD,OAAS,SAAUl8C,KACrB,MAAOA,MAAOA,IAAIb,OAASa,IAAI,GAAKA,KAUxC3I,MAAMmrB,UAAY,SAAU0/B,cAAeC,SAAUF,YACjD,GAAIv3B,UAAWw3B,cAAcx3B,UAAYw3B,aACrCD,cACAC,cAAgB7qD,MAAM6kD,OAAOgG,eAEjC,IAAI1/B,WAAYnrB,MAAMqqD,KAAKQ,cAAeD,WAC1C,IAAIE,YAAc3/B,WAAkC,IAArBA,UAAU1qB,QACrC,MAAO,KAGX,KAAK0qB,YAAcA,UAAUrjB,QAA+B,IAArBqjB,UAAU1qB,OAAc,CAC5B,gBAApB,iBACPoqD,cAAgB1/B,UAAUkI,SAE9B,IAAIroB,OAA6B5J,SAArB+pB,UAAU1qB,OAAuB0qB,UAAU1qB,OAAS,CAChET,OAAM+F,MAAMiF,MAAQ,EAAI,kBAAoBA,MAAQ,4BAC1C,4BAA8B,uBAAyB6/C,eAerE,MAbK7qD,OAAM0I,UAAUyiB,UAAU,KAC3BnrB,MAAM+F,KAAK,yDASfolB,UAAUkI,SAAWA,SACrBlI,UAAUgK,QAAUhK,UAAUgK,SAAW01B,cAAcE,eAAiB1hC,SAEjE8B,WASXnrB,MAAMgrD,gBAAkB,SAAU7/B,UAAW8/B,WAQzC,QAASC,UAAS/kD,KAAMglD,eACpB,MAAOnrD,OAAMorD,iBAAiBD,eAAiB,IAAMhlD,KAGzD,QAASlC,QAAOkC,KAAMglD,cAAepS,QACjCnjC,KAAKy1C,MAAMH,SAAS/kD,KAAMglD,gBAAkBpS,OAXhD,GAAInjC,OACAE,GAAI9V,MAAMiS,eACVo5C,UAEAT,WAAaz/B,UAAUhjB,WAoE3B,OA1DAyN,MAAK01C,OAAS,SAAUnlD,KAAMolD,gBAC1B,GAAIl4B,UAAU83B,cAAe/qD,IAG7B,IADAizB,SAAW43B,UAAU9kD,MACJ/E,SAAbiyB,SA2BJ,MAxBA83B,eAAgBI,eAAiBtrD,EAAEsrD,gBAAkBpgC,UAChDggC,eACDnrD,MAAM+F,KAAK,mCAAqCI,KAAO,sBAGvD/F,KADa,KAAbizB,SACO83B,cAED93B,SAIoB,kBAAf,UACAu3B,WAAWv3B,SAASrrB,KAAK,KAAMhI,MAAM6kD,OAAOsG,iBAE5CP,WAAWv3B,SAAU83B,eANzBP,aAUNxqD,KAAKizB,WACNjzB,KAAKizB,SAAWA,SAChBjzB,KAAK+0B,QAAUg2B,eAEnB/qD,KAAKorD,aAAerlD,KACpBlC,OAAOkC,KAAMglD,cAAe/qD,MACrBA,MAEXwV,KAAK61C,WAAa,SAAUtlD,KAAMolD,gBAC9B,GAAIJ,eAAgBI,eAAiBA,eAAiBpgC,UAClD9qB,IAAM6qD,SAAS/kD,KAAMglD,eACrB/qD,KAAOwV,KAAKy1C,MAAMhrD,IACtB,OAAOD,MAAOA,KAAOwV,KAAK01C,OAAOnlD,KAAMolD,iBAE3C31C,KAAKnJ,MAAQ,WACTmJ,KAAKy1C,UAETz1C,KAAK0yC,QAAU,SAAUoD,MAAOH,gBAC5B,GAAIJ,eAAgBI,eAAiBA,eAAiBpgC,SACjC,iBAAVugC,SACPA,OAASA,QAEgBtqD,SAAzB+pD,cAAc1qD,SACd0qD,eAAiBA,eAErB,KAAK,GAAIrqD,GAAI,EAAGA,EAAI4qD,MAAMjrD,SAAUK,EAChC,IAAK,GAAIN,GAAI,EAAGA,EAAI2qD,cAAc1qD,SAAUD,EACxCoV,KAAK01C,OAAOI,MAAM5qD,GAAIqqD,cAAc3qD,KAIhDoV,KAAKrG,mBAAqBqG,KAAK01C,OAExB11C,MAOX5V,MAAM2rD,qBAAuB,SAAU5S,OAAQz2C,SACvCy2C,QAA4B,IAAlBA,OAAOt4C,QAAgBs4C,OAAOjxC,QACxC9H,MAAM+F,KAAKzD,QAAU,eAAkBy2C,OAAO1lB,SAAW,eAAkB0lB,OAAOyS,aACvE,mCAAqCxrD,MAAM0R,OAAOqnC,OAAO5jB,WAiB5En1B,MAAM4rD,SAAW,SAAU3wC,cAAe4vC,cAAezrC,YAAa0B,cAClE,GAAIqK,WAAYnrB,MAAMmrB,UAAU0/B,eAAe,EAE/C,IADA7qD,MAAM2rD,qBAAqBxgC,UAAW,4CAA+ClQ,gBAChFkQ,UACD,MAAO,KAGX,IAAIrI,UAAW,SAAUlN,MACrBA,KAAKuV,UAAYA,WAEjBvV,KAAO5V,MAAM6iB,oBAAoB5H,cAAemE,YAAa0B,eAAiBvH,YAAa,wBAAyBuJ,SAEnHlN,MAAKuU,KACNnqB,MAAM6rD,cAAcj2C,KAGxB,IAAIg1C,YAAah1C,KAAKM,QAAQwP,MAO9B,OAHA1lB,OAAM4D,IAAI,+BAAiCqX,cAAgB,mBAAqBkQ,UAAUhjB,YAAY2jD,SACjGlB,WAAa,gBAAkBA,WAAWkB,QAAU,IAAM,SAAW7rD,EAAE6rD,SAErEl2C,MAQX5V,MAAM6rD,cAAgB,SAAUj2C,KAAMq1C,WAQlC,MAPKr1C,MAAKuV,WACNnrB,MAAM+F,KAAK,0DAA4D6P,KAAKC,SACxE,kSACmJD,KAAKM,QAAQqD,WAAY,kBAAmB3D,MAEvMA,KAAKuU,IAAMnqB,MAAMgrD,gBAAgBp1C,KAAKuV,UAAW8/B,WAAar1C,KAAKM,QAAQ+0C,eAC3Er1C,KAAK01C,OAAS11C,KAAKuU,IAAImhC,OAChB11C,KAAKuU,KAWhBnqB,MAAM+rD,aAAe,SAAUv/C,QAASuQ,MAEpC,IADAvQ,QAAUxM,MAAM6kD,OAAOr4C,SAChBA,SAAS,CACZ,GAAIuQ,KAAKvQ,SACL,MAAOA,QAEXA,SAAUA,QAAQie,aAI1BzqB,MAAMgsD,SAAW,SAAU9jC,MACvB,MAAOloB,OAAM+rD,aAAa7jC,KAAM,SAAU1b,SACtC,MAA0C,SAAnCA,QAAQkd,SAASnB,iBAQhCvoB,MAAM6D,MAAM,OAAQ,QAAS,SAAUsJ,QACnCnN,MAAMmN,QAAU,SAAU+a,KAAM/kB,UAE5B,MADA+kB,MAAOjoB,EAAEioB,MACW9mB,SAAb+B,SAAyB+kB,KAAK/a,UAAY+a,KAAK/a,QAAQhK,aAQtEnD,MAAMkD,MAAQ,SAAU+oD,OAAQ9oD,UAC5B,GAAI+kB,MAAOloB,MAAM6kD,OAAOoH,QACpBC,UAAW,CAKf,IAJsB9qD,SAAlB8mB,KAAK8C,UAA0B9C,KAAKznB,OAAS,IAC7CynB,KAAOA,KAAK,GACZgkC,UAAW,GAEX,UAAYhkC,KAAKwB,SAASnB,gBAAkB,iBAAiBxL,KAAKmL,KAAKlkB,MAEvE,MAAoB5C,UAAb+B,SAAyBlD,EAAEioB,MAAM+B,MAAQhqB,EAAEioB,MAAM+B,IAAI9mB,SAEhE,IAAIgD,MAAO+hB,KAAK/hB,IACH/E,UAAT+E,MACAnG,MAAM+F,KAAK,kCAAoC/F,MAAM0R,OAAOwW,MAAQ,0CAExE,IAAIg7B,SACJ,IAAIgJ,SACAhJ,SAAW+I,WACR,CACH/I,SAAWh7B,KAAK6iC,cAAcoB,kBAAkBhmD,KAChD,IAAIimD,OAAQpsD,MAAMgsD,SAAS9jC,KAC3Bg7B,UAAWjjD,EAAEosD,KAAKnJ,SAAU,SAAU12C,SAClC,MAAIA,SAAQrG,OAASA,QAGbimD,OAASpsD,MAAMmqB,IAAIe,YAAYkhC,MAAO5/C,YAGtD,GAAiBpL,SAAb+B,SAWG,CACH,GAAImpD,SAAUrsD,EAAEymB,IAAIw8B,SAAU,SAAU12C,SACpC,MAAOA,SAAQ8/C,QAAU9/C,QAAQtJ,MAAQ,MAE7C,OAAqB,UAAdglB,KAAKlkB,KAAmBsoD,QAAQ,GAAKA,QAdnB,iBAAf,YACNnpD,SAAYA,SAAW,OAAS,SAKpClD,EAAE4D,KAAKq/C,SAAU,WACbp+C,KAAKwnD,QAAWnpD,mBAAoBwb,OAChCxb,SAASsF,QAAQ3D,KAAK5B,YAAgBC,WAAa2B,KAAK5B,SAWxElD,MAAMusD,iBAAmB,qBAKzBvsD,MAAMwsD,SAAW,SAAUziC,KAAM5jB,MAC7B,KAAO4jB,MAAM,CACT,GAAIb,MAAOjpB,EAAEipB,KAAKa,KAAM5jB,KACxB,IAAI+iB,KACA,MAAOA,KAEXa,MAAOA,KAAKU,aAIpBzqB,MAAMysD,YAAc,SAAUvkC,KAAMgB,KAAMwjC,SACtCzsD,EAAEipB,KAAKhB,KAAMloB,MAAMusD,kBAAmBrjC,KAAMA,KAAMwjC,QAASA,WAG/D1sD,MAAM2sD,iBAAmB,SAAUzkC,KAAMwkC,SACrCxkC,KAAOloB,MAAM6kD,OAAO38B,KACpB,IAAI7nB,KAAM6nB,KAAK/hB,MAAQ+hB,KAAKpS,GACxB7R,OAASyoD,QAAQrsD,IACrB,OAAO4D,QAASA,OAAOsK,GAAK,MAKhCvO,MAAM4sD,iBAAmB,SAAU1kC,KAAM/kB,SAAUmgB,SAC/C4E,KAAOloB,MAAM6kD,OAAO38B,MACH9mB,SAAb+B,WACAA,SAAWnD,MAAMkD,MAAMglB,OAEL9mB,SAAlB8mB,KAAK8C,UAA0B9C,KAAKznB,OAAS,IAC7CynB,KAAOA,KAAK,GAEhB,IAAI3kB,MAAOvD,MAAMwsD,SAAStkC,KAAMloB,MAAMusD,iBACjChpD,OACDvD,MAAM+F,KAAK,wDAA0D/F,MAAM0R,OAAOwW;AAEtF,GAAI/hB,MAAO+hB,KAAK/hB,KACZ0mD,OAAStpD,KAAKmpD,QAAQvmD,KACrB0mD,SACD7sD,MAAM+F,KAAK,iCAAmCI,KAAO,2BAA6BnG,MAAM0R,OAAOwW,OAEnE,iBAArB2kC,QAAe,WACtB1pD,WAAWA,SAAS,GAExB,IAAIoL,IAAKhL,KAAKmpD,QAAQvmD,MAAMoI,EACxB+U,SACAA,QAAQ8lB,mBAAmBr6B,KAAMR,GAAIrL,MAAOC,SAAUhD,OAAQ,OAAS+nB,KAAKpS,KAE5E9V,MAAM8Q,IAAIvN,KAAK2lB,KAAM3a,GAAIpL,WASjCnD,MAAM8sD,MAAQ,SAAUh3C,GAAIi3C,WACxBA,UAAYA,WAAoC,IAAvBA,UAAU/hC,SAAiB+hC,UAAY1jC,QAChE,IAAI7c,SAAUxM,MAAMoW,KAAKN,GAAIi3C,WACzB3sD,KAAOoM,QAAUvM,EAAEuM,WAGvB,OAFApM,MAAKizB,SAAW,IAAMvd,GACtB1V,KAAK+0B,QAAU43B,UACR3sD,MAUXJ,MAAMoW,KAAO,SAAUN,GAAIi3C,WACvBA,UAAYA,WAAoC,IAAvBA,UAAU/hC,SAAiB+hC,UAAY1jC,QAChE,IAAIrd,IAAK+gD,UAAUC,eAAel3C,GAClC,OAAI9J,KAEIA,GAAG8J,KAAOA,IACV9V,MAAM+F,KAAK,qDACP/F,MAAM0R,OAAO1F,IAAM,WAAa8J,GAChC,sFAED9J,IAEA,MASfhM,MAAMitD,MAAQ,SAAUzgD,SACpB,MAAOxM,OAAM6kD,OAAOr4C,SAASsJ,IAQjC9V,MAAMorD,iBAAmB,SAAU5+C,SAE/B,GADAA,QAAUxM,MAAM6kD,OAAOr4C,UAClBA,SAAWxM,MAAMyF,YAAY+G,SAC9B,MAAO,KAGX,KAAKA,QAAQsJ,GAAI,CACb,GAAIo3C,UAAW,YAAcltD,MAAMiS,cACnCzF,SAAQsJ,GAAKo3C,SAEjB,MAAO1gD,SAAQsJ,IASnB9V,MAAMmtD,YAAc,SAAU3gD,SAC1B,GAAI0b,MAAOloB,MAAM6kD,OAAOr4C,QAExB,OAAyB,KAAlB0b,KAAK8C,SAAiB9C,KAAOA,KAAK6iC,eAG7C/qD,MAAMsa,SAAS,sBACXf,YAAa,uBACb6zC,eAAgB,aAChBC,iBAAkB,yEAClBC,aAAc,gCACdnyC,UACIoyC,qBACI3vB,SAAU,yCACVt9B,KAAM,UAEVgrC,QACI1N,SAAU,4BACVt9B,MAAO,SAAU,mBAGzB4U,WACIuN,UACI5gB,KAAM,gBACNvB,MAAO,UAKnBN,MAAMwtD,aAAaliB,OAAS,SAAU11B,KAAM+pC,YAGxC,GAFAA,WAAaA,YAAc/pC,KAAKM,QAChCN,KAAKuV,UAAUuE,KAAK9Z,KAAKM,QAAQk3C,eAAgBzN,WAAW96B,MACxD86B,WAAW8N,aAAc,CACzB,GAAIC,MAAO1tD,MAAM8sD,MAAMl3C,KAAKM,QAAQo3C,aAChB,KAAhBI,KAAKjtD,SACLitD,KAAO93C,KAAK23C,uBAEhBG,KAAK7oC,KAAK86B,WAAW96B,QAI7B7kB,MAAMwtD,aAAaD,oBAAsB,SAAU33C,MAC/C,GAAI+3C,QAAS1tD,EAAE2V,KAAKM,QAAQm3C,iBAG5B,OAFAM,QAAOhkC,KAAK,KAAM/T,KAAKM,QAAQo3C,cAC/BrtD,EAAE,QAAQ2tD,OAAOD,QACVA,OAGX,IAAIE,WAAY,gBAEhB7tD,OAAM8tD,gBAAkB,SAAUthD,SAC9BA,QAAUvM,EAAEuM,QACZ,IAAIoJ,MAAO5V,MAAMipB,cAAczc,QAASqhD,UACxC,OAAOj4C,OAQX5V,MAAM+tD,gBAAkB,SAAUvhD,QAASqY,KAAM3O,SAC7CA,QAAUjW,EAAEyJ,UAAWwM,aAAgB2O,KAAMA,MAC7C,IAAIjP,MAAO5V,MAAM8tD,gBAAgBthD,QAOjC,OANKoJ,MAIDA,KAAK01B,OAAOp1B,UAHZN,KAAO5V,MAAMwtD,aAAahhD,QAAS0J,SACnClW,MAAMmpB,cAAc3c,QAASqhD,UAAWj4C,OAIrCA,KAUX,IAAIo4C,eAEJ/tD,GAAEopB,UAAU4kC,MAAM,SAAUx5C,OAExB,IADA,GAAIrO,QAASpG,MAAM6pB,mBAAmBpV,OAC/BrO,QAAQ,CACX,GAAI4nD,YAAY5nD,OAAO0P,IACnB,MAEJ1P,QAASA,OAAOqkB,WAEpBzqB,MAAM6D,KAAKmqD,YAAa,SAAUE,YAAa7tD,KAC3C6tD,YAAYz5C,aACLu5C,aAAY3tD,SAU3BL,MAAMmuD,gBAAkB,SAAU7iC,MAAO4iC,aACrCluD,MAAM6D,KAAKynB,MAAO,SAAUpD,MAIxB,GAAIpS,IAAK9V,MAAM6kD,OAAO38B,MAAM6iC,gBAAkB1hC,SAAWrpB,MAAMorD,iBAAiBljC,MAAQloB,MAAMiS,cAC1Fi8C,aACAF,YAAYl4C,IAAMo4C,kBAGXF,aAAYl4C,OAS/B9V,MAAMouD,IAAM,WACR,MAAOjqD,MAAKiqD,IAAMjqD,KAAKiqD,OAAQ,GAAKjqD,OAAQC,WAehDpE,MAAMquD,aAAe,SAAUC,QAASp4C,SAEpC,GAAIN,OAAQM,QAASjW,EAAEyJ,QAAO,KAAU1J,MAAMsa,SAAS,sBAAuBpE,SAiD9E,OAhDAN,MAAK24C,aAAc,EACnB34C,KAAK44C,WAAa,EAClB54C,KAAK64C,UAAY,SAAUh6C,OACvBzU,MAAM4D,IAAI,wBAA0B6Q,MAAMzQ,KAAO,OAAShE,MAAM0R,OAAO+C,MAAMrO,SAC7EwP,KAAK44C,WAAaxuD,MAAMouD,MACxBx4C,KAAK24C,aAAc,GAEvB34C,KAAK84C,cAAgB,WACjB1uD,MAAMmuD,gBAAgBv4C,KAAKM,QAAQgc,aAEvCtc,KAAK+4C,MAAQ,WACT3uD,MAAMmuD,gBAAgBv4C,KAAKM,QAAQgc,WAAYtc,KAAKg5C,UAExDh5C,KAAKi5C,aAAe,SAAU38B,YAC1BlyB,MAAMmuD,gBAAgBj8B,WAAYtc,KAAKg5C,UAE3Ch5C,KAAKg5C,QAAU,SAAUn6C,OACrBzU,MAAM4D,IAAI,0BAA4B6Q,MAAMzQ,KAAO,OAAShE,MAAM0R,OAAO+C,MAAMrO,SAC/EwP,KAAK24C,aAAc,EACnB34C,KAAKM,QAAQ0vC,QAAQ0I,UAEzBtuD,MAAM6D,KAAK+R,KAAKM,QAAQgc,WAAY,SAAUE,WAC1CA,UAAYnyB,EAAEmyB,WACdpyB,MAAM6D,KAAKuuB,UAAW,SAAU08B,WAC5B7uD,EAAE6uD,WAAWxlC,GAAG,UAAW1T,KAAK64C,WAC5BnlC,GAAG,cAAe1T,KAAK64C,WACvBR,MAAMr4C,KAAK64C,WAAWM,UAAUn5C,KAAK64C,eAI5C74C,KAAKM,QAAQ84C,gBAgBdp5C,KAAK+4C,QAfL1uD,EAAEquD,SAAShlC,GAAG,WAAY,SAAU7U,OAChCzU,MAAM4D,IAAI,mCAAqC5D,MAAM0R,OAAO+C,MAAMrO,QAClE,IAAIgoD,KAAMpuD,MAAMouD,KAChBpuD,OAAM4D,IAAI,gBAAkBwqD,IAAMx4C,KAAK44C,aACnCJ,IAAMx4C,KAAK44C,WAAa54C,KAAKM,QAAQ+4C,YACrCr5C,KAAK24C,aAAc,GAEvBzsD,WAAW,WACH8T,KAAK24C,aACL34C,KAAKM,QAAQ0vC,QAAQ0I,UAE1B14C,KAAKM,QAAQg5C,SAMjBt5C,MAGX5V,MAAMsa,SAAS,sBACXf,WAAY,iBACZ21C,MAAO,IACPD,UAAW,OAGhBvpC,OAAQ3lB,YCzqBX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OACV,YAiJA,SAASmvD,UAASC,KACd,MAAOA,KA9IXpvD,MAAMqvD,qBAAuB,SAAUC,SAAUC,OAAQC,eACrD,GAAIC,SAAUH,SAAStgD,YAAY,IAC/BygD,eAA8B,IAAZA,UAClBA,QAAUH,SAAS7uD,OAEvB,IAAIivD,UAAWJ,SAAS3sD,UAAU,EAAG8sD,SACjCE,UAAYL,SAAS3sD,UAAU8sD,SAE/B9uD,KAAO4uD,OAAO9gD,MAAM,KAEpBmhD,SAAW5vD,MAAM+C,UAAUpC,KAAM,SAAU+d,IAAKnc,OAChD,GAAIstD,WAAYlvD,KAAKyT,MAAM,EAAG7R,MAAQ,EACtC,OAAOmtD,UAAW,IAAMG,UAAU/pD,KAAK,KAAO6pD,WAKlD,OAHIH,gBACAI,SAAS7oD,QAAQ2oD,SAAW,IAAMF,cAAgBG,WAE/CC,SAKX,IAAIE,kBAEAC,eASJ/vD,OAAMgwD,eAAiB,SAAUC,cAAevvB,SAAUxqB,SACtD,GAAIN,OACAM,QAASlW,MAAMyJ,KAAKyM,aAyBxB,OAvBAN,MAAKq6C,cAAgBA,cACrBr6C,KAAK8qB,SAAWA,SAChB9qB,KAAKs6C,QAAU,WACXlwD,MAAMgwD,eAAeG,mBAAmBv6C,OAE5C5V,MAAM6D,KAAKosD,cAAe,SAAUG,aAAc/vD,KAC9C+vD,aAAaC,aAAerwD,MAAMiW,gBAAgB9P,KAAM,gCAAmC9F,IAAM,MACjG+vD,aAAaC,aAAa/5C,YAAYV,KAAKs6C,SACvCE,aAAahB,MAAQgB,aAAaE,OAClCF,aAAaE,KAAOF,aAAahB,KAEjCx5C,KAAKM,QAAQs5C,gBACbY,aAAaZ,cAAgB55C,KAAKM,QAAQs5C,cACdpuD,SAAxBgvD,aAAab,SACba,aAAab,OAAS35C,KAAKM,QAAQs5C,kBAI3C55C,KAAKM,QAAQq6C,mBACbvwD,MAAMgwD,eAAeO,kBAAkBN,cAAer6C,KAAKM,QAAQq6C,kBAAmB36C,KAAKs6C,SAE/FlwD,MAAMgwD,eAAeQ,kBAAkBP,eACvCr6C,KAAKs6C,UACEt6C,MAGX5V,MAAMgwD,eAAeQ,kBAAoB,SAAUP,eAe/C,MAdAjwD,OAAM6D,KAAKosD,cAAe,SAAUG,aAAc/vD,KAC9C,GAAI+vD,aAAab,OAAQ,CAErB,IAAK,GADDK,UAAW5vD,MAAMqvD,qBAAqBe,aAAaE,KAAMF,aAAab,OAAQa,aAAaZ,eACtF1uD,EAAI,EAAGA,EAAI8uD,SAASnvD,SAAUK,EAAG,CACtC,GAAI2/C,QAASpgD,IAAM,cAAgBS,EAC/B2vD,UAAYxwD,EAAEyJ,QAAO,KAAU0mD,cAC/BE,KAAMV,SAAS9uD,GACf4vD,gBAAgB,GAEpBT,eAAcxP,QAAUgQ,UAE5BL,aAAaM,eAAiBd,SAASnvD,UAGxCwvD,eAGXjwD,MAAMgwD,eAAeW,oBAAsB,SAAUV,cAAeG,aAAc/vD,IAAKuwD,aAEnF,IAAK,GADDC,cAAeT,cACVtvD,EAAI,EAAGA,EAAI8vD,cAAe9vD,EAAG,CAClC,GAAIgwD,UAAWzwD,IAAM,cAAgBS,CACrC+vD,aAAY9pD,QAAQkpD,cAAca,iBAC3Bb,eAAca,UAEzB,GAAIC,cAAe/wD,MAAMiK,QAAQ4mD,YAAa,SAAUnvC,MACpD,OAAQA,KAAKsvC,YAEbD,gBACAd,cAAc5vD,KAAO0wD,eAI7B/wD,MAAMgwD,eAAeiB,mBAAqB,SAAUhB,eAChDjwD,MAAM6D,KAAKosD,cAAe,SAAUG,aAAc/vD,KACF,gBAAjC+vD,cAA2B,gBAClCpwD,MAAMgwD,eAAeW,oBAAoBV,cAAeG,aAAc/vD,IAAK+vD,aAAaM,mBAKpG1wD,MAAMgwD,eAAekB,gBAAkB,SAAUt7C,KAAMq6C,cAAevvB,UAClE1gC,MAAMgwD,eAAeiB,mBAAmBhB,eACxCvvB,SAASuvB,gBAQbjwD,MAAMgwD,eAAeO,kBAAoB,SAAUY,MAAOC,QAAS3T,UAC/Dz9C,MAAM6D,KAAKutD,QAAS,SAAUC,OAC1B,GAAIC,SAAUvB,aAAasB,MAC3BrxD,OAAM6D,KAAKytD,QAAS,SAAUC,WAAYC,OACtCL,MAAME,MAAQ,IAAMG,OAASD,WAC7BA,WAAWlB,aAAa/5C,YAAYmnC,eAQhDz9C,MAAMgwD,eAAeyB,oBAAsB,SAAUrB,cACjD,GAAIA,aAAasB,aAAetB,aAAal6C,SAAWk6C,aAAal6C,QAAQy7C,QAAS,CAClF,GAAIA,SAAUvB,aAAal6C,QAAQy7C,OACnCvB,cAAal6C,QAAQy7C,QAAU,WAC3B,GAAIC,WAAY,GAAIztD,MAChB8S,IAAM06C,QAAQ9sD,MAAM,KAAME,UAG9B,OAFA/E,OAAM4D,IAAI,6BAA+BwsD,aAAaE,KAAO,iCACpD,GAAInsD,OAAOC,UAAYwtD,UAAUxtD,WAAa,MAChD6S,OAUnBjX,MAAMgwD,eAAe6B,mBAAqB,SAAUzC,KAC5CA,UACOU,eAAcX,SAASC,MAG9BpvD,MAAMyM,MAAMqjD,gBAOpB9vD,MAAMgwD,eAAe8B,oBAAsB,SAAU1B,aAAc2B,SAAUf,YACzE,GAAIQ,OAAQrC,SAASiB,aAAaE,MAC9B0B,OAASlC,cAAc0B,MAC3B,IAAIQ,OAAOC,UAAW,CAClBjyD,MAAM4D,IAAI,wBAA0B4tD,MAAQ,cAC5C,IAAIU,YAAa9B,aAAa8B,UAC1BA,aAAcnC,aAAamC,cAC3BlyD,MAAM4D,IAAI,yCAA2CsuD,kBAC9CnC,cAAamC,YAAYV,OAEpC,IAAIzY,SAAUgZ,SAAUA,SAAUf,WAAYA,WAC9ClB,eAAc0B,OAASzY,OACvBiZ,OAAO/rD,KAAK8rD,SAAUf,cAO9BhxD,MAAMgwD,eAAemC,gBAAkB,SAAUC,UAC7CA,SAASC,QAAS,EAClBD,SAASE,aAAe,GAAInuD,MAC5BnE,MAAM4D,IAAI,kBAAoBwuD,SAAS9B,KAAO,qCACzC8B,SAASE,aAAaluD,UAAYguD,SAASG,SAASnuD,WAAa,MACtEguD,SAAS/B,aAAapqD,QAM1BjG,MAAMgwD,eAAewC,qBAAuB,SAAUJ,UAClD,OACIT,QAAS,SAAUI,UACfK,SAASK,aAAeV,SACxBK,SAASM,YAAcN,SAAS9B,KAC5B8B,SAASO,YACT3yD,MAAMgwD,eAAe8B,oBAAoBM,SAAUL,UAEvD/xD,MAAMgwD,eAAemC,gBAAgBC,WAEzC3uC,MAAO,SAAUsuC,SAAUa,WAAYC,aACnCT,SAASpB,YACL8B,OAAQf,SAASe,OACjBF,WAAYb,SAASa,WACrBC,YAAaA,aAEbT,SAASO,YACT3yD,MAAMgwD,eAAe8B,oBAAoBM,SAAU,KAAMA,SAASpB,YAEtEhxD,MAAMgwD,eAAemC,gBAAgBC,aAUjDpyD,MAAMgwD,eAAe+C,mBAAqB,SAAU3C,aAAcl6C,SAC9D,GAAIs7C,OAAQrC,SAASiB,aAAaE,MAC9B0B,OAASlC,cAAc0B,MAC3B,IAAKQ,OAgBIA,OAAOC,WAQRjyD,MAAM4D,IAAI,uDAAyD4tD,OACnEQ,OAAO17C,YAAY,SAAUy7C,SAAUf,YAC/Be,SACA77C,QAAQy7C,QAAQI,UAEhB77C,QAAQuN,MAAMutC,eAZlBgB,OAAOD,SACP77C,QAAQy7C,QAAQK,OAAOD,UAEvB77C,QAAQuN,MAAMuuC,OAAOhB,gBApBpB,CACThxD,MAAM4D,IAAI,8CAAgD4tD,OAC1DQ,OAAShyD,MAAMiW,gBAAgB9P,KAAM,mCAAqCqrD,QAC1EQ,OAAOC,WAAY,EACnBnC,cAAc0B,OAASQ,MACvB,IAAIE,YAAa9B,aAAa8B,UAC1BA,cACKnC,aAAamC,cACdnC,aAAamC,gBAEjBnC,aAAamC,YAAYV,OAASpB,cAEtCl6C,QAAQm1C,OAAQ,EAChBprD,EAAE+yD,KAAK98C,WA6BflW,MAAMgwD,eAAeiD,iBAAmB,SAAUC,SAAUC,UACxD,MAAOA,UAAYD,SACnB,WACI,IACIC,SAAStuD,MAAM,KAAME,WAEzB,MAAOqpB,GACHpuB,MAAM4D,IAAI,wDAA0DwqB,GAExE8kC,SAASruD,MAAM,KAAME,YACrBouD,SAAaD,UAIrBlzD,MAAMgwD,eAAeoD,cAAgB,SAAUhtD,OAAQjG,QACnD,MAAOH,OAAMgwD,eAAeiD,iBAAiB7sD,OAAQjG,SAGzDH,MAAMsa,SAAS,qCACXE,aACIm3C,QAAS3xD,MAAMgwD,eAAeoD,cAC9B3vC,MAAOzjB,MAAMgwD,eAAeoD,cAC5BhE,IAAK,aAKbpvD,MAAMgwD,eAAeqD,aAAe,SAAUjD,aAAc/vD,KACxD,GAAIizD,cAAetzD,MAAMgwD,eAAewC,qBAAqBpC,cACzDl6C,SACAk5C,IAASgB,aAAaE,KACtBqB,QAAS2B,aAAa3B,QACtBluC,MAAS6vC,aAAa7vC,MACtB8vC,SAAUnD,aAAamD,UAAY,OAEvCvzD,OAAMgwD,eAAeyB,oBAAoBrB,cACzCl6C,QAAUlW,MAAM0a,MAAM1a,MAAMsa,SAAS,qCAAqCE,YAC5DtE,QAASk6C,aAAal6C,SACpCk6C,aAAaiC,QAAS,EACtBjC,aAAamC,SAAW,GAAIpuD,MAC5BnE,MAAM4D,IAAI,oBAAsBvD,IAAM,eAAiB+vD,aAAaE,MAEhEF,aAAauC,WACb3yD,MAAMgwD,eAAe+C,mBAAmB3C,aAAcl6C,SAGtDjW,EAAE+yD,KAAK98C,UAKflW,MAAMgwD,eAAeG,mBAAqB,SAAUv6C,MAChD,GAAIqQ,WAAW,EACXutC,SAAU,EACVvD,cAAgBr6C,KAAKq6C,aACzB,KAAK,GAAI5vD,OAAO4vD,eAAe,CAC3B,GAAIG,cAAeH,cAAc5vD,IAIjC,IAHK+vD,aAAal6C,UAAWk6C,aAAal6C,QAAQu9C,QAC9CD,SAAU,GAEVpD,aAAaE,OAASF,aAAakC,aAC9BlC,aAAaiC,QACdryD,MAAMgwD,eAAeqD,aAAajD,aAAc/vD,KAEhD+vD,aAAaiC,SACbpsC,UAAW,OAGd,IAAImqC,aAAasD,SAAWtD,aAAaqC,aAAc,CACxD,GAAIvqC,MAAOmB,SAAS2jC,eAAeoD,aAAasD,OAGhDtD,cAAaqC,aAAezyD,MAAMmqB,IAAIkB,eAAenD,MACrDkoC,aAAasC,YAActC,aAAasD,QAG5CztC,UAAYrQ,KAAK8qB,WAAa9qB,KAAK+9C,iBACnC/9C,KAAK+9C,gBAAiB,EAClB1zD,EAAEuoB,QAAQorC,UAAYJ,QAEtB1xD,WAAW,WACP9B,MAAMgwD,eAAekB,gBAAgBt7C,KAAMq6C,cAAer6C,KAAK8qB,WAChE,GAGH1gC,MAAMgwD,eAAekB,gBAAgBt7C,KAAMq6C,cAAer6C,KAAK8qB,YAQ3E1gC,MAAMgwD,eAAe6D,wBAA0B,SAAU54C,eACrD,GAAI64C,WAAY9zD,MAAMsa,SAASW,eAAe64C,UAC1CviC,UAAYvxB,MAAMu4B,cAAgBv4B,MAAMu4B,cAAgBv4B,MAAMgJ,UAAUhJ,MAAMyJ,KAAKqqD,WACvF9zD,OAAMgwD,eAAez+B,WAIzBvxB,MAAMuR,kBAAkB,kBAKxBvR,MAAM+9B,SAASg2B,wBAA0B,SAAUC,gBAAiBC,OAAQ/9C,SACxE,MAAOjW,GAAEyJ,QAAO,GAAO6pD,SAAU,QAASr9C,SACtCy7C,QAAS,SAAUI,SAAUmC,qBACzB,GAAIC,MAAOxuD,KAAKmK,MAAMiiD,SACtBmC,qBAAoBF,gBAAgBG,QAExC1wC,MAAO,SAAUsuC,SAAUa,YACvB5yD,MAAM4D,IAAI,kBAAoBqwD,OAAS,KAAOrB,gBAQ1D5yD,MAAM+9B,SAASq2B,kBAAoB,SAAUl+C,SACzC,OAAS6nB,UACL/5B,KAAM,iCACNssD,KAAMp6C,QAAQk5C,IACdl5C,QAASlW,MAAM+9B,SAASg2B,wBAAwB79C,QAAQm+C,SAAUn+C,QAAQk5C,IAAKl5C,QAAQA,SACvFo+C,sBAAuB,0BACvBC,SAAUr+C,QAAQq+C,YAI1Bv0D,MAAM+9B,SAASy2B,gBAAkB,SAAU5vB,UAAWzkC,OAAQo4B,eAC1D,GAAIwF,UAAW59B,OAAO49B,SAClBrc,KAAO1hB,MAAMyJ,KAAKs0B,UAGlB6b,UAAY55C,MAAM28B,OAAOoB,SAASu2B,sBAAuB/7B,qBACtD7W,MAAK1d,WACL0d,MAAK4yC,4BACL5yC,MAAK6yC,QACZ,IAAIL,qBAAsB,SAAUO,UAChC7vB,UAAU6vB,UAOd/yC,MAAKxL,QAAQy7C,QAAU,SAAUI,UAC7Bh0B,SAAS7nB,QAAQy7C,QAAQI,SAAUmC,qBAEvC,IAAI7zD,KAAM09B,SAASw2B,UAAYv0D,MAAMiS,cAErC,OADA2nC,WAAUv5C,KAAOqhB,KACV1hB,MAAM+N,WAIlB2X,OAAQ3lB,YC1aX,IAAIA,aAAcA,iBAElB,SAAWE,EAAGD,OAEV,YAWAA,OAAMsa,SAAS,wBACXf,YAAa,mBACbrE,WACIw/C,0BACI//C,SAAU,qCACVrU,MAAO,UAAWy9B,UAAWl8B,KAAM,+BAG3C2tD,cAAe,KACfD,OAAQ,KACR9N,SACAqS,aACAa,mBAEAx5C,UACIy5C,cACIh3B,SAAU,uBACVt9B,MAAO,gBAAiB,yBAE5Bu0D,kBACIj3B,SAAU,wCACVt9B,KAAM,WAGdgX,QACIw9C,kBAAmB,QAI3B90D,MAAM+0D,eAAeF,iBAAmB,SAAUj/C,MAC9C,GAAI+Q,QAAS3mB,MAAM+C,UAAU6S,KAAKM,QAAQ49C,UAAWl+C,KAAKg/C,aAE1D,OAAO50D,OAAM+C,UAAU4jB,OAAQ,SAAUyoC,KACrC,GAAIgB,eAAgBhB,IAAKA,IAAKuD,YAAY,EAAMz8C,QAASN,KAAKM,QAAQy+C,gBACtE,OAAO10D,GAAEyJ,OAAO0mD,aAAcpwD,MAAMoL,WAAWwK,KAAKM,SAAU,gBAAiB,eAIvFlW,MAAM+0D,eAAeC,cAAgB,SAAUp/C,KAAMk+C,WACjD9zD,MAAMgwD,eAAe8D,UAAW,WAC5Bl+C,KAAKk+C,UAAYA,UACjBl+C,KAAK0B,OAAOw9C,kBAAkB7uD,KAAK6tD,eAI5CpuC,OAAQ3lB","file":"infusion-framework-no-jquery.min.js","sourcesContent":["/*!\n * Fluid Infusion v3.0.0\n *\n * Infusion is distributed under the Educational Community License 2.0 and new BSD licenses:\n * http://wiki.fluidproject.org/display/fluid/Fluid+Licensing\n *\n * For information on copyright, see the individual Infusion source code files:\n * https://github.com/fluid-project/infusion/\n */\n/*\nCopyright 2007-2010 University of Cambridge\nCopyright 2007-2009 University of Toronto\nCopyright 2007-2009 University of California, Berkeley\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2010-2015 OCAD University\nCopyright 2011 Charly Molter\nCopyright 2012-2014 Raising the Floor - US\nCopyright 2014-2016 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\n/* global console */\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\nvar fluid = fluid || fluid_3_0_0;\n\n(function ($, fluid) {\n    \"use strict\";\n\n    fluid.version = \"Infusion 3.0.0\";\n\n    // Export this for use in environments like node.js, where it is useful for\n    // configuring stack trace behaviour\n    fluid.Error = Error;\n\n    fluid.environment = {\n        fluid: fluid\n    };\n\n    fluid.global = fluid.global || typeof window !== \"undefined\" ?\n        window : typeof self !== \"undefined\" ? self : {};\n\n    // A standard utility to schedule the invocation of a function after the current\n    // stack returns. On browsers this defaults to setTimeout(func, 1) but in\n    // other environments can be customised - e.g. to process.nextTick in node.js\n    // In future, this could be optimised in the browser to not dispatch into the event queue\n    fluid.invokeLater = function (func) {\n        return setTimeout(func, 1);\n    };\n\n    // The following flag defeats all logging/tracing activities in the most performance-critical parts of the framework.\n    // This should really be performed by a build-time step which eliminates calls to pushActivity/popActivity and fluid.log.\n    fluid.defeatLogging = true;\n\n    // This flag enables the accumulating of all \"activity\" records generated by pushActivity into a running trace, rather\n    // than removing them from the stack record permanently when receiving popActivity. This trace will be consumed by\n    // visual debugging tools.\n    fluid.activityTracing = false;\n    fluid.activityTrace = [];\n\n    var activityParser = /(%\\w+)/g;\n\n    // Renders a single activity element in a form suitable to be sent to a modern browser's console\n    // unsupported, non-API function\n    fluid.renderOneActivity = function (activity, nowhile) {\n        var togo = nowhile === true ? [] : [\"    while \"];\n        var message = activity.message;\n        var index = activityParser.lastIndex = 0;\n        while (true) {\n            var match = activityParser.exec(message);\n            if (match) {\n                var key = match[1].substring(1);\n                togo.push(message.substring(index, match.index));\n                togo.push(activity.args[key]);\n                index = activityParser.lastIndex;\n            }\n            else {\n                break;\n            }\n        }\n        if (index < message.length) {\n            togo.push(message.substring(index));\n        }\n        return togo;\n    };\n\n    // Renders an activity stack in a form suitable to be sent to a modern browser's console\n    // unsupported, non-API function\n    fluid.renderActivity = function (activityStack, renderer) {\n        renderer = renderer || fluid.renderOneActivity;\n        return fluid.transform(activityStack, renderer);\n    };\n\n    // Definitions for ThreadLocals - lifted here from\n    // FluidIoC.js so that we can issue calls to fluid.describeActivity for debugging purposes\n    // in the core framework\n\n    // unsupported, non-API function\n    fluid.singleThreadLocal = function (initFunc) {\n        var value = initFunc();\n        return function (newValue) {\n            return newValue === undefined ? value : value = newValue;\n        };\n    };\n\n    // Currently we only support single-threaded environments - ensure that this function\n    // is not used on startup so it can be successfully monkey-patched\n    // only remaining uses of threadLocals are for activity reporting and in the renderer utilities\n    // unsupported, non-API function\n    fluid.threadLocal = fluid.singleThreadLocal;\n\n    // unsupported, non-API function\n    fluid.globalThreadLocal = fluid.threadLocal(function () {\n        return {};\n    });\n\n    // Return an array of objects describing the current activity\n    // unsupported, non-API function\n    fluid.getActivityStack = function () {\n        var root = fluid.globalThreadLocal();\n        if (!root.activityStack) {\n            root.activityStack = [];\n        }\n        return root.activityStack;\n    };\n\n    // Return an array of objects describing the current activity\n    // unsupported, non-API function\n    fluid.describeActivity = fluid.getActivityStack;\n\n    // Renders either the current activity or the supplied activity to the console\n    fluid.logActivity = function (activity) {\n        activity = activity || fluid.describeActivity();\n        var rendered = fluid.renderActivity(activity).reverse();\n        fluid.log(\"Current activity: \");\n        fluid.each(rendered, function (args) {\n            fluid.doLog(args);\n        });\n    };\n\n    // Execute the supplied function with the specified activity description pushed onto the stack\n    // unsupported, non-API function\n    fluid.pushActivity = function (type, message, args) {\n        var record = {type: type, message: message, args: args, time: new Date().getTime()};\n        if (fluid.activityTracing) {\n            fluid.activityTrace.push(record);\n        }\n        if (fluid.passLogLevel(fluid.logLevel.TRACE)) {\n            fluid.doLog(fluid.renderOneActivity(record, true));\n        }\n        var activityStack = fluid.getActivityStack();\n        activityStack.push(record);\n    };\n\n    // Undo the effect of the most recent pushActivity, or multiple frames if an argument is supplied\n    fluid.popActivity = function (popframes) {\n        popframes = popframes || 1;\n        if (fluid.activityTracing) {\n            fluid.activityTrace.push({pop: popframes});\n        }\n        var activityStack = fluid.getActivityStack();\n        var popped = activityStack.length - popframes;\n        activityStack.length = popped < 0 ? 0 : popped;\n    };\n    // \"this-ist\" style Error so that we can distinguish framework errors whilst still retaining access to platform Error features\n    // Solution taken from http://stackoverflow.com/questions/8802845/inheriting-from-the-error-object-where-is-the-message-property#answer-17936621\n    fluid.FluidError = function (/*message*/) {\n        var togo = Error.apply(this, arguments);\n        this.message = togo.message;\n        try { // This technique is necessary on IE11 since otherwise the stack entry is not filled in\n            throw togo;\n        } catch (togo) {\n            this.stack = togo.stack;\n        }\n        return this;\n    };\n    fluid.FluidError.prototype = Object.create(Error.prototype);\n\n    // The framework's built-in \"log\" failure handler - this logs the supplied message as well as any framework activity in progress via fluid.log\n    fluid.logFailure = function (args, activity) {\n        fluid.log.apply(null, [fluid.logLevel.FAIL, \"ASSERTION FAILED: \"].concat(args));\n        fluid.logActivity(activity);\n    };\n\n    fluid.renderLoggingArg = function (arg) {\n        return fluid.isPrimitive(arg) || !fluid.isPlainObject(arg) ? arg : JSON.stringify(arg);\n    };\n\n    // The framework's built-in \"fail\" failure handler - this throws an exception of type <code>fluid.FluidError</code>\n    fluid.builtinFail = function (args /*, activity*/) {\n        var message = fluid.transform(args, fluid.renderLoggingArg).join(\"\");\n        throw new fluid.FluidError(\"Assertion failure - check console for more details: \" + message);\n    };\n\n    /**\n     * Signals an error to the framework. The default behaviour is to log a structured error message and throw an exception. This strategy may be configured using the legacy\n     * API <code>fluid.pushSoftFailure</code> or else by adding and removing suitably namespaced listeners to the special event <code>fluid.failureEvent</code>\n     *\n     * @param {String} message the error message to log\n     * @param ... Additional arguments, suitable for being sent to the native console.log function\n     */\n    fluid.fail = function (/* message, ... */) {\n        var args = fluid.makeArray(arguments);\n        var activity = fluid.makeArray(fluid.describeActivity()); // Take copy since we will destructively modify\n        fluid.popActivity(activity.length); // clear any current activity - TODO: the framework currently has no exception handlers, although it will in time\n        if (fluid.failureEvent) { // notify any framework failure prior to successfully setting up the failure event below\n            fluid.failureEvent.fire(args, activity);\n        } else {\n            fluid.logFailure(args, activity);\n            fluid.builtinFail(args, activity);\n        }\n    };\n\n    // TODO: rescued from kettleCouchDB.js - clean up in time\n    fluid.expect = function (name, target, members) {\n        fluid.transform(fluid.makeArray(members), function (key) {\n            if (typeof target[key] === \"undefined\") {\n                fluid.fail(name + \" missing required parameter \" + key);\n            }\n        });\n    };\n\n    // Logging\n\n    /** Returns whether logging is enabled **/\n    fluid.isLogging = function () {\n        return logLevelStack[0].priority > fluid.logLevel.IMPORTANT.priority;\n    };\n\n    /** Determines whether the supplied argument is a valid logLevel marker **/\n    fluid.isLogLevel = function (arg) {\n        return fluid.isMarker(arg) && arg.priority !== undefined;\n    };\n\n    /** Accepts one of the members of the <code>fluid.logLevel</code> structure. Returns <code>true</code> if\n     *  a message supplied at that log priority would be accepted at the current logging level. Clients who\n     *  issue particularly expensive log payload arguments are recommended to guard their logging statements with this\n     *  function */\n\n    fluid.passLogLevel = function (testLogLevel) {\n        return testLogLevel.priority <= logLevelStack[0].priority;\n    };\n\n    /** Method to allow user to control the logging level. Accepts either a boolean, for which <code>true</code>\n      * represents <code>fluid.logLevel.INFO</code> and <code>false</code> represents <code>fluid.logLevel.IMPORTANT</code> (the default),\n      * or else any other member of the structure <code>fluid.logLevel</code>\n      * Messages whose priority is strictly less than the current logging level will not be shown*/\n    fluid.setLogging = function (enabled) {\n        var logLevel;\n        if (typeof enabled === \"boolean\") {\n            logLevel = fluid.logLevel[enabled ? \"INFO\" : \"IMPORTANT\"];\n        } else if (fluid.isLogLevel(enabled)) {\n            logLevel = enabled;\n        } else {\n            fluid.fail(\"Unrecognised fluid logging level \", enabled);\n        }\n        logLevelStack.unshift(logLevel);\n        fluid.defeatLogging = !fluid.isLogging();\n    };\n\n    fluid.setLogLevel = fluid.setLogging;\n\n    /** Undo the effect of the most recent \"setLogging\", returning the logging system to its previous state **/\n    fluid.popLogging = function () {\n        var togo = logLevelStack.length === 1 ? logLevelStack[0] : logLevelStack.shift();\n        fluid.defeatLogging = !fluid.isLogging();\n        return togo;\n    };\n\n    /** Actually do the work of logging <code>args</code> to the environment's console. If the standard \"console\"\n     * stream is available, the message will be sent there.\n     */\n    fluid.doLog = function (args) {\n        if (typeof (console) !== \"undefined\") {\n            if (console.debug) {\n                console.debug.apply(console, args);\n            } else if (typeof (console.log) === \"function\") {\n                console.log.apply(console, args);\n            }\n        }\n    };\n\n    /** Log a message to a suitable environmental console. If the first argument to fluid.log is\n     * one of the members of the <code>fluid.logLevel</code> structure, this will be taken as the priority\n     * of the logged message - else if will default to <code>fluid.logLevel.INFO</code>. If the logged message\n     * priority does not exceed that set by the most recent call to the <code>fluid.setLogging</code> function,\n     * the message will not appear.\n     */\n    fluid.log = function (/* message /*, ... */) {\n        var directArgs = fluid.makeArray(arguments);\n        var userLogLevel = fluid.logLevel.INFO;\n        if (fluid.isLogLevel(directArgs[0])) {\n            userLogLevel = directArgs.shift();\n        }\n        if (fluid.passLogLevel(userLogLevel)) {\n            var arg0 = fluid.renderTimestamp(new Date()) + \":  \";\n            var args = [arg0].concat(directArgs);\n            fluid.doLog(args);\n        }\n    };\n\n    // Functional programming utilities.\n\n    // Type checking functions\n\n    /** Returns true if the argument is a value other than null or undefined **/\n    fluid.isValue = function (value) {\n        return value !== undefined && value !== null;\n    };\n\n    /** Returns true if the argument is a primitive type **/\n    fluid.isPrimitive = function (value) {\n        var valueType = typeof (value);\n        return !value || valueType === \"string\" || valueType === \"boolean\" || valueType === \"number\" || valueType === \"function\";\n    };\n\n    /** Determines whether the supplied object is an array. The strategy used is an optimised\n     * approach taken from an earlier version of jQuery - detecting whether the toString() version\n     * of the object agrees with the textual form [object Array], or else whether the object is a\n     * jQuery object (the most common source of \"fake arrays\").\n     */\n    fluid.isArrayable = function (totest) {\n        return totest && (totest.jquery || Object.prototype.toString.call(totest) === \"[object Array]\");\n    };\n\n    /** Determines whether the supplied object is a plain JSON-forming container - that is, it is either a plain Object\n     * or a plain Array. Note that this differs from jQuery's isPlainObject which does not pass Arrays.\n     * @param totest {Any} The object to be tested\n     * @param strict {Boolean} (optional) If `true`, plain Arrays will fail the test rather than passing.\n     */\n    fluid.isPlainObject = function (totest, strict) {\n        var string = Object.prototype.toString.call(totest);\n        if (string === \"[object Array]\") {\n            return !strict;\n        } else if (string !== \"[object Object]\") {\n            return false;\n        } // FLUID-5226: This inventive strategy taken from jQuery detects whether the object's prototype is directly Object.prototype by virtue of having an \"isPrototypeOf\" direct member\n        return !totest.constructor || !totest.constructor.prototype || Object.prototype.hasOwnProperty.call(totest.constructor.prototype, \"isPrototypeOf\");\n    };\n\n    /** Returns <code>primitive</code>, <code>array</code> or <code>object</code> depending on whether the supplied object has\n     * one of those types, by use of the <code>fluid.isPrimitive</code>, <code>fluid.isPlainObject</code> and <code>fluid.isArrayable</code> utilities\n     */\n    fluid.typeCode = function (totest) {\n        return fluid.isPrimitive(totest) || !fluid.isPlainObject(totest) ? \"primitive\" :\n            fluid.isArrayable(totest) ? \"array\" : \"object\";\n    };\n\n    fluid.isIoCReference = function (ref) {\n        return typeof(ref) === \"string\" && ref.charAt(0) === \"{\" && ref.indexOf(\"}\") > 0;\n    };\n\n    fluid.isDOMNode = function (obj) {\n      // This could be more sound, but messy:\n      // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n      // The real problem is browsers like IE6, 7 and 8 which still do not feature a \"constructor\" property on DOM nodes\n        return obj && typeof (obj.nodeType) === \"number\";\n    };\n\n    fluid.isComponent = function (obj) {\n        return obj && obj.constructor === fluid.componentConstructor;\n    };\n\n    fluid.isUncopyable = function (totest) {\n        return fluid.isPrimitive(totest) || !fluid.isPlainObject(totest);\n    };\n\n    fluid.isApplicable = function (totest) {\n        return totest.apply && typeof(totest.apply) === \"function\";\n    };\n\n    /** A basic utility that returns its argument unchanged */\n\n    fluid.identity = function (arg) {\n        return arg;\n    };\n\n    /** A function which raises a failure if executed */\n\n    fluid.notImplemented = function () {\n        fluid.fail(\"This operation is not implemented\");\n    };\n\n    /** Returns the first of its arguments if it is not `undefined`, otherwise returns the second.\n     * @param a {Any} The first argument to be tested for being `undefined`\n     * @param b {Any} The fallback argument, to be returned if `a` is `undefined`\n     * @return {Any} `a` if it is not `undefined`, else `b`.\n     */\n\n    fluid.firstDefined = function (a, b) {\n        return a === undefined ? b : a;\n    };\n\n    /** Return an empty container as the same type as the argument (either an\n     * array or hash */\n    fluid.freshContainer = function (tocopy) {\n        return fluid.isArrayable(tocopy) ? [] : {};\n    };\n\n    fluid.copyRecurse = function (tocopy, segs) {\n        if (segs.length > fluid.strategyRecursionBailout) {\n            fluid.fail(\"Runaway recursion encountered in fluid.copy - reached path depth of \" + fluid.strategyRecursionBailout + \" via path of \" + segs.join(\".\") +\n                \"this object is probably circularly connected. Either adjust your object structure to remove the circularity or increase fluid.strategyRecursionBailout\");\n        }\n        if (fluid.isUncopyable(tocopy)) {\n            return tocopy;\n        } else {\n            return fluid.transform(tocopy, function (value, key) {\n                segs.push(key);\n                var togo = fluid.copyRecurse(value, segs);\n                segs.pop();\n                return togo;\n            });\n        }\n    };\n\n    /** Performs a deep copy (clone) of its argument. This will guard against cloning a circular object by terminating if it reaches a path depth\n     * greater than <code>fluid.strategyRecursionBailout</code>\n     **/\n\n    fluid.copy = function (tocopy) {\n        return fluid.copyRecurse(tocopy, []);\n    };\n\n    // TODO: Coming soon - reimplementation of $.extend using strategyRecursionBailout\n    fluid.extend = $.extend;\n\n    /** Corrected version of jQuery makeArray that returns an empty array on undefined rather than crashing.\n      * We don't deal with as many pathological cases as jQuery **/\n    fluid.makeArray = function (arg) {\n        var togo = [];\n        if (arg !== null && arg !== undefined) {\n            if (fluid.isPrimitive(arg) || fluid.isPlainObject(arg, true) || typeof(arg.length) !== \"number\") {\n                togo.push(arg);\n            }\n            else {\n                for (var i = 0; i < arg.length; ++i) {\n                    togo[i] = arg[i];\n                }\n            }\n        }\n        return togo;\n    };\n\n    /** Pushes an element or elements onto an array, initialising the array as a member of a holding object if it is\n     * not already allocated.\n     * @param holder {Array or Object} The holding object whose member is to receive the pushed element(s).\n     * @param member {String} The member of the <code>holder</code> onto which the element(s) are to be pushed\n     * @param topush {Array or Object} If an array, these elements will be added to the end of the array using Array.push.apply. If an object, it will be pushed to the end of the array using Array.push.\n     */\n    fluid.pushArray = function (holder, member, topush) {\n        var array = holder[member] ? holder[member] : (holder[member] = []);\n        if (fluid.isArrayable(topush)) {\n            array.push.apply(array, topush);\n        } else {\n            array.push(topush);\n        }\n    };\n\n    function transformInternal(source, togo, key, args) {\n        var transit = source[key];\n        for (var j = 0; j < args.length - 1; ++j) {\n            transit = args[j + 1](transit, key);\n        }\n        togo[key] = transit;\n    }\n\n    /** Return an array or hash of objects, transformed by one or more functions. Similar to\n     * jQuery.map, only will accept an arbitrary list of transformation functions and also\n     * works on non-arrays.\n     * @param source {Array or Object} The initial container of objects to be transformed. If the source is\n     * neither an array nor an object, it will be returned untransformed\n     * @param fn1, fn2, etc. {Function} An arbitrary number of optional further arguments,\n     * all of type Function, accepting the signature (object, index), where object is the\n     * structure member to be transformed, and index is its key or index. Each function will be\n     * applied in turn to each structure member, which will be replaced by the return value\n     * from the function.\n     * @return The finally transformed list, where each member has been replaced by the\n     * original member acted on by the function or functions.\n     */\n    fluid.transform = function (source) {\n        if (fluid.isPrimitive(source)) {\n            return source;\n        }\n        var togo = fluid.freshContainer(source);\n        if (fluid.isArrayable(source)) {\n            for (var i = 0; i < source.length; ++i) {\n                transformInternal(source, togo, i, arguments);\n            }\n        } else {\n            for (var key in source) {\n                transformInternal(source, togo, key, arguments);\n            }\n        }\n        return togo;\n    };\n\n    /** Better jQuery.each which works on hashes as well as having the arguments\n     * the right way round.\n     * @param source {Arrayable or Object} The container to be iterated over\n     * @param func {Function} A function accepting (value, key) for each iterated\n     * object.\n     */\n    fluid.each = function (source, func) {\n        if (fluid.isArrayable(source)) {\n            for (var i = 0; i < source.length; ++i) {\n                func(source[i], i);\n            }\n        } else {\n            for (var key in source) {\n                func(source[key], key);\n            }\n        }\n    };\n\n    fluid.make_find = function (find_if) {\n        var target = find_if ? false : undefined;\n        return function (source, func, deffolt) {\n            var disp;\n            if (fluid.isArrayable(source)) {\n                for (var i = 0; i < source.length; ++i) {\n                    disp = func(source[i], i);\n                    if (disp !== target) {\n                        return find_if ? source[i] : disp;\n                    }\n                }\n            } else {\n                for (var key in source) {\n                    disp = func(source[key], key);\n                    if (disp !== target) {\n                        return find_if ? source[key] : disp;\n                    }\n                }\n            }\n            return deffolt;\n        };\n    };\n\n    /** Scan through an array or hash of objects, terminating on the first member which\n     * matches a predicate function.\n     * @param source {Arrayable or Object} The array or hash of objects to be searched.\n     * @param func {Function} A predicate function, acting on a member. A predicate which\n     * returns any value which is not <code>undefined</code> will terminate\n     * the search. The function accepts (object, index).\n     * @param deflt {Object} A value to be returned in the case no predicate function matches\n     * a structure member. The default will be the natural value of <code>undefined</code>\n     * @return The first return value from the predicate function which is not <code>undefined</code>\n     */\n    fluid.find = fluid.make_find(false);\n    /** The same signature as fluid.find, only the return value is the actual element for which the\n     * predicate returns a value different from <code>false</code>\n     */\n    fluid.find_if = fluid.make_find(true);\n\n    /** Scan through an array of objects, \"accumulating\" a value over them\n     * (may be a straightforward \"sum\" or some other chained computation). \"accumulate\" is the name derived\n     * from the C++ STL, other names for this algorithm are \"reduce\" or \"fold\".\n     * @param list {Array} The list of objects to be accumulated over.\n     * @param fn {Function} An \"accumulation function\" accepting the signature (object, total, index) where\n     * object is the list member, total is the \"running total\" object (which is the return value from the previous function),\n     * and index is the index number.\n     * @param arg {Object} The initial value for the \"running total\" object.\n     * @return {Object} the final running total object as returned from the final invocation of the function on the last list member.\n     */\n    fluid.accumulate = function (list, fn, arg) {\n        for (var i = 0; i < list.length; ++i) {\n            arg = fn(list[i], arg, i);\n        }\n        return arg;\n    };\n\n    /** Returns the sum of its two arguments. A useful utility to combine with fluid.accumulate to compute totals\n     * @param a {Number|Boolean} The first operand to be added\n     * @param b {Number|Boolean} The second operand to be added\n     * @return {Number} The sum of the two operands\n     **/\n    fluid.add = function (a, b) {\n        return a + b;\n    };\n\n    /** Scan through an array or hash of objects, removing those which match a predicate. Similar to\n     * jQuery.grep, only acts on the list in-place by removal, rather than by creating\n     * a new list by inclusion.\n     * @param source {Array|Object} The array or hash of objects to be scanned over. Note that in the case this is an array,\n     * the iteration will proceed from the end of the array towards the front.\n     * @param fn {Function} A predicate function determining whether an element should be\n     * removed. This accepts the standard signature (object, index) and returns a \"truthy\"\n     * result in order to determine that the supplied object should be removed from the structure.\n     * @param target {Array|Object} (optional) A target object of the same type as <code>source</code>, which will\n     * receive any objects removed from it.\n     * @return <code>target</code>, containing the removed elements, if it was supplied, or else <code>source</code>\n     * modified by the operation of removing the matched elements.\n     */\n    fluid.remove_if = function (source, fn, target) {\n        if (fluid.isArrayable(source)) {\n            for (var i = source.length - 1; i >= 0; --i) {\n                if (fn(source[i], i)) {\n                    if (target) {\n                        target.unshift(source[i]);\n                    }\n                    source.splice(i, 1);\n                }\n            }\n        } else {\n            for (var key in source) {\n                if (fn(source[key], key)) {\n                    if (target) {\n                        target[key] = source[key];\n                    }\n                    delete source[key];\n                }\n            }\n        }\n        return target || source;\n    };\n\n    /** Fills an array of given size with copies of a value or result of a function invocation\n     * @param n {Number} The size of the array to be filled\n     * @param generator {Object|Function} Either a value to be replicated or function to be called\n     * @param applyFunc {Boolean} If true, treat the generator value as a function to be invoked with\n     * argument equal to the index position\n     */\n\n    fluid.generate = function (n, generator, applyFunc) {\n        var togo = [];\n        for (var i = 0; i < n; ++i) {\n            togo[i] = applyFunc ? generator(i) : generator;\n        }\n        return togo;\n    };\n\n    /** Returns an array of size count, filled with increasing integers, starting at 0 or at the index specified by first.\n     * @param count {Number} Size of the filled array to be returned\n     * @param first {Number} (optional, defaults to 0) First element to appear in the array\n     */\n\n    fluid.iota = function (count, first) {\n        first = first || 0;\n        var togo = [];\n        for (var i = 0; i < count; ++i) {\n            togo[togo.length] = first++;\n        }\n        return togo;\n    };\n\n    /** Extracts a particular member from each top-level member of a container, returning a new container of the same type\n     * @param holder {Array|Object} The container to be filtered\n     * @param name {String|Array of String} An EL path to be fetched from each top-level member\n     */\n\n    fluid.getMembers = function (holder, name) {\n        return fluid.transform(holder, function (member) {\n            return fluid.get(member, name);\n        });\n    };\n\n    /** Accepts an object to be filtered, and an array of keys. Either all keys not present in\n     * the array are removed, or only keys present in the array are returned.\n     * @param toFilter {Array|Object} The object to be filtered - this will be NOT modified by the operation (current implementation\n     * passes through $.extend shallow algorithm)\n     * @param keys {Array of String} The array of keys to operate with\n     * @param exclude {boolean} If <code>true</code>, the keys listed are removed rather than included\n     * @return the filtered object (the same object that was supplied as <code>toFilter</code>\n     */\n\n    fluid.filterKeys = function (toFilter, keys, exclude) {\n        return fluid.remove_if($.extend({}, toFilter), function (value, key) {\n            return exclude ^ (keys.indexOf(key) === -1);\n        });\n    };\n\n    /** A convenience wrapper for <code>fluid.filterKeys</code> with the parameter <code>exclude</code> set to <code>true</code>\n     *  Returns the supplied object with listed keys removed */\n\n    fluid.censorKeys = function (toCensor, keys) {\n        return fluid.filterKeys(toCensor, keys, true);\n    };\n\n    // TODO: This is not as clever an idea as we think it is - this typically inner-loop function will optimise badly due to closure\n    fluid.makeFlatten = function (index) {\n        return function (obj) {\n            var togo = [];\n            fluid.each(obj, function (/* value, key */) {\n                togo.push(arguments[index]);\n            });\n            return togo;\n        };\n    };\n\n    /** Return the keys in the supplied object as an array. Note that this will return keys found in the prototype chain as well as \"own properties\", unlike Object.keys() **/\n    fluid.keys = fluid.makeFlatten(1);\n\n    /** Return the values in the supplied object as an array **/\n    fluid.values = fluid.makeFlatten(0);\n\n    /**\n     * Searches through the supplied object, and returns <code>true</code> if the supplied value\n     * can be found\n     */\n    fluid.contains = function (obj, value) {\n        return obj ? (fluid.isArrayable(obj) ? obj.indexOf(value) !== -1 : fluid.find(obj, function (thisValue) {\n            if (value === thisValue) {\n                return true;\n            }\n        })) : undefined;\n    };\n\n    /**\n     * Searches through the supplied object for the first value which matches the one supplied.\n     * @param obj {Object} the Object to be searched through\n     * @param value {Object} the value to be found. This will be compared against the object's\n     * member using === equality.\n     * @return {String} The first key whose value matches the one supplied\n     */\n    fluid.keyForValue = function (obj, value) {\n        return fluid.find(obj, function (thisValue, key) {\n            if (value === thisValue) {\n                return key;\n            }\n        });\n    };\n\n    /** Converts an array into an object whose keys are the elements of the array, each with the value \"true\"\n     * @param array {Array of String} The array to be converted to a hash\n     * @return hash {Object} An object with value <code>true</code> for each key taken from a member of <code>array</code>\n     */\n\n    fluid.arrayToHash = function (array) {\n        var togo = {};\n        fluid.each(array, function (el) {\n            togo[el] = true;\n        });\n        return togo;\n    };\n\n    /** Applies a stable sorting algorithm to the supplied array and comparator (note that Array.sort in JavaScript is not specified\n     * to be stable). The algorithm used will be an insertion sort, which whilst quadratic in time, will perform well\n     * on small array sizes.\n     * @param array {Array} The array to be sorted. This input array will be modified in place.\n     * @param func {Function} A comparator returning >0, 0, or <0 on pairs of elements representing their sort order (same contract as Array.sort comparator)\n     */\n\n    fluid.stableSort = function (array, func) {\n        for (var i = 0; i < array.length; i++) {\n            var j, k = array[i];\n            for (j = i; j > 0 && func(k, array[j - 1]) < 0; j--) {\n                array[j] = array[j - 1];\n            }\n            array[j] = k;\n        }\n    };\n\n    /** Converts a hash into an object by hoisting out the object's keys into an array element via the supplied String \"key\", and then transforming via an optional further function, which receives the signature\n     * (newElement, oldElement, key) where newElement is the freshly cloned element, oldElement is the original hash's element, and key is the key of the element.\n     * If the function is not supplied, the old element is simply deep-cloned onto the new element (same effect as transform fluid.transforms.deindexIntoArrayByKey).\n     * The supplied hash will not be modified, unless the supplied function explicitly does so by modifying its 2nd argument.\n     */\n    fluid.hashToArray = function (hash, keyName, func) {\n        var togo = [];\n        fluid.each(hash, function (el, key) {\n            var newEl = {};\n            newEl[keyName] = key;\n            if (func) {\n                newEl = func(newEl, el, key) || newEl;\n            } else {\n                $.extend(true, newEl, el);\n            }\n            togo.push(newEl);\n        });\n        return togo;\n    };\n\n    /** Converts an array consisting of a mixture of arrays and non-arrays into the concatenation of any inner arrays\n     * with the non-array elements\n     */\n    fluid.flatten = function (array) {\n        var togo = [];\n        fluid.each(array, function (element) {\n            if (fluid.isArrayable(element)) {\n                togo = togo.concat(element);\n            } else {\n                togo.push(element);\n            }\n        });\n        return togo;\n    };\n\n    /**\n     * Clears an object or array of its contents. For objects, each property is deleted.\n     *\n     * @param {Object|Array} target the target to be cleared\n     */\n    fluid.clear = function (target) {\n        if (fluid.isArrayable(target)) {\n            target.length = 0;\n        } else {\n            for (var i in target) {\n                delete target[i];\n            }\n        }\n    };\n\n   /**\n    * @param boolean ascending <code>true</code> if a comparator is to be returned which\n    * sorts strings in descending order of length\n    */\n    fluid.compareStringLength = function (ascending) {\n        return ascending ? function (a, b) {\n            return a.length - b.length;\n        } : function (a, b) {\n            return b.length - a.length;\n        };\n    };\n\n    /**\n     * Returns the converted integer if the input string can be converted to an integer. Otherwise, return NaN.\n     * @param {String} a string to be returned in integer\n     */\n    fluid.parseInteger = function (string) {\n        return isFinite(string) && ((string % 1) === 0) ? Number(string) : NaN;\n    };\n\n    /**\n     * Derived from Sindre Sorhus's round-to node module ( https://github.com/sindresorhus/round-to ).\n     * License: MIT\n     *\n     * Rounds the supplied number to at most the number of decimal places indicated by the scale, omiting any trailing 0s.\n     * There are three possible rounding methods described below: \"round\", \"ceil\", \"floor\"\n     * Round: Numbers are rounded away from 0 (i.e 0.5 -> 1, -0.5 -> -1).\n     * Ceil: Numbers are rounded up\n     * Floor: Numbers are rounded down\n     * If the scale is invalid (i.e falsey, not a number, negative value), it is treated as 0.\n     * If the scale is a floating point number, it is rounded to an integer.\n     *\n     * @param {Number} num - the number to be rounded\n     * @param {Number} scale - the maximum number of decimal places to round to.\n     * @param {String} method - (optional) Request a rounding method to use (\"round\", \"ceil\", \"floor\").\n     *                          If nothing or an invalid method is provided, it will default to \"round\".\n     * @return {Number} The num value rounded to the specified number of decimal places.\n     */\n    fluid.roundToDecimal = function (num, scale, method) {\n        // treat invalid scales as 0\n        scale = scale && scale >= 0 ? Math.round(scale) : 0;\n\n        if (method === \"ceil\" || method === \"floor\") {\n            // The following is derived from https://github.com/sindresorhus/round-to/blob/v2.0.0/index.js#L20\n            return Number(Math[method](num + \"e\" + scale) + \"e-\" + scale);\n        } else {\n            // The following is derived from https://github.com/sindresorhus/round-to/blob/v2.0.0/index.js#L17\n            var sign = num >= 0 ? 1 : -1; // manually calculating the sign because Math.sign is not supported in IE\n            return Number(sign * (Math.round(Math.abs(num) + \"e\" + scale) + \"e-\" + scale));\n        }\n    };\n\n    /** Calls Object.freeze at each level of containment of the supplied object\n     * @return The supplied argument, recursively frozen\n     */\n    fluid.freezeRecursive = function (tofreeze) {\n        if (fluid.isPlainObject(tofreeze)) {\n            fluid.each(tofreeze, function (value) {\n                fluid.freezeRecursive(value);\n            });\n            return Object.freeze(tofreeze);\n        } else {\n            return tofreeze;\n        }\n    };\n\n    /** A set of special \"marker values\" used in signalling in function arguments and return values,\n      * to partially compensate for JavaScript's lack of distinguished types. These should never appear\n      * in JSON structures or other kinds of static configuration. An API specifically documents if it\n      * accepts or returns any of these values, and if so, what its semantic is  - most are of private\n      * use internal to the framework **/\n\n    fluid.marker = function () {};\n\n    fluid.makeMarker = function (value, extra) {\n        var togo = Object.create(fluid.marker.prototype);\n        togo.value = value;\n        $.extend(togo, extra);\n        return Object.freeze(togo);\n    };\n\n    /** A special \"marker object\" representing that a distinguished\n     * (probably context-dependent) value should be substituted.\n     */\n    fluid.VALUE = fluid.makeMarker(\"VALUE\");\n\n    /** A special \"marker object\" representing that no value is present (where\n     * signalling using the value \"undefined\" is not possible - e.g. the return value from a \"strategy\") */\n    fluid.NO_VALUE = fluid.makeMarker(\"NO_VALUE\");\n\n    /** A marker indicating that a value requires to be expanded after component construction begins **/\n    fluid.EXPAND = fluid.makeMarker(\"EXPAND\");\n\n    /** Determine whether an object is any marker, or a particular marker - omit the\n     * 2nd argument to detect any marker\n     */\n    fluid.isMarker = function (totest, type) {\n        if (!(totest instanceof fluid.marker)) {\n            return false;\n        }\n        if (!type) {\n            return true;\n        }\n        return totest.value === type.value;\n    };\n\n    fluid.logLevelsSpec = {\n        \"FATAL\":      0,\n        \"FAIL\":       5,\n        \"WARN\":      10,\n        \"IMPORTANT\": 12, // The default logging \"off\" level - corresponds to the old \"false\"\n        \"INFO\":      15, // The default logging \"on\" level - corresponds to the old \"true\"\n        \"TRACE\":     20\n    };\n\n    /** A structure holding all supported log levels as supplied as a possible first argument to fluid.log\n     * Members with a higher value of the \"priority\" field represent lower priority logging levels */\n    // Moved down here since it uses fluid.transform and fluid.makeMarker on startup\n    fluid.logLevel = fluid.transform(fluid.logLevelsSpec, function (value, key) {\n        return fluid.makeMarker(key, {priority: value});\n    });\n    var logLevelStack = [fluid.logLevel.IMPORTANT]; // The stack of active logging levels, with the current level at index 0\n\n\n    // Model functions\n    fluid.model = {}; // cannot call registerNamespace yet since it depends on fluid.model\n\n    /** Copy a source \"model\" onto a target **/\n    fluid.model.copyModel = function (target, source) {\n        fluid.clear(target);\n        $.extend(true, target, source);\n    };\n\n    /** Parse an EL expression separated by periods (.) into its component segments.\n     * @param {String} EL The EL expression to be split\n     * @return {Array of String} the component path expressions.\n     * TODO: This needs to be upgraded to handle (the same) escaping rules (as RSF), so that\n     * path segments containing periods and backslashes etc. can be processed, and be harmonised\n     * with the more complex implementations in fluid.pathUtil(data binding).\n     */\n    fluid.model.parseEL = function (EL) {\n        return EL === \"\" ? [] : String(EL).split(\".\");\n    };\n\n    /** Compose an EL expression from two separate EL expressions. The returned\n     * expression will be the one that will navigate the first expression, and then\n     * the second, from the value reached by the first. Either prefix or suffix may be\n     * the empty string **/\n\n    fluid.model.composePath = function (prefix, suffix) {\n        return prefix === \"\" ? suffix : (suffix === \"\" ? prefix : prefix + \".\" + suffix);\n    };\n\n    /** Compose any number of path segments, none of which may be empty **/\n    fluid.model.composeSegments = function () {\n        return fluid.makeArray(arguments).join(\".\");\n    };\n\n    /** Returns the index of the last occurrence of the period character . in the supplied string */\n    fluid.lastDotIndex = function (path) {\n        return path.lastIndexOf(\".\");\n    };\n\n    /** Returns all of an EL path minus its final segment - if the path consists of just one segment, returns \"\" -\n     * WARNING - this method does not follow escaping rules */\n    fluid.model.getToTailPath = function (path) {\n        var lastdot = fluid.lastDotIndex(path);\n        return lastdot === -1 ? \"\" : path.substring(0, lastdot);\n    };\n\n    /** Returns the very last path component of an EL path\n     * WARNING - this method does not follow escaping rules */\n    fluid.model.getTailPath = function (path) {\n        var lastdot = fluid.lastDotIndex(path);\n        return path.substring(lastdot + 1);\n    };\n\n    /** Helpful alias for old-style API **/\n    fluid.path = fluid.model.composeSegments;\n    fluid.composePath = fluid.model.composePath;\n\n\n    // unsupported, NON-API function\n    fluid.requireDataBinding = function () {\n        fluid.fail(\"Please include DataBinding.js in order to operate complex model accessor configuration\");\n    };\n\n    fluid.model.setWithStrategy = fluid.model.getWithStrategy = fluid.requireDataBinding;\n\n    // unsupported, NON-API function\n    fluid.model.resolvePathSegment = function (root, segment, create, origEnv) {\n        // TODO: This branch incurs a huge cost that we incur across the whole framework, just to support the DOM binder\n        // usage. We need to either do something \"schematic\" or move to proxies\n        if (!origEnv && root.resolvePathSegment) {\n            var togo = root.resolvePathSegment(segment);\n            if (togo !== undefined) { // To resolve FLUID-6132\n                return togo;\n            }\n        }\n        if (create && root[segment] === undefined) {\n            // This optimisation in this heavily used function has a fair effect\n            return root[segment] = {};\n        }\n        return root[segment];\n    };\n\n    // unsupported, NON-API function\n    fluid.model.parseToSegments = function (EL, parseEL, copy) {\n        return typeof(EL) === \"number\" || typeof(EL) === \"string\" ? parseEL(EL) : (copy ? fluid.makeArray(EL) : EL);\n    };\n\n    // unsupported, NON-API function\n    fluid.model.pathToSegments = function (EL, config) {\n        var parser = config && config.parser ? config.parser.parse : fluid.model.parseEL;\n        return fluid.model.parseToSegments(EL, parser);\n    };\n\n    // Overall strategy skeleton for all implementations of fluid.get/set\n    fluid.model.accessImpl = function (root, EL, newValue, config, initSegs, returnSegs, traverser) {\n        var segs = fluid.model.pathToSegments(EL, config);\n        var initPos = 0;\n        if (initSegs) {\n            initPos = initSegs.length;\n            segs = initSegs.concat(segs);\n        }\n        var uncess = newValue === fluid.NO_VALUE ? 0 : 1;\n        root = traverser(root, segs, initPos, config, uncess);\n        if (newValue === fluid.NO_VALUE || newValue === fluid.VALUE) { // get or custom\n            return returnSegs ? {root: root, segs: segs} : root;\n        }\n        else { // set\n            root[segs[segs.length - 1]] = newValue;\n        }\n    };\n\n    // unsupported, NON-API function\n    fluid.model.accessSimple = function (root, EL, newValue, environment, initSegs, returnSegs) {\n        return fluid.model.accessImpl(root, EL, newValue, environment, initSegs, returnSegs, fluid.model.traverseSimple);\n    };\n\n    // unsupported, NON-API function\n    fluid.model.traverseSimple = function (root, segs, initPos, environment, uncess) {\n        var origEnv = environment;\n        var limit = segs.length - uncess;\n        for (var i = 0; i < limit; ++i) {\n            if (!root) {\n                return root;\n            }\n            var segment = segs[i];\n            if (environment && environment[segment]) {\n                root = environment[segment];\n            } else {\n                root = fluid.model.resolvePathSegment(root, segment, uncess === 1, origEnv);\n            }\n            environment = null;\n        }\n        return root;\n    };\n\n    fluid.model.setSimple = function (root, EL, newValue, environment, initSegs) {\n        fluid.model.accessSimple(root, EL, newValue, environment, initSegs, false);\n    };\n\n    /** Optimised version of fluid.get for uncustomised configurations **/\n\n    fluid.model.getSimple = function (root, EL, environment, initSegs) {\n        if (EL === null || EL === undefined || EL.length === 0) {\n            return root;\n        }\n        return fluid.model.accessSimple(root, EL, fluid.NO_VALUE, environment, initSegs, false);\n    };\n\n    /** Even more optimised version which assumes segs are parsed and no configuration **/\n    fluid.getImmediate = function (root, segs, i) {\n        var limit = (i === undefined ? segs.length : i + 1);\n        for (var j = 0; j < limit; ++j) {\n            root = root ? root[segs[j]] : undefined;\n        }\n        return root;\n    };\n\n    // unsupported, NON-API function\n    // Returns undefined to signal complex configuration which needs to be farmed out to DataBinding.js\n    // any other return represents an environment value AND a simple configuration we can handle here\n    fluid.decodeAccessorArg = function (arg3) {\n        return (!arg3 || arg3 === fluid.model.defaultGetConfig || arg3 === fluid.model.defaultSetConfig) ?\n            null : (arg3.type === \"environment\" ? arg3.value : undefined);\n    };\n\n    fluid.set = function (root, EL, newValue, config, initSegs) {\n        var env = fluid.decodeAccessorArg(config);\n        if (env === undefined) {\n            fluid.model.setWithStrategy(root, EL, newValue, config, initSegs);\n        } else {\n            fluid.model.setSimple(root, EL, newValue, env, initSegs);\n        }\n    };\n\n    /** Evaluates an EL expression by fetching a dot-separated list of members\n     * recursively from a provided root.\n     * @param root The root data structure in which the EL expression is to be evaluated\n     * @param {string/array} EL The EL expression to be evaluated, or an array of path segments\n     * @param config An optional configuration or environment structure which can customise the fetch operation\n     * @return The fetched data value.\n     */\n\n    fluid.get = function (root, EL, config, initSegs) {\n        var env = fluid.decodeAccessorArg(config);\n        return env === undefined ?\n            fluid.model.getWithStrategy(root, EL, config, initSegs)\n            : fluid.model.accessImpl(root, EL, fluid.NO_VALUE, env, null, false, fluid.model.traverseSimple);\n    };\n\n    fluid.getGlobalValue = function (path, env) {\n        if (path) {\n            env = env || fluid.environment;\n            return fluid.get(fluid.global, path, {type: \"environment\", value: env});\n        }\n    };\n\n    /**\n     * Allows for the binding to a \"this-ist\" function\n     * @param {Object} obj, \"this-ist\" object to bind to\n     * @param {Object} fnName, the name of the function to call\n     * @param {Object} args, arguments to call the function with\n     */\n    fluid.bind = function (obj, fnName, args) {\n        return obj[fnName].apply(obj, fluid.makeArray(args));\n    };\n\n    /**\n     * Allows for the calling of a function from an EL expression \"functionPath\", with the arguments \"args\", scoped to an framework version \"environment\".\n     * @param {Object} functionPath - An EL expression\n     * @param {Object} args - An array of arguments to be applied to the function, specified in functionPath\n     * @param {Object} environment - (optional) The object to scope the functionPath to  (typically the framework root for version control)\n     */\n    fluid.invokeGlobalFunction = function (functionPath, args, environment) {\n        var func = fluid.getGlobalValue(functionPath, environment);\n        if (!func) {\n            fluid.fail(\"Error invoking global function: \" + functionPath + \" could not be located\");\n        } else {\n            return func.apply(null, fluid.isArrayable(args) ? args : fluid.makeArray(args));\n        }\n    };\n\n    /** Registers a new global function at a given path\n     */\n\n    fluid.registerGlobalFunction = function (functionPath, func, env) {\n        env = env || fluid.environment;\n        fluid.set(fluid.global, functionPath, func, {type: \"environment\", value: env});\n    };\n\n    fluid.setGlobalValue = fluid.registerGlobalFunction;\n\n    /** Ensures that an entry in the global namespace exists. If it does not, a new entry is created as {} and returned. If an existing\n     * value is found, it is returned instead **/\n    fluid.registerNamespace = function (naimspace, env) {\n        env = env || fluid.environment;\n        var existing = fluid.getGlobalValue(naimspace, env);\n        if (!existing) {\n            existing = {};\n            fluid.setGlobalValue(naimspace, existing, env);\n        }\n        return existing;\n    };\n\n    // stubs for two functions in FluidDebugging.js\n    fluid.dumpEl = fluid.identity;\n    fluid.renderTimestamp = fluid.identity;\n\n    /*** The Fluid instance id ***/\n\n    // unsupported, NON-API function\n    fluid.generateUniquePrefix = function () {\n        return (Math.floor(Math.random() * 1e12)).toString(36) + \"-\";\n    };\n\n    var fluid_prefix = fluid.generateUniquePrefix();\n\n    fluid.fluidInstance = fluid_prefix;\n\n    var fluid_guid = 1;\n\n    /** Allocate a string value that will be unique within this Infusion instance (frame or process), and\n     * globally unique with high probability (50% chance of collision after a million trials) **/\n\n    fluid.allocateGuid = function () {\n        return fluid_prefix + (fluid_guid++);\n    };\n\n    /*** The Fluid Event system. ***/\n\n    fluid.registerNamespace(\"fluid.event\");\n\n    // Fluid priority system for encoding relative positions of, e.g. listeners, transforms, options, in lists\n\n    fluid.extremePriority = 4e9; // around 2^32 - allows headroom of 21 fractional bits for sub-priorities\n    fluid.priorityTypes = {\n        first: -1,\n        last: 1,\n        before: 0,\n        after: 0\n    };\n    // TODO: This should be properly done with defaults blocks and a much more performant fluid.indexDefaults\n    fluid.extremalPriorities = {\n        // a built-in definition to allow test infrastructure \"last\" listeners to sort after all impl listeners, and authoring/debugging listeners to sort after those\n        // these are \"priority intensities\", and will be flipped for \"first\" listeners\n        none: 0,\n        testing: 10,\n        authoring: 20\n    };\n\n    // unsupported, NON-API function\n    // TODO: Note - no \"fixedOnly = true\" sites remain in the framework\n    fluid.parsePriorityConstraint = function (constraint, fixedOnly, site) {\n        var segs = constraint.split(\":\");\n        var type = segs[0];\n        var lookup = fluid.priorityTypes[type];\n        if (lookup === undefined) {\n            fluid.fail(\"Invalid constraint type in priority field \" + constraint + \": the only supported values are \" + fluid.keys(fluid.priorityTypes).join(\", \") + \" or numeric\");\n        }\n        if (fixedOnly && lookup === 0) {\n            fluid.fail(\"Constraint type in priority field \" + constraint + \" is not supported in a \" + site + \" record - you must use either a numeric value or first, last\");\n        }\n        return {\n            type: segs[0],\n            target: segs[1]\n        };\n    };\n\n    // unsupported, NON-API function\n    fluid.parsePriority = function (priority, count, fixedOnly, site) {\n        priority = priority || 0;\n        var togo = {\n            count: count || 0,\n            fixed: null,\n            constraint: null,\n            site: site\n        };\n        if (typeof(priority) === \"number\") {\n            togo.fixed = -priority;\n        } else {\n            togo.constraint = fluid.parsePriorityConstraint(priority, fixedOnly, site);\n        }\n        var multiplier = togo.constraint ? fluid.priorityTypes[togo.constraint.type] : 0;\n        if (multiplier !== 0) {\n            var target = togo.constraint.target || \"none\";\n            var extremal = fluid.extremalPriorities[target];\n            if (extremal === undefined) {\n                fluid.fail(\"Unrecognised extremal priority target \" + target + \": the currently supported values are \" + fluid.keys(fluid.extremalPriorities).join(\", \") + \": register your value in fluid.extremalPriorities\");\n            }\n            togo.fixed = multiplier * (fluid.extremePriority + extremal);\n        }\n        if (togo.fixed !== null) {\n            togo.fixed += togo.count / 1024; // use some fractional bits to encode count bias\n        }\n\n        return togo;\n    };\n\n    fluid.renderPriority = function (parsed) {\n        return parsed.constraint ? (parsed.constraint.target ? parsed.constraint.type + \":\" + parsed.constraint.target : parsed.constraint.type ) : Math.floor(parsed.fixed);\n    };\n\n    // unsupported, NON-API function\n    fluid.compareByPriority = function (recA, recB) {\n        if (recA.priority.fixed !== null && recB.priority.fixed !== null) {\n            return recA.priority.fixed - recB.priority.fixed;\n        } else { // sort constraint records to the end\n            // relies on JavaScript boolean coercion rules (ECMA 9.3 toNumber)\n            return (recA.priority.fixed === null) - (recB.priority.fixed === null);\n        }\n    };\n\n    fluid.honourConstraint = function (array, firstConstraint, c) {\n        var constraint = array[c].priority.constraint;\n        var matchIndex = fluid.find(array, function (element, index) {\n            return element.namespace === constraint.target ? index : undefined;\n        }, -1);\n        if (matchIndex === -1) { // TODO: We should report an error during firing if this condition persists until then\n            return true;\n        } else if (matchIndex >= firstConstraint) {\n            return false;\n        } else {\n            var offset = constraint.type === \"after\" ? 1 : 0;\n            var target = matchIndex + offset;\n            var temp = array[c];\n            for (var shift = c; shift >= target; --shift) {\n                array[shift] = array[shift - 1];\n            }\n            array[target] = temp;\n            return true;\n        }\n    };\n\n    // unsupported, NON-API function\n    // Priorities accepted from users have higher numbers representing high priority (sort first) -\n    fluid.sortByPriority = function (array) {\n        fluid.stableSort(array, fluid.compareByPriority);\n\n        var firstConstraint = fluid.find(array, function (element, index) {\n            return element.priority.constraint && fluid.priorityTypes[element.priority.constraint.type] === 0 ? index : undefined;\n        }, array.length);\n\n        while (true) {\n            if (firstConstraint === array.length) {\n                return array;\n            }\n            var oldFirstConstraint = firstConstraint;\n            for (var c = firstConstraint; c < array.length; ++c) {\n                var applied = fluid.honourConstraint(array, firstConstraint, c);\n                if (applied) {\n                    ++firstConstraint;\n                }\n            }\n            if (firstConstraint === oldFirstConstraint) {\n                var holders = array.slice(firstConstraint);\n                fluid.fail(\"Could not find targets for any constraints in \" + holders[0].priority.site + \" \", holders, \": none of the targets (\" + fluid.getMembers(holders, \"priority.constraint.target\").join(\", \") +\n                    \") matched any namespaces of the elements in (\", array.slice(0, firstConstraint), \") - this is caused by either an invalid or circular reference\");\n            }\n        }\n    };\n\n    /** Parse a hash containing prioritised records (for example, as found in a ContextAwareness record) and return a sorted array of these records in priority order.\n     * @param records {Object} A hash of key names to prioritised records. Each record may contain an member `namespace` - if it does not, the namespace will be taken from the\n     * record's key. It may also contain a `String` member `priority` encoding a priority with respect to these namespaces as document at http://docs.fluidproject.org/infusion/development/Priorities.html .\n     * @param name {String} A human-readable name describing the supplied records, which will be incorporated into the message of any error encountered when resolving the priorities\n     * @return [Array] An array of the same elements supplied to `records`, sorted into priority order. The supplied argument `records` will not be modified.\n     */\n    fluid.parsePriorityRecords = function (records, name) {\n        var array = fluid.hashToArray(records, \"namespace\", function (newElement, oldElement, index) {\n            $.extend(newElement, oldElement);\n            newElement.priority = fluid.parsePriority(oldElement.priority, index, false, name);\n        });\n        fluid.sortByPriority(array);\n        return array;\n    };\n\n    fluid.event.identifyListener = function (listener, soft) {\n        if (typeof(listener) !== \"string\" && !listener.$$fluid_guid && !soft) {\n            listener.$$fluid_guid = fluid.allocateGuid();\n        }\n        return listener.$$fluid_guid;\n    };\n\n    // unsupported, NON-API function\n    fluid.event.impersonateListener = function (origListener, newListener) {\n        fluid.event.identifyListener(origListener);\n        newListener.$$fluid_guid = origListener.$$fluid_guid;\n    };\n\n\n    // unsupported, NON-API function\n    fluid.event.sortListeners = function (listeners) {\n        var togo = [];\n        fluid.each(listeners, function (oneNamespace) {\n            var headHard; // notify only the first listener with hard namespace - or else all if all are soft\n            for (var i = 0; i < oneNamespace.length; ++i) {\n                var thisListener = oneNamespace[i];\n                if (!thisListener.softNamespace && !headHard) {\n                    headHard = thisListener;\n                }\n            }\n            if (headHard) {\n                togo.push(headHard);\n            } else {\n                togo = togo.concat(oneNamespace);\n            }\n        });\n        return fluid.sortByPriority(togo);\n    };\n\n    // unsupported, NON-API function\n    fluid.event.resolveListener = function (listener) {\n        var listenerName = listener.globalName || (typeof(listener) === \"string\" ? listener : null);\n        if (listenerName) {\n            var listenerFunc = fluid.getGlobalValue(listenerName);\n            if (!listenerFunc) {\n                fluid.fail(\"Unable to look up name \" + listenerName + \" as a global function\");\n            } else {\n                listener = listenerFunc;\n            }\n        }\n        return listener;\n    };\n\n    /** Generate a name for a component for debugging purposes */\n    fluid.nameComponent = function (that) {\n        return that ? \"component with typename \" + that.typeName + \" and id \" + that.id : \"[unknown component]\";\n    };\n\n    fluid.event.nameEvent = function (that, eventName) {\n        return eventName + \" of \" + fluid.nameComponent(that);\n    };\n\n    /** Construct an \"event firer\" object which can be used to register and deregister\n     * listeners, to which \"events\" can be fired. These events consist of an arbitrary\n     * function signature. General documentation on the Fluid events system is at\n     * http://docs.fluidproject.org/infusion/development/InfusionEventSystem.html .\n     * @param {Object} options - A structure to configure this event firer. Supported fields:\n     *     {String} name - a readable name for this firer to be used in diagnostics and debugging\n     *     {Boolean} preventable - If <code>true</code> the return value of each handler will\n     * be checked for <code>false</code> in which case further listeners will be shortcircuited, and this\n     * will be the return value of fire()\n     */\n    fluid.makeEventFirer = function (options) {\n        options = options || {};\n        var name = options.name || \"<anonymous>\";\n        var that;\n\n        var lazyInit = function () { // Lazy init function to economise on object references for events which are never listened to\n            that.listeners = {};\n            that.byId = {};\n            that.sortedListeners = [];\n            // arguments after 3rd are not part of public API\n            // listener as Object is used only by ChangeApplier to tunnel path, segs, etc as part of its \"spec\"\n            /** Adds a listener to this event.\n              * @param listener {Function|String} The listener function to be added, or a global name resolving to a function. The signature of the function is arbitrary and matches that sent to event.fire()\n              * @param namespace {String} (Optional) A namespace for this listener. At most one listener with a particular namespace can be active on an event at one time. Removing successively added listeners with a particular\n              * namespace will expose previously added ones in a stack idiom\n              * @param priority {String|Number} A priority for the listener relative to others, perhaps expressed with a constraint relative to the namespace of another - see\n              * http://docs.fluidproject.org/infusion/development/Priorities.html\n              */\n            that.addListener = function (listener, namespace, priority, softNamespace, listenerId) {\n                var record;\n                if (that.destroyed) {\n                    fluid.fail(\"Cannot add listener to destroyed event firer \" + that.name);\n                }\n                if (!listener) {\n                    return;\n                }\n                if (fluid.isPlainObject(listener, true) && !fluid.isApplicable(listener)) {\n                    record = listener;\n                    listener = record.listener;\n                    namespace = record.namespace;\n                    priority = record.priority;\n                    softNamespace = record.softNamespace;\n                    listenerId = record.listenerId;\n                }\n                if (typeof(listener) === \"string\") {\n                    listener = {globalName: listener};\n                }\n                var id = listenerId || fluid.event.identifyListener(listener);\n                namespace = namespace || id;\n                record = $.extend(record || {}, {\n                    namespace: namespace,\n                    listener: listener,\n                    softNamespace: softNamespace,\n                    listenerId: listenerId,\n                    priority: fluid.parsePriority(priority, that.sortedListeners.length, false, \"listeners\")\n                });\n                that.byId[id] = record;\n\n                var thisListeners = (that.listeners[namespace] = fluid.makeArray(that.listeners[namespace]));\n                thisListeners[softNamespace ? \"push\" : \"unshift\"] (record);\n\n                that.sortedListeners = fluid.event.sortListeners(that.listeners);\n            };\n            that.addListener.apply(null, arguments);\n        };\n        that = {\n            eventId: fluid.allocateGuid(),\n            name: name,\n            ownerId: options.ownerId,\n            typeName: \"fluid.event.firer\",\n            destroy: function () {\n                that.destroyed = true;\n            },\n            addListener: function () {\n                lazyInit.apply(null, arguments);\n            },\n            /** Removes a listener previously registered with this event.\n              * @param toremove {Function|String} Either the listener function, the namespace of a listener (in which case a previous listener with that namespace may be uncovered) or an id sent to the undocumented\n              * `listenerId` argument of `addListener\n              */\n            // Can be supplied either listener, namespace, or id (which may match either listener function's guid or original listenerId argument)\n            removeListener: function (listener) {\n                if (!that.listeners) { return; }\n                var namespace, id, record;\n                if (typeof (listener) === \"string\") {\n                    namespace = listener;\n                    record = that.listeners[namespace];\n                    if (!record) { // it was an id and not a namespace - take the namespace from its record later\n                        id = namespace;\n                        namespace = null;\n                    }\n                }\n                else if (typeof(listener) === \"function\") {\n                    id = fluid.event.identifyListener(listener, true);\n                    if (!id) {\n                        fluid.fail(\"Cannot remove unregistered listener function \", listener, \" from event \" + that.name);\n                    }\n                }\n                var rec = that.byId[id];\n                var softNamespace = rec && rec.softNamespace;\n                namespace = namespace || (rec && rec.namespace) || id;\n                delete that.byId[id];\n                record = that.listeners[namespace];\n                if (record) {\n                    if (softNamespace) {\n                        fluid.remove_if(record, function (thisLis) {\n                            return thisLis.listener.$$fluid_guid === id || thisLis.listenerId === id;\n                        });\n                    } else {\n                        record.shift();\n                    }\n                    if (record.length === 0) {\n                        delete that.listeners[namespace];\n                    }\n                }\n                that.sortedListeners = fluid.event.sortListeners(that.listeners);\n            },\n            /** Fires this event to all listeners which are active. They will be notified in order of priority. The signature of this method is free **/\n            fire: function () {\n                var listeners = that.sortedListeners;\n                if (!listeners || that.destroyed) { return; }\n                if (fluid.passLogLevel(fluid.logLevel.TRACE)) {\n                    fluid.log(fluid.logLevel.TRACE, \"Firing event \" + name + \" to list of \" + listeners.length + \" listeners\");\n                }\n                for (var i = 0; i < listeners.length; ++i) {\n                    var lisrec = listeners[i];\n                    lisrec.listener = fluid.event.resolveListener(lisrec.listener);\n                    var listener = lisrec.listener;\n                    var ret = listener.apply(null, arguments);\n                    var value;\n                    if (options.preventable && ret === false || that.destroyed) {\n                        value = false;\n                    }\n                    if (value !== undefined) {\n                        return value;\n                    }\n                }\n            }\n        };\n        return that;\n    };\n\n    // unsupported, NON-API function\n    // Fires to an event which may not be instantiated (in which case no-op) - primary modern usage is to resolve FLUID-5904\n    fluid.fireEvent = function (component, eventName, args) {\n        var firer = component.events[eventName];\n        if (firer) {\n            firer.fire.apply(null, fluid.makeArray(args));\n        }\n    };\n\n    // unsupported, NON-API function\n    fluid.event.addListenerToFirer = function (firer, value, namespace, wrapper) {\n        wrapper = wrapper || fluid.identity;\n        if (fluid.isArrayable(value)) {\n            for (var i = 0; i < value.length; ++i) {\n                fluid.event.addListenerToFirer(firer, value[i], namespace, wrapper);\n            }\n        } else if (typeof (value) === \"function\" || typeof (value) === \"string\") {\n            wrapper(firer).addListener(value, namespace);\n        } else if (value && typeof (value) === \"object\") {\n            wrapper(firer).addListener(value.listener, namespace || value.namespace, value.priority, value.softNamespace, value.listenerId);\n        }\n    };\n\n    // unsupported, NON-API function - non-IOC passthrough\n    fluid.event.resolveListenerRecord = function (records) {\n        return { records: records };\n    };\n\n    fluid.expandImmediate = function (material) {\n        fluid.fail(\"fluid.expandImmediate could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor \" + material);\n    };\n\n    // unsupported, NON-API function\n    fluid.mergeListeners = function (that, events, listeners) {\n        fluid.each(listeners, function (value, key) {\n            var firer, namespace;\n            if (fluid.isIoCReference(key)) {\n                firer = fluid.expandImmediate(key, that);\n                if (!firer) {\n                    fluid.fail(\"Error in listener record: key \" + key + \" could not be looked up to an event firer - did you miss out \\\"events.\\\" when referring to an event firer?\");\n                }\n            } else {\n                var keydot = key.indexOf(\".\");\n\n                if (keydot !== -1) {\n                    namespace = key.substring(keydot + 1);\n                    key = key.substring(0, keydot);\n                }\n                if (!events[key]) {\n                    fluid.fail(\"Listener registered for event \" + key + \" which is not defined for this component\");\n                }\n                firer = events[key];\n            }\n            var record = fluid.event.resolveListenerRecord(value, that, key, namespace, true);\n            fluid.event.addListenerToFirer(firer, record.records, namespace, record.adderWrapper);\n        });\n    };\n\n    // unsupported, NON-API function\n    fluid.eventFromRecord = function (eventSpec, eventKey, that) {\n        var isIoCEvent = eventSpec && (typeof (eventSpec) !== \"string\" || fluid.isIoCReference(eventSpec));\n        var event;\n        if (isIoCEvent) {\n            if (!fluid.event.resolveEvent) {\n                fluid.fail(\"fluid.event.resolveEvent could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor \",\n                    eventSpec);\n            } else {\n                event = fluid.event.resolveEvent(that, eventKey, eventSpec);\n            }\n        } else {\n            event = fluid.makeEventFirer({\n                name: fluid.event.nameEvent(that, eventKey),\n                preventable: eventSpec === \"preventable\",\n                ownerId: that.id\n            });\n        }\n        return event;\n    };\n\n    // unsupported, NON-API function - this is patched from FluidIoC.js\n    fluid.instantiateFirers = function (that, options) {\n        fluid.each(options.events, function (eventSpec, eventKey) {\n            that.events[eventKey] = fluid.eventFromRecord(eventSpec, eventKey, that);\n        });\n    };\n\n    // unsupported, NON-API function\n    fluid.mergeListenerPolicy = function (target, source, key) {\n        if (typeof (key) !== \"string\") {\n            fluid.fail(\"Error in listeners declaration - the keys in this structure must resolve to event names - got \" + key + \" from \", source);\n        }\n        // cf. triage in mergeListeners\n        var hasNamespace = !fluid.isIoCReference(key) && key.indexOf(\".\") !== -1;\n        return hasNamespace ? (source || target) : fluid.arrayConcatPolicy(target, source);\n    };\n\n    // unsupported, NON-API function\n    fluid.makeMergeListenersPolicy = function (merger, modelRelay) {\n        return function (target, source) {\n            target = target || {};\n            if (modelRelay && (fluid.isArrayable(source) || typeof(source.target) === \"string\")) { // This form allowed for modelRelay\n                target[\"\"] = merger(target[\"\"], source, \"\");\n            } else {\n                fluid.each(source, function (listeners, key) {\n                    target[key] = merger(target[key], listeners, key);\n                });\n            }\n            return target;\n        };\n    };\n\n    fluid.validateListenersImplemented = function (that) {\n        var errors = [];\n        fluid.each(that.events, function (event, name) {\n            fluid.each(event.sortedListeners, function (lisrec) {\n                if (lisrec.listener === fluid.notImplemented || lisrec.listener.globalName === \"fluid.notImplemented\") {\n                    errors.push({name: name, namespace: lisrec.namespace, componentSource: fluid.model.getSimple(that.options.listeners, [name + \".\" + lisrec.namespace, 0, \"componentSource\"])});\n                }\n            });\n        });\n        return errors;\n    };\n\n    /** Removes duplicated and empty elements from an already sorted array **/\n    fluid.unique = function (array) {\n        return fluid.remove_if(array, function (element, i) {\n            return !element || i > 0 && element === array[i - 1];\n        });\n    };\n\n    fluid.arrayConcatPolicy = function (target, source) {\n        return fluid.makeArray(target).concat(fluid.makeArray(source));\n    };\n\n    /*** FLUID ERROR SYSTEM ***/\n\n    fluid.failureEvent = fluid.makeEventFirer({name: \"failure event\"});\n\n    fluid.failureEvent.addListener(fluid.builtinFail, \"fail\");\n    fluid.failureEvent.addListener(fluid.logFailure, \"log\", \"before:fail\");\n\n    /**\n     * Configure the behaviour of fluid.fail by pushing or popping a disposition record onto a stack.\n     * @param {Number|Function} condition\n     & Supply either a function, which will be called with two arguments, args (the complete arguments to\n     * fluid.fail) and activity, an array of strings describing the current framework invocation state.\n     * Or, the argument may be the number <code>-1</code> indicating that the previously supplied disposition should\n     * be popped off the stack\n     */\n    fluid.pushSoftFailure = function (condition) {\n        if (typeof (condition) === \"function\") {\n            fluid.failureEvent.addListener(condition, \"fail\");\n        } else if (condition === -1) {\n            fluid.failureEvent.removeListener(\"fail\");\n        } else if (typeof(condition) === \"boolean\") {\n            fluid.fail(\"pushSoftFailure with boolean value is no longer supported\");\n        }\n    };\n\n    /*** DEFAULTS AND OPTIONS MERGING SYSTEM ***/\n\n    // A function to tag the types of all Fluid components\n    fluid.componentConstructor = function () {};\n\n    /** Create a \"type tag\" component with no state but simply a type name and id. The most\n     *  minimal form of Fluid component */\n    // No longer a publically supported function - we don't abolish this because it is too annoying to prevent\n    // circularity during the bootup of the IoC system if we try to construct full components before it is complete\n    // unsupported, non-API function\n    fluid.typeTag = function (name) {\n        var that = Object.create(fluid.componentConstructor.prototype);\n        that.typeName = name;\n        that.id = fluid.allocateGuid();\n        return that;\n    };\n\n    var gradeTick = 1; // tick counter for managing grade cache invalidation\n    var gradeTickStore = {};\n\n    fluid.defaultsStore = {};\n\n    // unsupported, NON-API function\n    // Recursively builds up \"gradeStructure\" in first argument. 2nd arg receives gradeNames to be resolved, with stronger grades at right (defaults order)\n    // builds up gradeStructure.gradeChain pushed from strongest to weakest (reverse defaults order)\n    fluid.resolveGradesImpl = function (gs, gradeNames) {\n        gradeNames = fluid.makeArray(gradeNames);\n        for (var i = gradeNames.length - 1; i >= 0; --i) { // from stronger to weaker\n            var gradeName = gradeNames[i];\n            if (gradeName && !gs.gradeHash[gradeName]) {\n                var isDynamic = fluid.isIoCReference(gradeName);\n                var options = (isDynamic ? null : fluid.rawDefaults(gradeName)) || {};\n                var thisTick = gradeTickStore[gradeName] || (gradeTick - 1); // a nonexistent grade is recorded as just previous to current\n                gs.lastTick = Math.max(gs.lastTick, thisTick);\n                gs.gradeHash[gradeName] = true;\n                gs.gradeChain.push(gradeName);\n                var oGradeNames = fluid.makeArray(options.gradeNames);\n                for (var j = oGradeNames.length - 1; j >= 0; --j) { // from stronger to weaker grades\n                    // TODO: in future, perhaps restore mergedDefaultsCache function of storing resolved gradeNames for bare grades\n                    fluid.resolveGradesImpl(gs, oGradeNames[j]);\n                }\n            }\n        }\n        return gs;\n    };\n\n    // unsupported, NON-API function\n    fluid.resolveGradeStructure = function (defaultName, gradeNames) {\n        var gradeStruct = {\n            lastTick: 0,\n            gradeChain: [],\n            gradeHash: {}\n        };\n        // stronger grades appear to the right in defaults - dynamic grades are stronger still - FLUID-5085\n        // we supply these to resolveGradesImpl with strong grades at the right\n        fluid.resolveGradesImpl(gradeStruct, [defaultName].concat(fluid.makeArray(gradeNames)));\n        gradeStruct.gradeChain.reverse(); // reverse into defaults order\n        return gradeStruct;\n    };\n\n    fluid.hasGrade = function (options, gradeName) {\n        return !options || !options.gradeNames ? false : fluid.contains(options.gradeNames, gradeName);\n    };\n\n    // unsupported, NON-API function\n    fluid.resolveGrade = function (defaults, defaultName, gradeNames) {\n        var gradeStruct = fluid.resolveGradeStructure(defaultName, gradeNames);\n        // TODO: Fault in the merging algorithm does not actually treat arguments as immutable - failure in FLUID-5082 tests\n        // due to listeners mergePolicy\n        var mergeArgs = fluid.transform(gradeStruct.gradeChain, fluid.rawDefaults, fluid.copy);\n        fluid.remove_if(mergeArgs, function (options) {\n            return !options;\n        });\n        var mergePolicy = {};\n        for (var i = 0; i < mergeArgs.length; ++i) {\n            if (mergeArgs[i] && mergeArgs[i].mergePolicy) {\n                mergePolicy = $.extend(true, mergePolicy, mergeArgs[i].mergePolicy);\n            }\n        }\n        mergeArgs = [mergePolicy, {}].concat(mergeArgs);\n        var mergedDefaults = fluid.merge.apply(null, mergeArgs);\n        mergedDefaults.gradeNames = gradeStruct.gradeChain; // replace these since mergePolicy version is inadequate\n        fluid.freezeRecursive(mergedDefaults);\n        return {defaults: mergedDefaults, lastTick: gradeStruct.lastTick};\n    };\n\n    fluid.mergedDefaultsCache = {};\n\n    // unsupported, NON-API function\n    fluid.gradeNamesToKey = function (defaultName, gradeNames) {\n        return defaultName + \"|\" + gradeNames.join(\"|\");\n    };\n\n    // unsupported, NON-API function\n    // The main entry point to acquire the fully merged defaults for a combination of defaults plus mixin grades - from FluidIoC.js as well as recursively within itself\n    fluid.getMergedDefaults = function (defaultName, gradeNames) {\n        gradeNames = fluid.makeArray(gradeNames);\n        var key = fluid.gradeNamesToKey(defaultName, gradeNames);\n        var mergedDefaults = fluid.mergedDefaultsCache[key];\n        if (mergedDefaults) {\n            var lastTick = 0; // check if cache should be invalidated through real latest tick being later than the one stored\n            var searchGrades = mergedDefaults.defaults.gradeNames || [];\n            for (var i = 0; i < searchGrades.length; ++i) {\n                lastTick = Math.max(lastTick, gradeTickStore[searchGrades[i]] || 0);\n            }\n            if (lastTick > mergedDefaults.lastTick) {\n                if (fluid.passLogLevel(fluid.logLevel.TRACE)) {\n                    fluid.log(fluid.logLevel.TRACE, \"Clearing cache for component \" + defaultName + \" with gradeNames \", searchGrades);\n                }\n                mergedDefaults = null;\n            }\n        }\n        if (!mergedDefaults) {\n            var defaults = fluid.rawDefaults(defaultName);\n            if (!defaults) {\n                return defaults;\n            }\n            mergedDefaults = fluid.mergedDefaultsCache[key] = fluid.resolveGrade(defaults, defaultName, gradeNames);\n        }\n        return mergedDefaults.defaults;\n    };\n\n    // unsupported, NON-API function\n    /** Upgrades an element of an IoC record which designates a function to prepare for a {func, args} representation.\n     * @param rec {Any} If the record is of a primitive type,\n     * @param key {String} The key in the returned record to hold the function, this will default to `funcName` if `rec` is a `string` *not*\n     * holding an IoC reference, or `func` otherwise\n     * @return {Object} The original `rec` if it was not of primitive type, else a record holding { key : rec } if it was of primitive type.\n     */\n\n    fluid.upgradePrimitiveFunc = function (rec, key) {\n        if (rec && fluid.isPrimitive(rec)) {\n            var togo = {};\n            togo[key || (typeof(rec) === \"string\" && rec.charAt(0) !== \"{\" ? \"funcName\" : \"func\")] = rec;\n            togo.args = fluid.NO_VALUE;\n            return togo;\n        } else {\n            return rec;\n        }\n    };\n\n    // unsupported, NON-API function\n    // Modify supplied options record to include \"componentSource\" annotation required by FLUID-5082\n    // TODO: This function really needs to act recursively in order to catch listeners registered for subcomponents - fix with FLUID-5614\n    fluid.annotateListeners = function (componentName, options) {\n        options.listeners = fluid.transform(options.listeners, function (record) {\n            var togo = fluid.makeArray(record);\n            return fluid.transform(togo, function (onerec) {\n                onerec = fluid.upgradePrimitiveFunc(onerec, \"listener\");\n                onerec.componentSource = componentName;\n                return onerec;\n            });\n        });\n        options.invokers = fluid.transform(options.invokers, function (record) {\n            record = fluid.upgradePrimitiveFunc(record);\n            if (record) {\n                record.componentSource = componentName;\n            }\n            return record;\n        });\n    };\n\n    // unsupported, NON-API function\n    fluid.rawDefaults = function (componentName) {\n        var entry = fluid.defaultsStore[componentName];\n        return entry && entry.options;\n    };\n\n    // unsupported, NON-API function\n    fluid.registerRawDefaults = function (componentName, options) {\n        fluid.pushActivity(\"registerRawDefaults\", \"registering defaults for grade %componentName with options %options\",\n            {componentName: componentName, options: options});\n        var optionsCopy = fluid.expandCompact ? fluid.expandCompact(options) : fluid.copy(options);\n        fluid.annotateListeners(componentName, optionsCopy);\n        var callerInfo = fluid.getCallerInfo && fluid.getCallerInfo(6);\n        fluid.defaultsStore[componentName] = {\n            options: optionsCopy,\n            callerInfo: callerInfo\n        };\n        gradeTickStore[componentName] = gradeTick++;\n        fluid.popActivity();\n    };\n\n    // unsupported, NON-API function\n    fluid.doIndexDefaults = function (defaultName, defaults, index, indexSpec) {\n        var requiredGrades = fluid.makeArray(indexSpec.gradeNames);\n        for (var i = 0; i < requiredGrades.length; ++i) {\n            if (!fluid.hasGrade(defaults, requiredGrades[i])) { return; }\n        }\n        var indexFunc = typeof(indexSpec.indexFunc) === \"function\" ? indexSpec.indexFunc : fluid.getGlobalValue(indexSpec.indexFunc);\n        var keys = indexFunc(defaults) || [];\n        for (var j = 0; j < keys.length; ++j) {\n            fluid.pushArray(index, keys[j], defaultName);\n        }\n    };\n\n    /** Evaluates an index specification over all the defaults records registered into the system.\n     * @param indexName {String} The name of this index record (currently ignored)\n     * @param indexSpec {Object} Specification of the index to be performed - fields:\n     *     gradeNames: {String/Array of String} List of grades that must be matched by this indexer\n     *     indexFunc:  {String/Function} An index function which accepts a defaults record and returns an array of keys\n     * @return A structure indexing keys to arrays of matched gradenames\n     */\n    // The expectation is that this function is extremely rarely used with respect to registration of defaults\n    // in the system, so currently we do not make any attempts to cache the results. The field \"indexName\" is\n    // supplied in case a future implementation chooses to implement caching\n    fluid.indexDefaults = function (indexName, indexSpec) {\n        var index = {};\n        for (var defaultName in fluid.defaultsStore) {\n            var defaults = fluid.getMergedDefaults(defaultName);\n            fluid.doIndexDefaults(defaultName, defaults, index, indexSpec);\n        }\n        return index;\n    };\n\n    /**\n     * Retrieves and stores a grade's configuration centrally.\n     * @param {String} gradeName the name of the grade whose options are to be read or written\n     * @param {Object} (optional) an object containing the options to be set\n     */\n\n    fluid.defaults = function (componentName, options) {\n        if (options === undefined) {\n            return fluid.getMergedDefaults(componentName);\n        }\n        else {\n            if (options && options.options) {\n                fluid.fail(\"Probable error in options structure for \" + componentName +\n                    \" with option named \\\"options\\\" - perhaps you meant to write these options at top level in fluid.defaults? - \", options);\n            }\n            fluid.registerRawDefaults(componentName, options);\n            var gradedDefaults = fluid.getMergedDefaults(componentName);\n            if (!fluid.hasGrade(gradedDefaults, \"fluid.function\")) {\n                fluid.makeComponentCreator(componentName);\n            }\n        }\n    };\n\n    fluid.makeComponentCreator = function (componentName) {\n        var creator = function () {\n            var defaults = fluid.getMergedDefaults(componentName);\n            if (!defaults.gradeNames || defaults.gradeNames.length === 0) {\n                fluid.fail(\"Cannot make component creator for type \" + componentName + \" which does not have any gradeNames defined\");\n            } else if (!defaults.initFunction) {\n                var blankGrades = [];\n                for (var i = 0; i < defaults.gradeNames.length; ++i) {\n                    var gradeName = defaults.gradeNames[i];\n                    var rawDefaults = fluid.rawDefaults(gradeName);\n                    if (!rawDefaults) {\n                        blankGrades.push(gradeName);\n                    }\n                }\n                if (blankGrades.length === 0) {\n                    fluid.fail(\"Cannot make component creator for type \" + componentName + \" which does not have an initFunction defined\");\n                } else {\n                    fluid.fail(\"The grade hierarchy of component with type \" + componentName + \" is incomplete - it inherits from the following grade(s): \" +\n                     blankGrades.join(\", \") + \" for which the grade definitions are corrupt or missing. Please check the files which might include these \" +\n                     \"grades and ensure they are readable and have been loaded by this instance of Infusion\");\n                }\n            } else {\n                return fluid.initComponent(componentName, arguments);\n            }\n        };\n        var existing = fluid.getGlobalValue(componentName);\n        if (existing) {\n            $.extend(creator, existing);\n        }\n        fluid.setGlobalValue(componentName, creator);\n    };\n\n    fluid.emptyPolicy = fluid.freezeRecursive({});\n    // unsupported, NON-API function\n    fluid.derefMergePolicy = function (policy) {\n        return (policy ? policy[\"*\"] : fluid.emptyPolicy) || fluid.emptyPolicy;\n    };\n\n    // unsupported, NON-API function\n    fluid.compileMergePolicy = function (mergePolicy) {\n        var builtins = {}, defaultValues = {};\n        var togo = {builtins: builtins, defaultValues: defaultValues};\n\n        if (!mergePolicy) {\n            return togo;\n        }\n        fluid.each(mergePolicy, function (value, key) {\n            var parsed = {}, builtin = true;\n            if (typeof(value) === \"function\") {\n                parsed.func = value;\n            }\n            else if (typeof(value) === \"object\") {\n                parsed = value;\n            }\n            else if (!fluid.isDefaultValueMergePolicy(value)) {\n                var split = value.split(/\\s*,\\s*/);\n                for (var i = 0; i < split.length; ++i) {\n                    parsed[split[i]] = true;\n                }\n            }\n            else {\n                // Convert to ginger self-reference - NB, this can only be parsed by IoC\n                fluid.set(defaultValues, key, \"{that}.options.\" + value);\n                togo.hasDefaults = true;\n                builtin = false;\n            }\n            if (builtin) {\n                fluid.set(builtins, fluid.composePath(key, \"*\"), parsed);\n            }\n        });\n        return togo;\n    };\n\n    // TODO: deprecate this method of detecting default value merge policies before 1.6 in favour of\n    // explicit typed records a la ModelTransformations\n    // unsupported, NON-API function\n    fluid.isDefaultValueMergePolicy = function (policy) {\n        return typeof(policy) === \"string\" &&\n            (policy.indexOf(\",\") === -1 && !/replace|nomerge|noexpand/.test(policy));\n    };\n\n    // unsupported, NON-API function\n    fluid.mergeOneImpl = function (thisTarget, thisSource, j, sources, newPolicy, i, segs) {\n        var togo = thisTarget;\n\n        var primitiveTarget = fluid.isPrimitive(thisTarget);\n\n        if (thisSource !== undefined) {\n            if (!newPolicy.func && thisSource !== null && fluid.isPlainObject(thisSource) && !newPolicy.nomerge) {\n                if (primitiveTarget) {\n                    togo = thisTarget = fluid.freshContainer(thisSource);\n                }\n                // recursion is now external? We can't do it from here since sources are not all known\n                // options.recurse(thisTarget, i + 1, segs, sources, newPolicyHolder, options);\n            } else {\n                sources[j] = undefined;\n                if (newPolicy.func) {\n                    togo = newPolicy.func.call(null, thisTarget, thisSource, segs[i - 1], segs, i); // NB - change in this mostly unused argument\n                } else {\n                    togo = thisSource;\n                }\n            }\n        }\n        return togo;\n    };\n    // NB - same quadratic worry about these as in FluidIoC in the case the RHS trundler is live -\n    // since at each regeneration step driving the RHS we are discarding the \"cursor arguments\" these\n    // would have to be regenerated at each step - although in practice this can only happen once for\n    // each object for all time, since after first resolution it will be concrete.\n    function regenerateCursor(source, segs, limit, sourceStrategy) {\n        for (var i = 0; i < limit; ++i) {\n            source = sourceStrategy(source, segs[i], i, fluid.makeArray(segs)); // copy for FLUID-5243\n        }\n        return source;\n    }\n\n    function regenerateSources(sources, segs, limit, sourceStrategies) {\n        var togo = [];\n        for (var i = 0; i < sources.length; ++i) {\n            var thisSource = regenerateCursor(sources[i], segs, limit, sourceStrategies[i]);\n            if (thisSource !== undefined) {\n                togo.push(thisSource);\n            }\n        }\n        return togo;\n    }\n\n    // unsupported, NON-API function\n    fluid.fetchMergeChildren = function (target, i, segs, sources, mergePolicy, options) {\n        var thisPolicy = fluid.derefMergePolicy(mergePolicy);\n        for (var j = sources.length - 1; j >= 0; --j) { // this direction now irrelevant - control is in the strategy\n            var source = sources[j];\n            // NB - this detection relies on strategy return being complete objects - which they are\n            // although we need to set up the roots separately. We need to START the process of evaluating each\n            // object root (sources) COMPLETELY, before we even begin! Even if the effect of this is to cause a\n            // dispatch into ourselves almost immediately. We can do this because we can take control over our\n            // TARGET objects and construct them early. Even if there is a self-dispatch, it will be fine since it is\n            // DIRECTED and so will not trouble our \"slow\" detection of properties. After all self-dispatches end, control\n            // will THEN return to \"evaluation of arguments\" (expander blocks) and only then FINALLY to this \"slow\"\n            // traversal of concrete properties to do the final merge.\n            if (source !== undefined) {\n                fluid.each(source, function (newSource, name) {\n                    var childPolicy = fluid.concreteTrundler(mergePolicy, name);\n                    // 2nd arm of condition is an Outrageous bodge to fix FLUID-4930 further. See fluid.tests.retrunking in FluidIoCTests.js\n                    // We make extra use of the old \"evaluateFully\" flag and ensure to flood any trunk objects again during final \"initter\" phase of merging.\n                    // The problem is that a custom mergePolicy may have replaced the system generated trunk with a differently structured object which we must not\n                    // corrupt. This work should properly be done with a set of dedicated provenance/progress records in a separate structure\n                    if (!(name in target) || (options.evaluateFully && childPolicy === undefined && !fluid.isPrimitive(target[name]))) { // only request each new target key once -- all sources will be queried per strategy\n                        segs[i] = name;\n                        options.strategy(target, name, i + 1, segs, sources, mergePolicy);\n                    }\n                });\n                if (thisPolicy.replace) { // this branch primarily deals with a policy of replace at the root\n                    break;\n                }\n            }\n        }\n        return target;\n    };\n\n    // A special marker object which will be placed at a current evaluation point in the tree in order\n    // to protect against circular evaluation\n    fluid.inEvaluationMarker = Object.freeze({\"__CURRENTLY_IN_EVALUATION__\": true});\n\n    // A path depth above which the core \"process strategies\" will bail out, assuming that the\n    // structure has become circularly linked. Helpful in environments such as Firebug which will\n    // kill the browser process if they happen to be open when a stack overflow occurs. Also provides\n    // a more helpful diagnostic.\n    fluid.strategyRecursionBailout = 50;\n\n    // unsupported, NON-API function\n    fluid.makeMergeStrategy = function (options) {\n        var strategy = function (target, name, i, segs, sources, policy) {\n            if (i > fluid.strategyRecursionBailout) {\n                fluid.fail(\"Overflow/circularity in options merging, current path is \", segs, \" at depth \" , i, \" - please protect components from merging using the \\\"nomerge\\\" merge policy\");\n            }\n            if (fluid.isPrimitive(target)) { // For \"use strict\"\n                return undefined; // Review this after FLUID-4925 since the only trigger is in slow component lookahead\n            }\n            if (fluid.isTracing) {\n                fluid.tracing.pathCount.push(fluid.path(segs.slice(0, i)));\n            }\n\n            var oldTarget;\n            if (name in target) { // bail out if our work has already been done\n                oldTarget = target[name];\n                if (!options.evaluateFully) { // see notes on this hack in \"initter\" - early attempt to deal with FLUID-4930\n                    return oldTarget;\n                }\n            }\n            else {\n                if (target !== fluid.inEvaluationMarker) { // TODO: blatant \"coding to the test\" - this enables the simplest \"re-trunking\" in\n                    // FluidIoCTests to function. In practice, we need to throw away this implementation entirely in favour of the\n                    // \"iterative deepening\" model coming with FLUID-4925\n                    target[name] = fluid.inEvaluationMarker;\n                }\n            }\n            if (sources === undefined) { // recover our state in case this is an external entry point\n                segs = fluid.makeArray(segs); // avoid trashing caller's segs\n                sources = regenerateSources(options.sources, segs, i - 1, options.sourceStrategies);\n                policy = regenerateCursor(options.mergePolicy, segs, i - 1, fluid.concreteTrundler);\n            }\n            var newPolicyHolder = fluid.concreteTrundler(policy, name);\n            var newPolicy = fluid.derefMergePolicy(newPolicyHolder);\n\n            var start, limit, mul;\n            if (newPolicy.replace) {\n                start = 1 - sources.length; limit = 0; mul = -1;\n            }\n            else {\n                start = 0; limit = sources.length - 1; mul = +1;\n            }\n            var newSources = [];\n            var thisTarget;\n\n            for (var j = start; j <= limit; ++j) { // TODO: try to economise on this array and on gaps\n                var k = mul * j;\n                var thisSource = options.sourceStrategies[k](sources[k], name, i, segs); // Run the RH algorithm in \"driving\" mode\n                if (thisSource !== undefined) {\n                    if (!fluid.isPrimitive(thisSource)) {\n                        newSources[k] = thisSource;\n                    }\n                    if (oldTarget === undefined) {\n                        if (mul === -1) { // if we are going backwards, it is \"replace\"\n                            thisTarget = target[name] = thisSource;\n                            break;\n                        }\n                        else {\n                            // write this in early, since early expansions may generate a trunk object which is written in to by later ones\n                            thisTarget = fluid.mergeOneImpl(thisTarget, thisSource, j, newSources, newPolicy, i, segs, options);\n                            if (target !== fluid.inEvaluationMarker) {\n                                target[name] = thisTarget;\n                            }\n                        }\n                    }\n                }\n            }\n            if (oldTarget !== undefined) {\n                thisTarget = oldTarget;\n            }\n            if (newSources.length > 0) {\n                if (fluid.isPlainObject(thisTarget)) {\n                    fluid.fetchMergeChildren(thisTarget, i, segs, newSources, newPolicyHolder, options);\n                }\n            }\n            if (oldTarget === undefined && newSources.length === 0) {\n                delete target[name]; // remove the evaluation marker - nothing to evaluate\n            }\n            return thisTarget;\n        };\n        options.strategy = strategy;\n        return strategy;\n    };\n\n    // A simple stand-in for \"fluid.get\" where the material is covered by a single strategy\n    fluid.driveStrategy = function (root, pathSegs, strategy) {\n        pathSegs = fluid.makeArray(pathSegs);\n        for (var i = 0; i < pathSegs.length; ++i) {\n            if (!root) {\n                return undefined;\n            }\n            root = strategy(root, pathSegs[i], i + 1, pathSegs);\n        }\n        return root;\n    };\n\n    // A very simple \"new inner trundler\" that just performs concrete property access\n    // Note that every \"strategy\" is also a \"trundler\" of this type, considering just the first two arguments\n    fluid.concreteTrundler = function (source, seg) {\n        return !source ? undefined : source[seg];\n    };\n\n    /** Merge a collection of options structures onto a target, following an optional policy.\n     * This method is now used only for the purpose of merging \"dead\" option documents in order to\n     * cache graded component defaults. Component option merging is now performed by the\n     * fluid.makeMergeOptions pathway which sets up a deferred merging process. This function\n     * will not be removed in the Fluid 2.0 release but it is recommended that users not call it\n     * directly.\n     * The behaviour of this function is explained more fully on\n     * the page http://wiki.fluidproject.org/display/fluid/Options+Merging+for+Fluid+Components .\n     * @param policy {Object/String} A \"policy object\" specifiying the type of merge to be performed.\n     * If policy is of type {String} it should take on the value \"replace\" representing\n     * a static policy. If it is an\n     * Object, it should contain a mapping of EL paths onto these String values, representing a\n     * fine-grained policy. If it is an Object, the values may also themselves be EL paths\n     * representing that a default value is to be taken from that path.\n     * @param options1, options2, .... {Object} an arbitrary list of options structure which are to\n     * be merged together. These will not be modified.\n     */\n\n    fluid.merge = function (policy /*, ... sources */) {\n        var sources = Array.prototype.slice.call(arguments, 1);\n        var compiled = fluid.compileMergePolicy(policy).builtins;\n        var options = fluid.makeMergeOptions(compiled, sources, {});\n        options.initter();\n        return options.target;\n    };\n\n    // unsupported, NON-API function\n    fluid.simpleGingerBlock = function (source, recordType) {\n        var block = {\n            target: source,\n            simple: true,\n            strategy: fluid.concreteTrundler,\n            initter: fluid.identity,\n            recordType: recordType,\n            priority: fluid.mergeRecordTypes[recordType]\n        };\n        return block;\n    };\n\n    // unsupported, NON-API function\n    fluid.makeMergeOptions = function (policy, sources, userOptions) {\n        // note - we close over the supplied policy as a shared object reference - it will be updated during discovery\n        var options = {\n            mergePolicy: policy,\n            sources: sources\n        };\n        options = $.extend(options, userOptions);\n        options.target = options.target || fluid.freshContainer(options.sources[0]);\n        options.sourceStrategies = options.sourceStrategies || fluid.generate(options.sources.length, fluid.concreteTrundler);\n        options.initter = function () {\n            // This hack is necessary to ensure that the FINAL evaluation doesn't balk when discovering a trunk path which was already\n            // visited during self-driving via the expander. This bi-modality is sort of rubbish, but we currently don't have \"room\"\n            // in the strategy API to express when full evaluation is required - and the \"flooding API\" is not standardised. See FLUID-4930\n            options.evaluateFully = true;\n            fluid.fetchMergeChildren(options.target, 0, [], options.sources, options.mergePolicy, options);\n        };\n        fluid.makeMergeStrategy(options);\n        return options;\n    };\n\n    // unsupported, NON-API function\n    fluid.transformOptions = function (options, transRec) {\n        fluid.expect(\"Options transformation record\", transRec, [\"transformer\", \"config\"]);\n        var transFunc = fluid.getGlobalValue(transRec.transformer);\n        return transFunc.call(null, options, transRec.config);\n    };\n\n    // unsupported, NON-API function\n    fluid.findMergeBlocks = function (mergeBlocks, recordType) {\n        return fluid.remove_if(fluid.makeArray(mergeBlocks), function (block) { return block.recordType !== recordType; });\n    };\n\n    // unsupported, NON-API function\n    fluid.transformOptionsBlocks = function (mergeBlocks, transformOptions, recordTypes) {\n        fluid.each(recordTypes, function (recordType) {\n            var blocks = fluid.findMergeBlocks(mergeBlocks, recordType);\n            fluid.each(blocks, function (block) {\n                var source = block.source ? \"source\" : \"target\"; // TODO: Problem here with irregular presentation of options which consist of a reference in their entirety\n                block[block.simple || source === \"target\" ? \"target\" : \"source\"] = fluid.transformOptions(block[source], transformOptions);\n            });\n        });\n    };\n\n    // unsupported, NON-API function\n    fluid.dedupeDistributionNamespaces = function (mergeBlocks) { // to implement FLUID-5824\n        var byNamespace = {};\n        fluid.remove_if(mergeBlocks, function (mergeBlock) {\n            var ns = mergeBlock.namespace;\n            if (ns) {\n                if (byNamespace[ns] && byNamespace[ns] !== mergeBlock.contextThat.id) {  // source check for FLUID-5835\n                    return true;\n                } else {\n                    byNamespace[ns] = mergeBlock.contextThat.id;\n                }\n            }\n        });\n    };\n\n    // unsupported, NON-API function\n    fluid.deliverOptionsStrategy = fluid.identity;\n    fluid.computeComponentAccessor = fluid.identity;\n    fluid.computeDynamicComponents = fluid.identity;\n\n    // The types of merge record the system supports, with the weakest records first\n    fluid.mergeRecordTypes = {\n        defaults:           1000,\n        defaultValueMerge:  900,\n        subcomponentRecord: 800,\n        user:               700,\n        distribution:       100 // and above\n    };\n\n    // Utility used in the framework (primarily with distribution assembly), unconnected with new ChangeApplier\n    // unsupported, NON-API function\n    fluid.model.applyChangeRequest = function (model, request) {\n        var segs = request.segs;\n        if (segs.length === 0) {\n            if (request.type === \"ADD\") {\n                $.extend(true, model, request.value);\n            } else {\n                fluid.clear(model);\n            }\n        } else if (request.type === \"ADD\") {\n            fluid.model.setSimple(model, request.segs, request.value);\n        } else {\n            for (var i = 0; i < segs.length - 1; ++i) {\n                model = model[segs[i]];\n                if (!model) {\n                    return;\n                }\n            }\n            var last = segs[segs.length - 1];\n            delete model[last];\n        }\n    };\n\n    /** Delete the value in the supplied object held at the specified path\n     * @param target {Object} The object holding the value to be deleted (possibly empty)\n     * @param segs {Array of String} the path of the value to be deleted\n     */\n    // unsupported, NON-API function\n    fluid.destroyValue = function (target, segs) {\n        if (target) {\n            fluid.model.applyChangeRequest(target, {type: \"DELETE\", segs: segs});\n        }\n    };\n\n    /**\n     * Merges the component's declared defaults, as obtained from fluid.defaults(),\n     * with the user's specified overrides.\n     *\n     * @param {Object} that the instance to attach the options to\n     * @param {String} componentName the unique \"name\" of the component, which will be used\n     * to fetch the default options from store. By recommendation, this should be the global\n     * name of the component's creator function.\n     * @param {Object} userOptions the user-specified configuration options for this component\n     */\n    // unsupported, NON-API function\n    fluid.mergeComponentOptions = function (that, componentName, userOptions, localOptions) {\n        var rawDefaults = fluid.rawDefaults(componentName);\n        var defaults = fluid.getMergedDefaults(componentName, rawDefaults && rawDefaults.gradeNames ? null : localOptions.gradeNames);\n        var sharedMergePolicy = {};\n\n        var mergeBlocks = [];\n\n        if (fluid.expandComponentOptions) {\n            mergeBlocks = mergeBlocks.concat(fluid.expandComponentOptions(sharedMergePolicy, defaults, userOptions, that));\n        }\n        else {\n            mergeBlocks = mergeBlocks.concat([fluid.simpleGingerBlock(defaults, \"defaults\"),\n                                              fluid.simpleGingerBlock(userOptions, \"user\")]);\n        }\n        var options = {}; // ultimate target\n        var sourceStrategies = [], sources = [];\n        var baseMergeOptions = {\n            target: options,\n            sourceStrategies: sourceStrategies\n        };\n        // Called both from here and from IoC whenever there is a change of block content or arguments which\n        // requires them to be resorted and rebound\n        var updateBlocks = function () {\n            fluid.each(mergeBlocks, function (block) {\n                if (fluid.isPrimitive(block.priority)) {\n                    block.priority = fluid.parsePriority(block.priority, 0, false, \"options distribution\");\n                }\n            });\n            fluid.sortByPriority(mergeBlocks);\n            fluid.dedupeDistributionNamespaces(mergeBlocks);\n            sourceStrategies.length = 0;\n            sources.length = 0;\n            fluid.each(mergeBlocks, function (block) {\n                sourceStrategies.push(block.strategy);\n                sources.push(block.target);\n            });\n        };\n        updateBlocks();\n        var mergeOptions = fluid.makeMergeOptions(sharedMergePolicy, sources, baseMergeOptions);\n        mergeOptions.mergeBlocks = mergeBlocks;\n        mergeOptions.updateBlocks = updateBlocks;\n        mergeOptions.destroyValue = function (segs) { // This method is a temporary hack to assist FLUID-5091\n            for (var i = 0; i < mergeBlocks.length; ++i) {\n                fluid.destroyValue(mergeBlocks[i].target, segs);\n            }\n            fluid.destroyValue(baseMergeOptions.target, segs);\n        };\n\n        var compiledPolicy;\n        var mergePolicy;\n        function computeMergePolicy() {\n            // Decode the now available mergePolicy\n            mergePolicy = fluid.driveStrategy(options, \"mergePolicy\", mergeOptions.strategy);\n            mergePolicy = $.extend({}, fluid.rootMergePolicy, mergePolicy);\n            compiledPolicy = fluid.compileMergePolicy(mergePolicy);\n            // TODO: expandComponentOptions has already put some builtins here - performance implications of the now huge\n            // default mergePolicy material need to be investigated as well as this deep merge\n            $.extend(true, sharedMergePolicy, compiledPolicy.builtins); // ensure it gets broadcast to all sharers\n        }\n        computeMergePolicy();\n        mergeOptions.computeMergePolicy = computeMergePolicy;\n\n        if (compiledPolicy.hasDefaults) {\n            if (fluid.generateExpandBlock) {\n                mergeBlocks.push(fluid.generateExpandBlock({\n                    options: compiledPolicy.defaultValues,\n                    recordType: \"defaultValueMerge\",\n                    priority: fluid.mergeRecordTypes.defaultValueMerge\n                }, that, {}));\n                updateBlocks();\n            }\n            else {\n                fluid.fail(\"Cannot operate mergePolicy \", mergePolicy, \" for component \", that, \" without including FluidIoC.js\");\n            }\n        }\n        that.options = options;\n        fluid.driveStrategy(options, \"gradeNames\", mergeOptions.strategy);\n\n        fluid.deliverOptionsStrategy(that, options, mergeOptions); // do this early to broadcast and receive \"distributeOptions\"\n\n        fluid.computeComponentAccessor(that, userOptions && userOptions.localRecord);\n\n        var transformOptions = fluid.driveStrategy(options, \"transformOptions\", mergeOptions.strategy);\n        if (transformOptions) {\n            fluid.transformOptionsBlocks(mergeBlocks, transformOptions, [\"user\", \"subcomponentRecord\"]);\n            updateBlocks(); // because the possibly simple blocks may have changed target\n        }\n\n        if (!baseMergeOptions.target.mergePolicy) {\n            computeMergePolicy();\n        }\n\n        return mergeOptions;\n    };\n\n    // The Fluid Component System proper\n\n    // The base system grade definitions\n\n    fluid.defaults(\"fluid.function\", {});\n\n    /** Invoke a global function by name and named arguments. A courtesy to allow declaratively encoded function calls\n     * to use named arguments rather than bare arrays.\n     * @param name {String} A global name which can be resolved to a Function. The defaults for this name must\n     * resolve onto a grade including \"fluid.function\". The defaults record should also contain an entry\n     * <code>argumentMap</code>, a hash of argument names onto indexes.\n     * @param spec {Object} A named hash holding the argument values to be sent to the function. These will be looked\n     * up in the <code>argumentMap</code> and resolved into a flat list of arguments.\n     * @return {Any} The return value from the function\n     */\n\n    fluid.invokeGradedFunction = function (name, spec) {\n        var defaults = fluid.defaults(name);\n        if (!defaults || !defaults.argumentMap || !fluid.hasGrade(defaults, \"fluid.function\")) {\n            fluid.fail(\"Cannot look up name \" + name +\n                \" to a function with registered argumentMap - got defaults \", defaults);\n        }\n        var args = [];\n        fluid.each(defaults.argumentMap, function (value, key) {\n            args[value] = spec[key];\n        });\n        return fluid.invokeGlobalFunction(name, args);\n    };\n\n    fluid.noNamespaceDistributionPrefix = \"no-namespace-distribution-\";\n\n    fluid.mergeOneDistribution = function (target, source, key) {\n        var namespace = source.namespace || key || fluid.noNamespaceDistributionPrefix + fluid.allocateGuid();\n        source.namespace = namespace;\n        target[namespace] = $.extend(true, {}, target[namespace], source);\n    };\n\n    fluid.distributeOptionsPolicy = function (target, source) {\n        target = target || {};\n        if (fluid.isArrayable(source)) {\n            for (var i = 0; i < source.length; ++i) {\n                fluid.mergeOneDistribution(target, source[i]);\n            }\n        } else if (typeof(source.target) === \"string\") {\n            fluid.mergeOneDistribution(target, source);\n        } else {\n            fluid.each(source, function (oneSource, key) {\n                fluid.mergeOneDistribution(target, oneSource, key);\n            });\n        }\n        return target;\n    };\n\n    fluid.mergingArray = function () {};\n    fluid.mergingArray.prototype = [];\n\n    // Defer all evaluation of all nested members to resolve FLUID-5668\n    fluid.membersMergePolicy = function (target, source) {\n        target = target || {};\n        fluid.each(source, function (oneSource, key) {\n            if (!target[key]) {\n                target[key] = new fluid.mergingArray();\n            }\n            if (oneSource instanceof fluid.mergingArray) {\n                target[key].push.apply(target[key], oneSource);\n            } else if (oneSource !== undefined) {\n                target[key].push(oneSource);\n            }\n        });\n        return target;\n    };\n\n    fluid.invokerStrategies = fluid.arrayToHash([\"func\", \"funcName\", \"listener\", \"this\", \"method\", \"changePath\", \"value\"]);\n\n    // Resolve FLUID-5741, FLUID-5184 by ensuring that we avoid mixing incompatible invoker strategies\n    fluid.invokersMergePolicy = function (target, source) {\n        target = target || {};\n        fluid.each(source, function (oneInvoker, name) {\n            if (!oneInvoker) {\n                target[name] = oneInvoker;\n                return;\n            } else {\n                oneInvoker = fluid.upgradePrimitiveFunc(oneInvoker);\n            }\n            var oneT = target[name];\n            if (!oneT) {\n                oneT = target[name] = {};\n            }\n            for (var key in fluid.invokerStrategies) {\n                if (key in oneInvoker) {\n                    for (var key2 in fluid.invokerStrategies) {\n                        oneT[key2] = undefined; // can't delete since stupid driveStrategy bug from recordStrategy reinstates them\n                    }\n                }\n            }\n            $.extend(oneT, oneInvoker);\n        });\n        return target;\n    };\n\n    fluid.rootMergePolicy = {\n        gradeNames: fluid.arrayConcatPolicy,\n        distributeOptions: fluid.distributeOptionsPolicy,\n        members: {\n            noexpand: true,\n            func: fluid.membersMergePolicy\n        },\n        invokers: {\n            noexpand: true,\n            func: fluid.invokersMergePolicy\n        },\n        transformOptions: \"replace\",\n        listeners: fluid.makeMergeListenersPolicy(fluid.mergeListenerPolicy)\n    };\n\n    fluid.defaults(\"fluid.component\", {\n        initFunction: \"fluid.initLittleComponent\",\n        mergePolicy: fluid.rootMergePolicy,\n        argumentMap: {\n            options: 0\n        },\n        events: { // Three standard lifecycle points common to all components\n            onCreate:     null,\n            onDestroy:    null,\n            afterDestroy: null\n        }\n    });\n\n    fluid.defaults(\"fluid.emptySubcomponent\", {\n        gradeNames: [\"fluid.component\"]\n    });\n\n    /** Compute a \"nickname\" given a fully qualified typename, by returning the last path\n     * segment.\n     */\n\n    fluid.computeNickName = function (typeName) {\n        var segs = fluid.model.parseEL(typeName);\n        return segs[segs.length - 1];\n    };\n\n    /** A specially recognised grade tag which directs the IoC framework to instantiate this component first amongst\n     * its set of siblings, since it is likely to bear a context-forming type name. This will be removed from the framework\n     * once we have implemented FLUID-4925 \"wave of explosions\" */\n\n    fluid.defaults(\"fluid.typeFount\", {\n        gradeNames: [\"fluid.component\"]\n    });\n\n    /**\n     * Creates a new \"little component\": a that-ist object with options merged into it by the framework.\n     * This method is a convenience for creating small objects that have options but don't require full\n     * View-like features such as the DOM Binder or events\n     *\n     * @param {Object} name the name of the little component to create\n     * @param {Object} options user-supplied options to merge with the defaults\n     */\n    // NOTE: the 3rd argument localOptions is NOT to be advertised as part of the stable API, it is present\n    // just to allow backward compatibility whilst grade specifications are not mandatory - similarly for 4th arg \"receiver\"\n    // NOTE historical name to avoid confusion with fluid.initComponent below - this will all be refactored with FLUID-4925\n    fluid.initLittleComponent = function (name, userOptions, localOptions, receiver) {\n        var that = fluid.typeTag(name);\n        that.lifecycleStatus = \"constructing\";\n        localOptions = localOptions || {gradeNames: \"fluid.component\"};\n\n        that.destroy = fluid.makeRootDestroy(that); // overwritten by FluidIoC for constructed subcomponents\n        var mergeOptions = fluid.mergeComponentOptions(that, name, userOptions, localOptions);\n        mergeOptions.exceptions = {members: {model: true, modelRelay: true}}; // don't evaluate these in \"early flooding\" - they must be fetched explicitly\n        var options = that.options;\n        that.events = {};\n        // deliver to a non-IoC side early receiver of the component (currently only initView)\n        (receiver || fluid.identity)(that, options, mergeOptions.strategy);\n        fluid.computeDynamicComponents(that, mergeOptions);\n\n        // TODO: ****THIS**** is the point we must deliver and suspend!! Construct the \"component skeleton\" first, and then continue\n        // for as long as we can continue to find components.\n        for (var i = 0; i < mergeOptions.mergeBlocks.length; ++i) {\n            mergeOptions.mergeBlocks[i].initter();\n        }\n        mergeOptions.initter();\n        delete options.mergePolicy;\n\n        fluid.instantiateFirers(that, options);\n        fluid.mergeListeners(that, that.events, options.listeners);\n\n        return that;\n    };\n\n    fluid.diagnoseFailedView = fluid.identity;\n\n    // unsupported, NON-API function\n    fluid.makeRootDestroy = function (that) {\n        return function () {\n            fluid.doDestroy(that);\n            fluid.fireEvent(that, \"afterDestroy\", [that, \"\", null]);\n        };\n    };\n\n    /** Returns <code>true</code> if the supplied reference holds a component which has been destroyed **/\n\n    fluid.isDestroyed = function (that) {\n        return that.lifecycleStatus === \"destroyed\";\n    };\n\n    // unsupported, NON-API function\n    fluid.doDestroy = function (that, name, parent) {\n        fluid.fireEvent(that, \"onDestroy\", [that, name || \"\", parent]);\n        that.lifecycleStatus = \"destroyed\";\n        for (var key in that.events) {\n            if (key !== \"afterDestroy\" && typeof(that.events[key].destroy) === \"function\") {\n                that.events[key].destroy();\n            }\n        }\n        if (that.applier) { // TODO: Break this out into the grade's destroyer\n            that.applier.destroy();\n        }\n    };\n\n    // unsupported, NON-API function\n    fluid.initComponent = function (componentName, initArgs) {\n        var options = fluid.defaults(componentName);\n        if (!options.gradeNames) {\n            fluid.fail(\"Cannot initialise component \" + componentName + \" which has no gradeName registered\");\n        }\n        var args = [componentName].concat(fluid.makeArray(initArgs));\n        var that;\n        fluid.pushActivity(\"initComponent\", \"constructing component of type %componentName with arguments %initArgs\",\n            {componentName: componentName, initArgs: initArgs});\n        that = fluid.invokeGlobalFunction(options.initFunction, args);\n        fluid.diagnoseFailedView(componentName, that, options, args);\n        if (fluid.initDependents) {\n            fluid.initDependents(that);\n        }\n        var errors = fluid.validateListenersImplemented(that);\n        if (errors.length > 0) {\n            fluid.fail(fluid.transform(errors, function (error) {\n                return [\"Error constructing component \", that, \" - the listener for event \" + error.name + \" with namespace \" + error.namespace + (\n                    (error.componentSource ? \" which was defined in grade \" + error.componentSource : \"\") + \" needs to be overridden with a concrete implementation\")];\n            })).join(\"\\n\");\n        }\n        if (that.lifecycleStatus === \"constructing\") {\n            that.lifecycleStatus = \"constructed\";\n        }\n        that.events.onCreate.fire(that);\n        fluid.popActivity();\n        return that;\n    };\n\n    // unsupported, NON-API function\n    fluid.initSubcomponentImpl = function (that, entry, args) {\n        var togo;\n        if (typeof (entry) !== \"function\") {\n            var entryType = typeof (entry) === \"string\" ? entry : entry.type;\n            togo = entryType === \"fluid.emptySubcomponent\" ?\n                null : fluid.invokeGlobalFunction(entryType, args);\n        } else {\n            togo = entry.apply(null, args);\n        }\n        return togo;\n    };\n\n    // ******* SELECTOR ENGINE *********\n\n    // selector regexps copied from jQuery - recent versions correct the range to start C0\n    // The initial portion of the main character selector: \"just add water\" to add on extra\n    // accepted characters, as well as the \"\\\\\\\\.\" -> \"\\.\" portion necessary for matching\n    // period characters escaped in selectors\n    var charStart = \"(?:[\\\\w\\\\u00c0-\\\\uFFFF*_-\";\n\n    fluid.simpleCSSMatcher = {\n        regexp: new RegExp(\"([#.]?)(\" + charStart + \"]|\\\\\\\\.)+)\", \"g\"),\n        charToTag: {\n            \"\": \"tag\",\n            \"#\": \"id\",\n            \".\": \"clazz\"\n        }\n    };\n\n    fluid.IoCSSMatcher = {\n        regexp: new RegExp(\"([&#]?)(\" + charStart + \"]|\\\\.|\\\\/)+)\", \"g\"),\n        charToTag: {\n            \"\": \"context\",\n            \"&\": \"context\",\n            \"#\": \"id\"\n        }\n    };\n\n    var childSeg = new RegExp(\"\\\\s*(>)?\\\\s*\", \"g\");\n//    var whiteSpace = new RegExp(\"^\\\\w*$\");\n\n    // Parses a selector expression into a data structure holding a list of predicates\n    // 2nd argument is a \"strategy\" structure, e.g.  fluid.simpleCSSMatcher or fluid.IoCSSMatcher\n    // unsupported, non-API function\n    fluid.parseSelector = function (selstring, strategy) {\n        var togo = [];\n        selstring = selstring.trim();\n        //ws-(ss*)[ws/>]\n        var regexp = strategy.regexp;\n        regexp.lastIndex = 0;\n        var lastIndex = 0;\n        while (true) {\n            var atNode = []; // a list of predicates at a particular node\n            var first = true;\n            while (true) {\n                var segMatch = regexp.exec(selstring);\n                if (!segMatch) {\n                    break;\n                }\n                if (segMatch.index !== lastIndex) {\n                    if (first) {\n                        fluid.fail(\"Error in selector string - cannot match child selector expression starting at \" + selstring.substring(lastIndex));\n                    }\n                    else {\n                        break;\n                    }\n                }\n                var thisNode = {};\n                var text = segMatch[2];\n                var targetTag = strategy.charToTag[segMatch[1]];\n                if (targetTag) {\n                    thisNode[targetTag] = text;\n                }\n                atNode[atNode.length] = thisNode;\n                lastIndex = regexp.lastIndex;\n                first = false;\n            }\n            childSeg.lastIndex = lastIndex;\n            var fullAtNode = {predList: atNode};\n            var childMatch = childSeg.exec(selstring);\n            if (!childMatch || childMatch.index !== lastIndex) {\n                fluid.fail(\"Error in selector string - can not match child selector expression at \" + selstring.substring(lastIndex));\n            }\n            if (childMatch[1] === \">\") {\n                fullAtNode.child = true;\n            }\n            togo[togo.length] = fullAtNode;\n            // >= test here to compensate for IE bug http://blog.stevenlevithan.com/archives/exec-bugs\n            if (childSeg.lastIndex >= selstring.length) {\n                break;\n            }\n            lastIndex = childSeg.lastIndex;\n            regexp.lastIndex = childSeg.lastIndex;\n        }\n        return togo;\n    };\n\n    // Message resolution and templating\n\n   /**\n    * Converts a string to a regexp with the specified flags given in parameters\n    * @param {String} a string that has to be turned into a regular expression\n    * @param {String} the flags to provide to the reg exp\n    */\n    // TODO: this is an abominably inefficient technique for something that could simply be done by means of indexOf and slice\n    fluid.stringToRegExp = function (str, flags) {\n        return new RegExp(str.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\"), flags);\n    };\n\n    /**\n     * Simple string template system.\n     * Takes a template string containing tokens in the form of \"%value\".\n     * Returns a new string with the tokens replaced by the specified values.\n     * Keys and values can be of any data type that can be coerced into a string.\n     *\n     * @param {String}    template    a string (can be HTML) that contains tokens embedded into it\n     * @param {object}    values      a collection of token keys and values\n     */\n    fluid.stringTemplate = function (template, values) {\n        var keys = fluid.keys(values);\n        keys = keys.sort(fluid.compareStringLength());\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            var re = fluid.stringToRegExp(\"%\" + key, \"g\");\n            template = template.replace(re, values[key]);\n        }\n        return template;\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*!\n Copyright 2011 unscriptable.com / John Hann\n Copyright 2014 Lucendo Development Ltd.\n Copyright 2014 Raising the Floor - US\n Copyright 2014-2016 Raising the Floor - International\n\n License MIT\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n// Light fluidification of minimal promises library. See original gist at\n// https://gist.github.com/unscriptable/814052 for limitations and commentary\n\n// This implementation provides what could be described as \"flat promises\" with\n// no support for structured programming idioms involving promise composition.\n// It provides what a proponent of mainstream promises would describe as\n// a \"glorified callback aggregator\"\n\n    fluid.promise = function () {\n        var that = {\n            onResolve: [],\n            onReject: []\n            // disposition\n            // value\n        };\n        that.then = function (onResolve, onReject) {\n            if (onResolve) {\n                if (that.disposition === \"resolve\") {\n                    onResolve(that.value);\n                } else {\n                    that.onResolve.push(onResolve);\n                }\n            }\n            if (onReject) {\n                if (that.disposition === \"reject\") {\n                    onReject(that.value);\n                } else {\n                    that.onReject.push(onReject);\n                }\n            }\n            return that;\n        };\n        that.resolve = function (value) {\n            if (that.disposition) {\n                fluid.fail(\"Error: resolving promise \", that,\n                    \" which has already received \\\"\" + that.disposition + \"\\\"\");\n            } else {\n                that.complete(\"resolve\", that.onResolve, value);\n            }\n            return that;\n        };\n        that.reject = function (reason) {\n            if (that.disposition) {\n                fluid.fail(\"Error: rejecting promise \", that,\n                    \"which has already received \\\"\" + that.disposition + \"\\\"\");\n            } else {\n                that.complete(\"reject\", that.onReject, reason);\n            }\n            return that;\n        };\n        // PRIVATE, NON-API METHOD\n        that.complete = function (which, queue, arg) {\n            that.disposition = which;\n            that.value = arg;\n            for (var i = 0; i < queue.length; ++i) {\n                queue[i](arg);\n            }\n        };\n        return that;\n    };\n\n    /** Any object with a member <code>then</code> of type <code>function</code> passes this test.\n     * This includes essentially every known variety, including jQuery promises.\n     */\n    fluid.isPromise = function (totest) {\n        return totest && typeof(totest.then) === \"function\";\n    };\n\n    /** Coerces any value to a promise\n     * @param promiseOrValue The value to be coerced\n     * @return If the supplied value is already a promise, it is returned unchanged. Otherwise a fresh promise is created with the value as resolution and returned\n     */\n    fluid.toPromise = function (promiseOrValue) {\n        if (fluid.isPromise(promiseOrValue)) {\n            return promiseOrValue;\n        } else {\n            var togo = fluid.promise();\n            togo.resolve(promiseOrValue);\n            return togo;\n        }\n    };\n\n    /** Chains the resolution methods of one promise (target) so that they follow those of another (source).\n      * That is, whenever source resolves, target will resolve, or when source rejects, target will reject, with the\n      * same payloads in each case.\n      */\n    fluid.promise.follow = function (source, target) {\n        source.then(target.resolve, target.reject);\n    };\n\n    /** Returns a promise whose resolved value is mapped from the source promise or value by the supplied function.\n     * @param source {Object|Promise} An object or promise whose value is to be mapped\n     * @param func {Function} A function which will map the resolved promise value\n     * @return {Promise} A promise for the resolved mapped value.\n     */\n    fluid.promise.map = function (source, func) {\n        var promise = fluid.toPromise(source);\n        var togo = fluid.promise();\n        promise.then(function (value) {\n            var mapped = func(value);\n            if (fluid.isPromise(mapped)) {\n                fluid.promise.follow(mapped, togo);\n            } else {\n                togo.resolve(mapped);\n            }\n        }, function (error) {\n            togo.reject(error);\n        });\n        return togo;\n    };\n\n    /* General skeleton for all sequential promise algorithms, e.g. transform, reduce, sequence, etc.\n     * These accept a variable \"strategy\" pair to customise the interchange of values and final return\n     */\n\n    fluid.promise.makeSequencer = function (sources, options, strategy) {\n        if (!fluid.isArrayable(sources)) {\n            fluid.fail(\"fluid.promise sequence algorithms must be supplied an array as source\");\n        }\n        return {\n            sources: sources,\n            resolvedSources: [], // the values of \"sources\" only with functions invoked (an array of promises or values)\n            index: 0,\n            strategy: strategy,\n            options: options, // available to be supplied to each listener\n            returns: [],\n            promise: fluid.promise() // the final return value\n        };\n    };\n\n    fluid.promise.progressSequence = function (that, retValue) {\n        that.returns.push(retValue);\n        that.index++;\n        // No we dun't have no tail recursion elimination\n        fluid.promise.resumeSequence(that);\n    };\n\n    fluid.promise.processSequenceReject = function (that, error) { // Allow earlier promises in the sequence to wrap the rejection supplied by later ones (FLUID-5584)\n        for (var i = that.index - 1; i >= 0; --i) {\n            var resolved = that.resolvedSources[i];\n            var accumulator = fluid.isPromise(resolved) && typeof(resolved.accumulateRejectionReason) === \"function\" ? resolved.accumulateRejectionReason : fluid.identity;\n            error = accumulator(error);\n        }\n        that.promise.reject(error);\n    };\n\n    fluid.promise.resumeSequence = function (that) {\n        if (that.index === that.sources.length) {\n            that.promise.resolve(that.strategy.resolveResult(that));\n        } else {\n            var value = that.strategy.invokeNext(that);\n            that.resolvedSources[that.index] = value;\n            if (fluid.isPromise(value)) {\n                value.then(function (retValue) {\n                    fluid.promise.progressSequence(that, retValue);\n                }, function (error) {\n                    fluid.promise.processSequenceReject(that, error);\n                });\n            } else {\n                fluid.promise.progressSequence(that, value);\n            }\n        }\n    };\n\n    // SEQUENCE ALGORITHM APPLYING PROMISES\n\n    fluid.promise.makeSequenceStrategy = function () {\n        return {\n            invokeNext: function (that) {\n                var source = that.sources[that.index];\n                return typeof(source) === \"function\" ? source(that.options) : source;\n            },\n            resolveResult: function (that) {\n                return that.returns;\n            }\n        };\n    };\n\n    // accepts an array of values, promises or functions returning promises - in the case of functions returning promises,\n    // will assure that at most one of these is \"in flight\" at a time - that is, the succeeding function will not be invoked\n    // until the promise at the preceding position has resolved\n    fluid.promise.sequence = function (sources, options) {\n        var sequencer = fluid.promise.makeSequencer(sources, options, fluid.promise.makeSequenceStrategy());\n        fluid.promise.resumeSequence(sequencer);\n        return sequencer.promise;\n    };\n\n    // TRANSFORM ALGORITHM APPLYING PROMISES\n\n    fluid.promise.makeTransformerStrategy = function () {\n        return {\n            invokeNext: function (that) {\n                var lisrec = that.sources[that.index];\n                lisrec.listener = fluid.event.resolveListener(lisrec.listener);\n                var value = lisrec.listener(that.returns[that.index], that.options);\n                return value;\n            },\n            resolveResult: function (that) {\n                return that.returns[that.index];\n            }\n        };\n    };\n\n    // Construct a \"mini-object\" managing the process of a sequence of transforms,\n    // each of which may be synchronous or return a promise\n    fluid.promise.makeTransformer = function (listeners, payload, options) {\n        listeners.unshift({listener:\n            function () {\n                return payload;\n            }\n        });\n        var sequencer = fluid.promise.makeSequencer(listeners, options, fluid.promise.makeTransformerStrategy());\n        sequencer.returns.push(null); // first dummy return from initial entry\n        fluid.promise.resumeSequence(sequencer);\n        return sequencer;\n    };\n\n    fluid.promise.filterNamespaces = function (listeners, namespaces) {\n        if (!namespaces) {\n            return listeners;\n        }\n        return fluid.remove_if(fluid.makeArray(listeners), function (element) {\n            return element.namespace && !element.softNamespace && !fluid.contains(namespaces, element.namespace);\n        });\n    };\n\n   /** Top-level API to operate a Fluid event which manages a sequence of\n     * chained transforms. Rather than being a standard listener accepting the\n     * same payload, each listener to the event accepts the payload returned by the\n     * previous listener, and returns either a transformed payload or else a promise\n     * yielding such a payload.\n     * @param event {fluid.eventFirer} A Fluid event to which the listeners are to be interpreted as\n     * elements cooperating in a chained transform. Each listener will receive arguments <code>(payload, options)</code> where <code>payload</code>\n     * is the (successful, resolved) return value of the previous listener, and <code>options</code> is the final argument to this function\n     * @param payload {Object|Promise} The initial payload input to the transform chain\n     * @param options {Object} A free object containing options governing the transform. Fields interpreted at this top level are:\n     *     reverse {Boolean}: <code>true</code> if the listeners are to be called in reverse order of priority (typically the case for an inverse transform)\n     *     filterTransforms {Array}: An array of listener namespaces. If this field is set, only the transform elements whose listener namespaces listed in this array will be applied.\n     * @return {fluid.promise} A promise which will yield either the final transformed value, or the response of the first transform which fails.\n     */\n\n    fluid.promise.fireTransformEvent = function (event, payload, options) {\n        options = options || {};\n        var listeners = options.reverse ? fluid.makeArray(event.sortedListeners).reverse() :\n                fluid.makeArray(event.sortedListeners);\n        listeners = fluid.promise.filterNamespaces(listeners, options.filterNamespaces);\n        var transformer = fluid.promise.makeTransformer(listeners, payload, options);\n        return transformer.promise;\n    };\n\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2007-2010 University of Cambridge\nCopyright 2007-2009 University of Toronto\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2010-2016 OCAD University\nCopyright 2013-2014 Raising the Floor - US\nCopyright 2005-2013 jQuery Foundation, Inc. and other contributors\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\n/** This file contains functions which depend on the presence of a DOM document\n * but which do not depend on the contents of Fluid.js **/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    // polyfill for $.browser which was removed in jQuery 1.9 and later\n    // Taken from jquery-migrate-1.2.1.js,\n    // jQuery Migrate - v1.2.1 - 2013-05-08\n    // https://github.com/jquery/jquery-migrate\n    // Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors; Licensed MIT\n\n    fluid.uaMatch = function (ua) {\n        ua = ua.toLowerCase();\n\n        var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\n            /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\n            /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\n            /(msie) ([\\w.]+)/.exec( ua ) ||\n        ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) || [];\n\n        return {\n            browser: match[ 1 ] || \"\",\n            version: match[ 2 ] || \"0\"\n        };\n    };\n\n    var matched, browser;\n\n    // Don't clobber any existing jQuery.browser in case it's different\n    if (!$.browser) {\n        if (!!navigator.userAgent.match(/Trident\\/7\\./)) {\n            browser = { // From http://stackoverflow.com/questions/18684099/jquery-fail-to-detect-ie-11\n                msie: true,\n                version: 11\n            };\n        } else {\n            matched = fluid.uaMatch(navigator.userAgent);\n            browser = {};\n\n            if (matched.browser) {\n                browser[matched.browser] = true;\n                browser.version = matched.version;\n            }\n            // Chrome is Webkit, but Webkit is also Safari.\n            if (browser.chrome) {\n                browser.webkit = true;\n            } else if (browser.webkit) {\n                browser.safari = true;\n            }\n        }\n        $.browser = browser;\n    }\n\n    // Private constants.\n    var NAMESPACE_KEY = \"fluid-scoped-data\";\n\n    /**\n     * Gets stored state from the jQuery instance's data map.\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.getScopedData = function (target, key) {\n        var data = $(target).data(NAMESPACE_KEY);\n        return data ? data[key] : undefined;\n    };\n\n    /**\n     * Stores state in the jQuery instance's data map. Unlike jQuery's version,\n     * accepts multiple-element jQueries.\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.setScopedData = function (target, key, value) {\n        $(target).each(function () {\n            var data = $.data(this, NAMESPACE_KEY) || {};\n            data[key] = value;\n\n            $.data(this, NAMESPACE_KEY, data);\n        });\n    };\n\n    /** Global focus manager - makes use of \"focusin\" event supported in jquery 1.4.2 or later.\n     */\n\n    var lastFocusedElement = null;\n\n    $(document).on(\"focusin\", function (event) {\n        lastFocusedElement = event.target;\n    });\n\n    fluid.getLastFocusedElement = function () {\n        return lastFocusedElement;\n    };\n\n\n    var ENABLEMENT_KEY = \"enablement\";\n\n    /** Queries or sets the enabled status of a control. An activatable node\n     * may be \"disabled\" in which case its keyboard bindings will be inoperable\n     * (but still stored) until it is reenabled again.\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n\n    fluid.enabled = function (target, state) {\n        target = $(target);\n        if (state === undefined) {\n            return fluid.getScopedData(target, ENABLEMENT_KEY) !== false;\n        }\n        else {\n            $(\"*\", target).add(target).each(function () {\n                if (fluid.getScopedData(this, ENABLEMENT_KEY) !== undefined) {\n                    fluid.setScopedData(this, ENABLEMENT_KEY, state);\n                }\n                else if (/select|textarea|input/i.test(this.nodeName)) {\n                    $(this).prop(\"disabled\", !state);\n                }\n            });\n            fluid.setScopedData(target, ENABLEMENT_KEY, state);\n        }\n    };\n\n    fluid.initEnablement = function (target) {\n        fluid.setScopedData(target, ENABLEMENT_KEY, true);\n    };\n\n    // This utility is required through the use of newer versions of jQuery which will obscure the original\n    // event responsible for interaction with a target. This is currently use in Tooltip.js and FluidView.js\n    // \"dead man's blur\" but would be of general utility\n\n    fluid.resolveEventTarget = function (event) {\n        while (event.originalEvent && event.originalEvent.target) {\n            event = event.originalEvent;\n        }\n        return event.target;\n    };\n\n    // These function (fluid.focus() and fluid.blur()) serve several functions. They should be used by\n    // all implementation both in test cases and component implementation which require to trigger a focus\n    // event. Firstly, they restore the old behaviour in jQuery versions prior to 1.10 in which a focus\n    // trigger synchronously relays to a focus handler. In newer jQueries this defers to the real browser\n    // relay with numerous platform and timing-dependent effects.\n    // Secondly, they are necessary since simulation of focus events by jQuery under IE\n    // is not sufficiently good to intercept the \"focusin\" binding. Any code which triggers\n    // focus or blur synthetically throughout the framework and client code must use this function,\n    // especially if correct cross-platform interaction is required with the \"deadMansBlur\" function.\n\n    function applyOp(node, func) {\n        node = $(node);\n        node.trigger(\"fluid-\" + func);\n        node.triggerHandler(func);\n        node[func]();\n        return node;\n    }\n\n    $.each([\"focus\", \"blur\"], function (i, name) {\n        fluid[name] = function (elem) {\n            return applyOp(elem, name);\n        };\n    });\n\n    /* Sets the value to the DOM element and triggers the change event on the element.\n     * Note: when using jQuery val() function to change the node value, the change event would\n     * not be fired automatically, it requires to be initiated by the user.\n     *\n     * @param node {A jQueryable DOM element} A selector, a DOM node, or a jQuery instance\n     * @param value {String|Number|Array} A string of text, a number, or an array of strings\n     * corresponding to the value of each matched element to set in the node\n     */\n    fluid.changeElementValue = function (node, value) {\n        node = $(node);\n        node.val(value).change();\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2008-2010 University of Cambridge\nCopyright 2008-2009 University of Toronto\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    fluid.dom = fluid.dom || {};\n\n    // Node walker function for iterateDom.\n    var getNextNode = function (iterator) {\n        if (iterator.node.firstChild) {\n            iterator.node = iterator.node.firstChild;\n            iterator.depth += 1;\n            return iterator;\n        }\n        while (iterator.node) {\n            if (iterator.node.nextSibling) {\n                iterator.node = iterator.node.nextSibling;\n                return iterator;\n            }\n            iterator.node = iterator.node.parentNode;\n            iterator.depth -= 1;\n        }\n        return iterator;\n    };\n\n    /**\n     * Walks the DOM, applying the specified acceptor function to each element.\n     * There is a special case for the acceptor, allowing for quick deletion of elements and their children.\n     * Return \"delete\" from your acceptor function if you want to delete the element in question.\n     * Return \"stop\" to terminate iteration.\n\n     * Implementation note - this utility exists mainly for performance reasons. It was last tested\n     * carefully some time ago (around jQuery 1.2) but at that time was around 3-4x faster at raw DOM\n     * filtration tasks than the jQuery equivalents, which was an important source of performance loss in the\n     * Reorderer component. General clients of the framework should use this method with caution if at all, and\n     * the performance issues should be reassessed when we have time.\n     *\n     * @param {Element} node the node to start walking from\n     * @param {Function} acceptor the function to invoke with each DOM element\n     * @param {Boolean} allnodes Use <code>true</code> to call acceptor on all nodes,\n     * rather than just element nodes (type 1)\n     */\n    fluid.dom.iterateDom = function (node, acceptor, allNodes) {\n        var currentNode = {node: node, depth: 0};\n        var prevNode = node;\n        var condition;\n        while (currentNode.node !== null && currentNode.depth >= 0 && currentNode.depth < fluid.dom.iterateDom.DOM_BAIL_DEPTH) {\n            condition = null;\n            if (currentNode.node.nodeType === 1 || allNodes) {\n                condition = acceptor(currentNode.node, currentNode.depth);\n            }\n            if (condition) {\n                if (condition === \"delete\") {\n                    currentNode.node.parentNode.removeChild(currentNode.node);\n                    currentNode.node = prevNode;\n                }\n                else if (condition === \"stop\") {\n                    return currentNode.node;\n                }\n            }\n            prevNode = currentNode.node;\n            currentNode = getNextNode(currentNode);\n        }\n    };\n\n    // Work around IE circular DOM issue. This is the default max DOM depth on IE.\n    // http://msdn2.microsoft.com/en-us/library/ms761392(VS.85).aspx\n    fluid.dom.iterateDom.DOM_BAIL_DEPTH = 256;\n\n    /**\n     * Checks if the specified container is actually the parent of containee.\n     *\n     * @param {Element} container the potential parent\n     * @param {Element} containee the child in question\n     */\n    fluid.dom.isContainer = function (container, containee) {\n        for (; containee; containee = containee.parentNode) {\n            if (container === containee) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /** Return the element text from the supplied DOM node as a single String.\n     * Implementation note - this is a special-purpose utility used in the framework in just one\n     * position in the Reorderer. It only performs a \"shallow\" traversal of the text and was intended\n     * as a quick and dirty means of extracting element labels where the user had not explicitly provided one.\n     * It should not be used by general users of the framework and its presence here needs to be\n     * reassessed.\n     */\n    fluid.dom.getElementText = function (element) {\n        var nodes = element.childNodes;\n        var text = \"\";\n        for (var i = 0; i < nodes.length; ++i) {\n            var child = nodes[i];\n            if (child.nodeType === 3) {\n                text = text + child.nodeValue;\n            }\n        }\n        return text;\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2008-2010 University of Cambridge\nCopyright 2008-2009 University of Toronto\nCopyright 2010 Lucendo Development Ltd.\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nfluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    var unUnicode = /(\\\\u[\\dabcdef]{4}|\\\\x[\\dabcdef]{2})/g;\n\n    fluid.unescapeProperties = function (string) {\n        string = string.replace(unUnicode, function (match) {\n            var code = match.substring(2);\n            var parsed = parseInt(code, 16);\n            return String.fromCharCode(parsed);\n        });\n        var pos = 0;\n        while (true) {\n            var backpos = string.indexOf(\"\\\\\", pos);\n            if (backpos === -1) {\n                break;\n            }\n            if (backpos === string.length - 1) {\n                return [string.substring(0, string.length - 1), true];\n            }\n            var replace = string.charAt(backpos + 1);\n            if (replace === \"n\") { replace = \"\\n\"; }\n            if (replace === \"r\") { replace = \"\\r\"; }\n            if (replace === \"t\") { replace = \"\\t\"; }\n            string = string.substring(0, backpos) + replace + string.substring(backpos + 2);\n            pos = backpos + 1;\n        }\n        return [string, false];\n    };\n\n    var breakPos = /[^\\\\][\\s:=]/;\n\n    fluid.parseJavaProperties = function (text) {\n        // File format described at http://java.sun.com/javase/6/docs/api/java/util/Properties.html#load(java.io.Reader)\n        var togo = {};\n        text = text.replace(/\\r\\n/g, \"\\n\");\n        text = text.replace(/\\r/g, \"\\n\");\n        var lines = text.split(\"\\n\");\n        var contin, key, valueComp, valueRaw, valueEsc;\n        for (var i = 0; i < lines.length; ++i) {\n            var line = $.trim(lines[i]);\n            if (!line || line.charAt(0) === \"#\" || line.charAt(0) === \"!\") {\n                continue;\n            }\n            if (!contin) {\n                valueComp = \"\";\n                var breakpos = line.search(breakPos);\n                if (breakpos === -1) {\n                    key = line;\n                    valueRaw = \"\";\n                }\n                else {\n                    key = $.trim(line.substring(0, breakpos + 1)); // +1 since first char is escape exclusion\n                    valueRaw = $.trim(line.substring(breakpos + 2));\n                    if (valueRaw.charAt(0) === \":\" || valueRaw.charAt(0) === \"=\") {\n                        valueRaw = $.trim(valueRaw.substring(1));\n                    }\n                }\n\n                key = fluid.unescapeProperties(key)[0];\n                valueEsc = fluid.unescapeProperties(valueRaw);\n            }\n            else {\n                valueEsc = fluid.unescapeProperties(line);\n            }\n\n            contin = valueEsc[1];\n            if (!valueEsc[1]) { // this line was not a continuation line - store the value\n                togo[key] = valueComp + valueEsc[0];\n            }\n            else {\n                valueComp += valueEsc[0];\n            }\n        }\n        return togo;\n    };\n\n    /**\n    * Expand a message string with respect to a set of arguments, following a basic\n    * subset of the Java MessageFormat rules.\n    * http://java.sun.com/j2se/1.4.2/docs/api/java/text/MessageFormat.html\n    *\n    * The message string is expected to contain replacement specifications such\n    * as {0}, {1}, {2}, etc.\n    * @param messageString {String} The message key to be expanded\n    * @param args {String/Array of String} An array of arguments to be substituted into the message.\n    * @return The expanded message string.\n    */\n    fluid.formatMessage = function (messageString, args) {\n        if (!args) {\n            return messageString;\n        }\n        if (typeof(args) === \"string\") {\n            args = [args];\n        }\n        for (var i = 0; i < args.length; ++i) {\n            messageString = messageString.replace(\"{\" + i + \"}\", args[i]);\n        }\n        return messageString;\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2007-2010 University of Cambridge\nCopyright 2007-2009 University of Toronto\nCopyright 2007-2009 University of California, Berkeley\nCopyright 2010 OCAD University\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2012 Raising the Floor - US\nCopyright 2014-2015 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\nvar fluid = fluid || fluid_3_0_0;\n\n(function ($, fluid) {\n    \"use strict\";\n\n    /** Render a timestamp from a Date object into a helpful fixed format for debug logs to millisecond accuracy\n     * @param date {Date} The date to be rendered\n     * @return {String} A string format consisting of hours:minutes:seconds.millis for the datestamp padded to fixed with\n     */\n\n    fluid.renderTimestamp = function (date) {\n        var zeropad = function (num, width) {\n            if (!width) { width = 2; }\n            var numstr = (num === undefined ? \"\" : num.toString());\n            return \"00000\".substring(5 - width + numstr.length) + numstr;\n        };\n        return zeropad(date.getHours()) + \":\" + zeropad(date.getMinutes()) + \":\" + zeropad(date.getSeconds()) + \".\" + zeropad(date.getMilliseconds(), 3);\n    };\n\n    fluid.isTracing = false;\n\n    fluid.registerNamespace(\"fluid.tracing\");\n\n    fluid.tracing.pathCount = [];\n\n    fluid.tracing.summarisePathCount = function (pathCount) {\n        pathCount = pathCount || fluid.tracing.pathCount;\n        var togo = {};\n        for (var i = 0; i < pathCount.length; ++i) {\n            var path = pathCount[i];\n            if (!togo[path]) {\n                togo[path] = 1;\n            }\n            else {\n                ++togo[path];\n            }\n        }\n        var toReallyGo = [];\n        fluid.each(togo, function (el, path) {\n            toReallyGo.push({path: path, count: el});\n        });\n        toReallyGo.sort(function (a, b) {return b.count - a.count;});\n        return toReallyGo;\n    };\n\n    fluid.tracing.condensePathCount = function (prefixes, pathCount) {\n        prefixes = fluid.makeArray(prefixes);\n        var prefixCount = {};\n        fluid.each(prefixes, function (prefix) {\n            prefixCount[prefix] = 0;\n        });\n        var togo = [];\n        fluid.each(pathCount, function (el) {\n            var path = el.path;\n            if (!fluid.find(prefixes, function (prefix) {\n                if (path.indexOf(prefix) === 0) {\n                    prefixCount[prefix] += el.count;\n                    return true;\n                }\n            })) {\n                togo.push(el);\n            }\n        });\n        fluid.each(prefixCount, function (count, path) {\n            togo.unshift({path: path, count: count});\n        });\n        return togo;\n    };\n\n    // Exception stripping code taken from https://github.com/emwendelin/javascript-stacktrace/blob/master/stacktrace.js\n    // BSD licence, see header\n\n    fluid.detectStackStyle = function (e) {\n        var style = \"other\";\n        var stackStyle = {\n            offset: 0\n        };\n        if (e.arguments) {\n            style = \"chrome\";\n        } else if (typeof window !== \"undefined\" && window.opera && e.stacktrace) {\n            style = \"opera10\";\n        } else if (e.stack) {\n            style = \"firefox\";\n            // Detect FireFox 4-style stacks which are 1 level less deep\n            stackStyle.offset = e.stack.indexOf(\"Trace exception\") === -1 ? 1 : 0;\n        } else if (typeof window !== \"undefined\" && window.opera && !(\"stacktrace\" in e)) { //Opera 9-\n            style = \"opera\";\n        }\n        stackStyle.style = style;\n        return stackStyle;\n    };\n\n    fluid.obtainException = function () {\n        try {\n            throw new Error(\"Trace exception\");\n        }\n        catch (e) {\n            return e;\n        }\n    };\n\n    var stackStyle = fluid.detectStackStyle(fluid.obtainException());\n\n    fluid.registerNamespace(\"fluid.exceptionDecoders\");\n\n    fluid.decodeStack = function () {\n        if (stackStyle.style !== \"firefox\") {\n            return null;\n        }\n        var e = fluid.obtainException();\n        return fluid.exceptionDecoders[stackStyle.style](e);\n    };\n\n    fluid.exceptionDecoders.firefox = function (e) {\n        var delimiter = \"at \";\n        var lines = e.stack.replace(/(?:\\n@:0)?\\s+$/m, \"\").replace(/^\\(/gm, \"{anonymous}(\").split(\"\\n\");\n        return fluid.transform(lines, function (line) {\n            line = line.replace(/\\)/g, \"\");\n            var atind = line.indexOf(delimiter);\n            return atind === -1 ? [line] : [line.substring(atind + delimiter.length), line.substring(0, atind)];\n        });\n    };\n\n    // Main entry point for callers.\n    fluid.getCallerInfo = function (atDepth) {\n        atDepth = (atDepth || 3) - stackStyle.offset;\n        var stack = fluid.decodeStack();\n        var element = stack && stack[atDepth][0];\n        if (element) {\n            var lastslash = element.lastIndexOf(\"/\");\n            if (lastslash === -1) {\n                lastslash = 0;\n            }\n            var nextColon = element.indexOf(\":\", lastslash);\n            return {\n                path: element.substring(0, lastslash),\n                filename: element.substring(lastslash + 1, nextColon),\n                index: element.substring(nextColon + 1)\n            };\n        } else {\n            return null;\n        }\n    };\n\n    /** Generates a string for padding purposes by replicating a character a given number of times\n     * @param c {Character} A character to be used for padding\n     * @param count {Integer} The number of times to repeat the character\n     * @return A string of length <code>count</code> consisting of repetitions of the supplied character\n     */\n    // UNOPTIMISED\n    fluid.generatePadding = function (c, count) {\n        var togo = \"\";\n        for (var i = 0; i < count; ++i) {\n            togo += c;\n        }\n        return togo;\n    };\n\n    // Marker so that we can render a custom string for properties which are not direct and concrete\n    fluid.SYNTHETIC_PROPERTY = {};\n\n    // utility to avoid triggering custom getter code which could throw an exception - e.g. express 3.x's request object\n    fluid.getSafeProperty = function (obj, key) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key); // supported on all of our environments - is broken on IE8\n        return desc && !desc.get ? obj[key] : fluid.SYNTHETIC_PROPERTY;\n    };\n\n    function printImpl(obj, small, options) {\n        function out(str) {\n            options.output += str;\n        }\n        var big = small + options.indentChars, isFunction = typeof(obj) === \"function\";\n        if (options.maxRenderChars !== undefined && options.output.length > options.maxRenderChars) {\n            return true;\n        }\n        if (obj === null) {\n            out(\"null\");\n        } else if (obj === undefined) {\n            out(\"undefined\"); // NB - object invalid for JSON interchange\n        } else if (obj === fluid.SYNTHETIC_PROPERTY) {\n            out(\"[Synthetic property]\");\n        } else if (fluid.isPrimitive(obj) && !isFunction) {\n            out(JSON.stringify(obj));\n        }\n        else {\n            if (options.stack.indexOf(obj) !== -1) {\n                out(\"(CIRCULAR)\"); // NB - object invalid for JSON interchange\n                return;\n            }\n            options.stack.push(obj);\n            var i;\n            if (fluid.isArrayable(obj)) {\n                if (obj.length === 0) {\n                    out(\"[]\");\n                } else {\n                    out(\"[\\n\" + big);\n                    for (i = 0; i < obj.length; ++i) {\n                        if (printImpl(obj[i], big, options)) {\n                            return true;\n                        }\n                        if (i !== obj.length - 1) {\n                            out(\",\\n\" + big);\n                        }\n                    }\n                    out(\"\\n\" + small + \"]\");\n                }\n            }\n            else {\n                out(\"{\" + (isFunction ? \" Function\" : \"\") + \"\\n\" + big); // NB - Function object invalid for JSON interchange\n                var keys = fluid.keys(obj);\n                for (i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    var value = fluid.getSafeProperty(obj, key);\n                    out(JSON.stringify(key) + \": \");\n                    if (printImpl(value, big, options)) {\n                        return true;\n                    }\n                    if (i !== keys.length - 1) {\n                        out(\",\\n\" + big);\n                    }\n                }\n                out(\"\\n\" + small + \"}\");\n            }\n            options.stack.pop();\n        }\n        return;\n    }\n\n    /** Render a complex JSON object into a nicely indented format suitable for human readability.\n     * @param obj {Object} The object to be rendered\n     * @param options {Object} An options structure governing the rendering process. This supports the following options:\n     *     <code>indent</code> {Integer} the number of space characters to be used to indent each level of containment (default value: 4)\n     *     <code>maxRenderChars</code> {Integer} rendering the object will cease once this number of characters has been generated\n     */\n    fluid.prettyPrintJSON = function (obj, options) {\n        options = $.extend({indent: 4, stack: [], output: \"\"}, options);\n        options.indentChars = fluid.generatePadding(\" \", options.indent);\n        printImpl(obj, \"\", options);\n        return options.output;\n    };\n\n    /**\n     * Dumps a DOM element into a readily recognisable form for debugging - produces a\n     * \"semi-selector\" summarising its tag name, class and id, whichever are set.\n     *\n     * @param {jQueryable} element The element to be dumped\n     * @return A string representing the element.\n     */\n    fluid.dumpEl = function (element) {\n        var togo;\n\n        if (!element) {\n            return \"null\";\n        }\n        if (element.nodeType === 3 || element.nodeType === 8) {\n            return \"[data: \" + element.data + \"]\";\n        }\n        if (element.nodeType === 9) {\n            return \"[document: location \" + element.location + \"]\";\n        }\n        if (!element.nodeType && fluid.isArrayable(element)) {\n            togo = \"[\";\n            for (var i = 0; i < element.length; ++i) {\n                togo += fluid.dumpEl(element[i]);\n                if (i < element.length - 1) {\n                    togo += \", \";\n                }\n            }\n            return togo + \"]\";\n        }\n        element = $(element);\n        togo = element.get(0).tagName;\n        if (element.id) {\n            togo += \"#\" + element.id;\n        }\n        if (element.attr(\"class\")) {\n            togo += \".\" + element.attr(\"class\");\n        }\n        return togo;\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2011-2016 OCAD University\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2012-2014 Raising the Floor - US\nCopyright 2014-2016 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    /** NOTE: The contents of this file are by default NOT PART OF THE PUBLIC FLUID API unless explicitly annotated before the function **/\n\n    /** The Fluid \"IoC System proper\" - resolution of references and\n     * completely automated instantiation of declaratively defined\n     * component trees */\n\n    // Currently still uses manual traversal - once we ban manually instantiated components,\n    // it will use the instantiator's records instead.\n    fluid.visitComponentChildren = function (that, visitor, options, segs) {\n        segs = segs || [];\n        for (var name in that) {\n            var component = that[name];\n            // This entire algorithm is primitive and expensive and will be removed once we can abolish manual init components\n            if (!fluid.isComponent(component) || (options.visited && options.visited[component.id])) {\n                continue;\n            }\n            segs.push(name);\n            if (options.visited) { // recall that this is here because we may run into a component that has been cross-injected which might otherwise cause cyclicity\n                options.visited[component.id] = true;\n            }\n            if (visitor(component, name, segs, segs.length - 1)) {\n                return true;\n            }\n            if (!options.flat) {\n                fluid.visitComponentChildren(component, visitor, options, segs);\n            }\n            segs.pop();\n        }\n    };\n\n    fluid.getContextHash = function (instantiator, that) {\n        var shadow = instantiator.idToShadow[that.id];\n        return shadow && shadow.contextHash;\n    };\n\n    fluid.componentHasGrade = function (that, gradeName) {\n        var contextHash = fluid.getContextHash(fluid.globalInstantiator, that);\n        return !!(contextHash && contextHash[gradeName]);\n    };\n\n    // A variant of fluid.visitComponentChildren that supplies the signature expected for fluid.matchIoCSelector\n    // this is: thatStack, contextHashes, memberNames, i - note, the supplied arrays are NOT writeable and shared through the iteration\n    fluid.visitComponentsForMatching = function (that, options, visitor) {\n        var instantiator = fluid.getInstantiator(that);\n        options = $.extend({\n            visited: {},\n            instantiator: instantiator\n        }, options);\n        var thatStack = [that];\n        var contextHashes = [fluid.getContextHash(instantiator, that)];\n        var visitorWrapper = function (component, name, segs) {\n            thatStack.length = 1;\n            contextHashes.length = 1;\n            for (var i = 0; i < segs.length; ++i) {\n                var child = thatStack[i][segs[i]];\n                thatStack[i + 1] = child;\n                contextHashes[i + 1] = fluid.getContextHash(instantiator, child) || {};\n            }\n            return visitor(component, thatStack, contextHashes, segs, segs.length);\n        };\n        fluid.visitComponentChildren(that, visitorWrapper, options, []);\n    };\n\n    fluid.getMemberNames = function (instantiator, thatStack) {\n        if (thatStack.length === 0) { // Odd edge case for FLUID-6126 from fluid.computeDistributionPriority\n            return [];\n        } else {\n            var path = instantiator.idToPath(thatStack[thatStack.length - 1].id);\n            var segs = instantiator.parseEL(path);\n                // TODO: we should now have no longer shortness in the stack\n            segs.unshift.apply(segs, fluid.generate(thatStack.length - segs.length, \"\"));\n            return segs;\n        }\n    };\n\n    // thatStack contains an increasing list of MORE SPECIFIC thats.\n    // this visits all components starting from the current location (end of stack)\n    // in visibility order UP the tree.\n    fluid.visitComponentsForVisibility = function (instantiator, thatStack, visitor, options) {\n        options = options || {\n            visited: {},\n            flat: true,\n            instantiator: instantiator\n        };\n        var memberNames = fluid.getMemberNames(instantiator, thatStack);\n        for (var i = thatStack.length - 1; i >= 0; --i) {\n            var that = thatStack[i];\n\n            // explicitly visit the direct parent first\n            options.visited[that.id] = true;\n            if (visitor(that, memberNames[i], memberNames, i)) {\n                return;\n            }\n\n            if (fluid.visitComponentChildren(that, visitor, options, memberNames)) {\n                return;\n            }\n            memberNames.pop();\n        }\n    };\n\n    fluid.mountStrategy = function (prefix, root, toMount) {\n        var offset = prefix.length;\n        return function (target, name, i, segs) {\n            if (i <= prefix.length) { // Avoid OOB to not trigger deoptimisation!\n                return;\n            }\n            for (var j = 0; j < prefix.length; ++j) {\n                if (segs[j] !== prefix[j]) {\n                    return;\n                }\n            }\n            return toMount(target, name, i - prefix.length, segs.slice(offset));\n        };\n    };\n\n    fluid.invokerFromRecord = function (invokerec, name, that) {\n        fluid.pushActivity(\"makeInvoker\", \"beginning instantiation of invoker with name %name and record %record as child of %that\",\n            {name: name, record: invokerec, that: that});\n        var invoker = invokerec ? fluid.makeInvoker(that, invokerec, name) : undefined;\n        fluid.popActivity();\n        return invoker;\n    };\n\n    fluid.memberFromRecord = function (memberrecs, name, that) {\n        var togo;\n        for (var i = 0; i < memberrecs.length; ++i) { // memberrecs is the special \"fluid.mergingArray\" type which is not Arrayable\n            var expanded = fluid.expandImmediate(memberrecs[i], that);\n            if (!fluid.isPlainObject(togo)) { // poor man's \"merge\" algorithm to hack FLUID-5668 for now\n                togo = expanded;\n            } else {\n                togo = $.extend(true, togo, expanded);\n            }\n        }\n        return togo;\n    };\n\n    fluid.recordStrategy = function (that, options, optionsStrategy, recordPath, recordMaker, prefix, exceptions) {\n        prefix = prefix || [];\n        return {\n            strategy: function (target, name, i) {\n                if (i !== 1) {\n                    return;\n                }\n                var record = fluid.driveStrategy(options, [recordPath, name], optionsStrategy);\n                if (record === undefined) {\n                    return;\n                }\n                fluid.set(target, [name], fluid.inEvaluationMarker);\n                var member = recordMaker(record, name, that);\n                fluid.set(target, [name], member);\n                return member;\n            },\n            initter: function () {\n                var records = fluid.driveStrategy(options, recordPath, optionsStrategy) || {};\n                for (var name in records) {\n                    if (!exceptions || !exceptions[name]) {\n                        fluid.getForComponent(that, prefix.concat([name]));\n                    }\n                }\n            }\n        };\n    };\n\n    // patch Fluid.js version for timing\n    fluid.instantiateFirers = function (that) {\n        var shadow = fluid.shadowForComponent(that);\n        var initter = fluid.get(shadow, [\"eventStrategyBlock\", \"initter\"]) || fluid.identity;\n        initter();\n    };\n\n    fluid.makeDistributionRecord = function (contextThat, sourceRecord, sourcePath, targetSegs, exclusions, sourceType) {\n        sourceType = sourceType || \"distribution\";\n        fluid.pushActivity(\"makeDistributionRecord\", \"Making distribution record from source record %sourceRecord path %sourcePath to target path %targetSegs\", {sourceRecord: sourceRecord, sourcePath: sourcePath, targetSegs: targetSegs});\n\n        var source = fluid.copy(fluid.get(sourceRecord, sourcePath));\n        fluid.each(exclusions, function (exclusion) {\n            fluid.model.applyChangeRequest(source, {segs: exclusion, type: \"DELETE\"});\n        });\n\n        var record = {options: {}};\n        fluid.model.applyChangeRequest(record, {segs: targetSegs, type: \"ADD\", value: source});\n        fluid.checkComponentRecord(record);\n        fluid.popActivity();\n        return $.extend(record, {contextThat: contextThat, recordType: sourceType});\n    };\n\n    // Part of the early \"distributeOptions\" workflow. Given the description of the blocks to be distributed, assembles \"canned\" records\n    // suitable to be either registered into the shadow record for later or directly pushed to an existing component, as well as honouring\n    // any \"removeSource\" annotations by removing these options from the source block.\n    fluid.filterBlocks = function (contextThat, sourceBlocks, sourceSegs, targetSegs, exclusions, removeSource) {\n        var togo = [];\n        fluid.each(sourceBlocks, function (block) {\n            var source = fluid.get(block.source, sourceSegs);\n            if (source !== undefined) {\n                togo.push(fluid.makeDistributionRecord(contextThat, block.source, sourceSegs, targetSegs, exclusions, block.recordType));\n                var rescued = $.extend({}, source);\n                if (removeSource) {\n                    fluid.model.applyChangeRequest(block.source, {segs: sourceSegs, type: \"DELETE\"});\n                }\n                fluid.each(exclusions, function (exclusion) {\n                    var orig = fluid.get(rescued, exclusion);\n                    fluid.set(block.source, sourceSegs.concat(exclusion), orig);\n                });\n            }\n        });\n        return togo;\n    };\n\n    // Use this peculiar signature since the actual component and shadow itself may not exist yet. Perhaps clean up with FLUID-4925\n    fluid.noteCollectedDistribution = function (parentShadow, memberName, distribution) {\n        fluid.model.setSimple(parentShadow, [\"collectedDistributions\", memberName, distribution.id], true);\n    };\n\n    fluid.isCollectedDistribution = function (parentShadow, memberName, distribution) {\n        return fluid.model.getSimple(parentShadow, [\"collectedDistributions\", memberName, distribution.id]);\n    };\n\n    fluid.clearCollectedDistributions = function (parentShadow, memberName) {\n        fluid.model.applyChangeRequest(parentShadow, {segs: [\"collectedDistributions\", memberName], type: \"DELETE\"});\n    };\n\n    fluid.collectDistributions = function (distributedBlocks, parentShadow, distribution, thatStack, contextHashes, memberNames, i) {\n        var lastMember = memberNames[memberNames.length - 1];\n        if (!fluid.isCollectedDistribution(parentShadow, lastMember, distribution) &&\n                fluid.matchIoCSelector(distribution.selector, thatStack, contextHashes, memberNames, i)) {\n            distributedBlocks.push.apply(distributedBlocks, distribution.blocks);\n            fluid.noteCollectedDistribution(parentShadow, lastMember, distribution);\n        }\n    };\n\n    // Slightly silly function to clean up the \"appliedDistributions\" records. In general we need to be much more aggressive both\n    // about clearing instantiation garbage (e.g. onCreate and most of the shadow)\n    // as well as caching frequently-used records such as the \"thatStack\" which\n    // would mean this function could be written in a sensible way\n    fluid.registerCollectedClearer = function (shadow, parentShadow, memberName) {\n        if (!shadow.collectedClearer && parentShadow) {\n            shadow.collectedClearer = function () {\n                fluid.clearCollectedDistributions(parentShadow, memberName);\n            };\n        }\n    };\n\n    fluid.receiveDistributions = function (parentThat, gradeNames, memberName, that) {\n        var instantiator = fluid.getInstantiator(parentThat || that);\n        var thatStack = instantiator.getThatStack(parentThat || that); // most specific is at end\n        thatStack.unshift(fluid.rootComponent);\n        var memberNames = fluid.getMemberNames(instantiator, thatStack);\n        var shadows = fluid.transform(thatStack, function (thisThat) {\n            return instantiator.idToShadow[thisThat.id];\n        });\n        var parentShadow = shadows[shadows.length - (parentThat ? 1 : 2)];\n        var contextHashes = fluid.getMembers(shadows, \"contextHash\");\n        if (parentThat) { // if called before construction of component from assembleCreatorArguments - NB this path will be abolished/amalgamated\n            memberNames.push(memberName);\n            contextHashes.push(fluid.gradeNamesToHash(gradeNames));\n            thatStack.push(that);\n        } else {\n            fluid.registerCollectedClearer(shadows[shadows.length - 1], parentShadow, memberNames[memberNames.length - 1]);\n        }\n        var distributedBlocks = [];\n        for (var i = 0; i < thatStack.length - 1; ++i) {\n            fluid.each(shadows[i].distributions, function (distribution) { // eslint-disable-line no-loop-func\n                fluid.collectDistributions(distributedBlocks, parentShadow, distribution, thatStack, contextHashes, memberNames, i);\n            });\n        }\n        return distributedBlocks;\n    };\n\n    fluid.computeTreeDistance = function (path1, path2) {\n        var i = 0;\n        while (i < path1.length && i < path2.length && path1[i] === path2[i]) {\n            ++i;\n        }\n        return path1.length + path2.length - 2*i; // eslint-disable-line space-infix-ops\n    };\n\n    // Called from applyDistributions (immediate application route) as well as mergeRecordsToList (pre-instantiation route) AS WELL AS assembleCreatorArguments (pre-pre-instantiation route)\n    fluid.computeDistributionPriority = function (targetThat, distributedBlock) {\n        if (!distributedBlock.priority) {\n            var instantiator = fluid.getInstantiator(targetThat);\n            var targetStack = instantiator.getThatStack(targetThat);\n            var targetPath = fluid.getMemberNames(instantiator, targetStack);\n            var sourceStack = instantiator.getThatStack(distributedBlock.contextThat);\n            var sourcePath = fluid.getMemberNames(instantiator, sourceStack);\n            var distance = fluid.computeTreeDistance(targetPath, sourcePath);\n            distributedBlock.priority = fluid.mergeRecordTypes.distribution - distance;\n        }\n        return distributedBlock;\n    };\n\n    // convert \"preBlocks\" as produced from fluid.filterBlocks into \"real blocks\" suitable to be used by the expansion machinery.\n    fluid.applyDistributions = function (that, preBlocks, targetShadow) {\n        var distributedBlocks = fluid.transform(preBlocks, function (preBlock) {\n            return fluid.generateExpandBlock(preBlock, that, targetShadow.mergePolicy);\n        }, function (distributedBlock) {\n            return fluid.computeDistributionPriority(that, distributedBlock);\n        });\n        var mergeOptions = targetShadow.mergeOptions;\n        mergeOptions.mergeBlocks.push.apply(mergeOptions.mergeBlocks, distributedBlocks);\n        mergeOptions.updateBlocks();\n        return distributedBlocks;\n    };\n\n    // TODO: This implementation is obviously poor and has numerous flaws - in particular it does no backtracking as well as matching backwards through the selector\n    fluid.matchIoCSelector = function (selector, thatStack, contextHashes, memberNames, i) {\n        var thatpos = thatStack.length - 1;\n        var selpos = selector.length - 1;\n        while (true) {\n            var mustMatchHere = thatpos === thatStack.length - 1 || selector[selpos].child;\n\n            var that = thatStack[thatpos];\n            var selel = selector[selpos];\n            var match = true;\n            for (var j = 0; j < selel.predList.length; ++j) {\n                var pred = selel.predList[j];\n                if (pred.context && !(contextHashes[thatpos][pred.context] || memberNames[thatpos] === pred.context)) {\n                    match = false;\n                    break;\n                }\n                if (pred.id && that.id !== pred.id) {\n                    match = false;\n                    break;\n                }\n            }\n            if (selpos === 0 && thatpos > i && mustMatchHere) {\n                match = false; // child selector must exhaust stack completely - FLUID-5029\n            }\n            if (match) {\n                if (selpos === 0) {\n                    return true;\n                }\n                --thatpos;\n                --selpos;\n            }\n            else {\n                if (mustMatchHere) {\n                    return false;\n                }\n                else {\n                    --thatpos;\n                }\n            }\n            if (thatpos < i) {\n                return false;\n            }\n        }\n    };\n\n    /** Query for all components matching a selector in a particular tree\n     * @param root {Component} The root component at which to start the search\n     * @param selector {String} An IoCSS selector, in form of a string. Note that since selectors supplied to this function implicitly\n     * match downwards, they need not contain the \"head context\" followed by whitespace required in the distributeOptions form. E.g.\n     * simply <code>\"fluid.viewComponent\"</code> will match all viewComponents below the root.\n     * @param flat {Boolean} [Optional] <code>true</code> if the search should just be performed at top level of the component tree\n     * Note that with <code>flat=true</code> this search will scan every component in the tree and may well be very slow.\n     */\n    // supported, PUBLIC API function\n    fluid.queryIoCSelector = function (root, selector, flat) {\n        var parsed = fluid.parseSelector(selector, fluid.IoCSSMatcher);\n        var togo = [];\n\n        fluid.visitComponentsForMatching(root, {flat: flat}, function (that, thatStack, contextHashes, memberNames, i) {\n            if (fluid.matchIoCSelector(parsed, thatStack, contextHashes, memberNames, i)) {\n                togo.push(that);\n            }\n        });\n        return togo;\n    };\n\n    fluid.isIoCSSSelector = function (context) {\n        return context.indexOf(\" \") !== -1; // simple-minded check for an IoCSS reference\n    };\n\n    fluid.pushDistributions = function (targetHead, selector, target, blocks) {\n        var targetShadow = fluid.shadowForComponent(targetHead);\n        var id = fluid.allocateGuid();\n        var distribution = {\n            id: id, // This id is used in clearDistributions\n            target: target, // Here for improved debuggability - info is duplicated in \"selector\"\n            selector: selector,\n            blocks: blocks\n        };\n        Object.freeze(distribution);\n        Object.freeze(distribution.blocks);\n        fluid.pushArray(targetShadow, \"distributions\", distribution);\n        return id;\n    };\n\n    fluid.clearDistribution = function (targetHead, id) {\n        var targetShadow = fluid.shadowForComponent(targetHead);\n        fluid.remove_if(targetShadow.distributions, function (distribution) {\n            return distribution.id === id;\n        });\n    };\n\n    fluid.clearDistributions = function (shadow) {\n        fluid.each(shadow.outDistributions, function (outDist) {\n            fluid.clearDistribution(outDist.targetComponent, outDist.distributionId);\n        });\n    };\n\n    // Modifies a parsed selector to extract and remove its head context which will be matched upwards\n    fluid.extractSelectorHead = function (parsedSelector) {\n        var predList = parsedSelector[0].predList;\n        var context = predList[0].context;\n        predList.length = 0;\n        return context;\n    };\n\n    fluid.parseExpectedOptionsPath = function (path, role) {\n        var segs = fluid.model.parseEL(path);\n        if (segs[0] !== \"options\") {\n            fluid.fail(\"Error in options distribution path \", path, \" - only \" + role + \" paths beginning with \\\"options\\\" are supported\");\n        }\n        return segs.slice(1);\n    };\n\n    fluid.replicateProperty = function (source, property, targets) {\n        if (source[property] !== undefined) {\n            fluid.each(targets, function (target) {\n                target[property] = source[property];\n            });\n        }\n    };\n\n    fluid.undistributableOptions = [\"gradeNames\", \"distributeOptions\", \"argumentMap\", \"initFunction\", \"mergePolicy\", \"progressiveCheckerOptions\"]; // automatically added to \"exclusions\" of every distribution\n\n    fluid.distributeOptions = function (that, optionsStrategy) {\n        var thatShadow = fluid.shadowForComponent(that);\n        var records = fluid.driveStrategy(that.options, \"distributeOptions\", optionsStrategy);\n        fluid.each(records, function distributeOptionsOne(record) {\n            fluid.pushActivity(\"distributeOptions\", \"parsing distributeOptions block %record %that \", {that: that, record: record});\n            if (typeof(record.target) !== \"string\") {\n                fluid.fail(\"Error in options distribution record \", record, \" a member named \\\"target\\\" must be supplied holding an IoC reference\");\n            }\n            if (typeof(record.source) === \"string\" ^ record.record === undefined) {\n                fluid.fail(\"Error in options distribution record \", record, \": must supply either a member \\\"source\\\" holding an IoC reference or a member \\\"record\\\" holding a literal record\");\n            }\n            var targetRef = fluid.parseContextReference(record.target);\n            var targetComp, selector, context;\n            if (fluid.isIoCSSSelector(targetRef.context)) {\n                selector = fluid.parseSelector(targetRef.context, fluid.IoCSSMatcher);\n                var headContext = fluid.extractSelectorHead(selector);\n                if (headContext === \"/\") {\n                    targetComp = fluid.rootComponent;\n                } else {\n                    context = headContext;\n                }\n            }\n            else {\n                context = targetRef.context;\n            }\n            targetComp = targetComp || fluid.resolveContext(context, that);\n            if (!targetComp) {\n                fluid.fail(\"Error in options distribution record \", record, \" - could not resolve context {\" + context + \"} to a root component\");\n            }\n            var targetSegs = fluid.model.parseEL(targetRef.path);\n            var preBlocks;\n            if (record.record !== undefined) {\n                preBlocks = [(fluid.makeDistributionRecord(that, record.record, [], targetSegs, []))];\n            }\n            else {\n                var source = fluid.parseContextReference(record.source);\n                if (source.context !== \"that\") {\n                    fluid.fail(\"Error in options distribution record \", record, \" only a context of {that} is supported\");\n                }\n                var sourceSegs = fluid.parseExpectedOptionsPath(source.path, \"source\");\n                var fullExclusions = fluid.makeArray(record.exclusions).concat(sourceSegs.length === 0 ? fluid.undistributableOptions : []);\n\n                var exclusions = fluid.transform(fullExclusions, function (exclusion) {\n                    return fluid.model.parseEL(exclusion);\n                });\n\n                preBlocks = fluid.filterBlocks(that, thatShadow.mergeOptions.mergeBlocks, sourceSegs, targetSegs, exclusions, record.removeSource);\n                thatShadow.mergeOptions.updateBlocks(); // perhaps unnecessary\n            }\n            fluid.replicateProperty(record, \"priority\", preBlocks);\n            fluid.replicateProperty(record, \"namespace\", preBlocks);\n            // TODO: inline material has to be expanded in its original context!\n\n            if (selector) {\n                var distributionId = fluid.pushDistributions(targetComp, selector, record.target, preBlocks);\n                thatShadow.outDistributions = thatShadow.outDistributions || [];\n                thatShadow.outDistributions.push({\n                    targetComponent: targetComp,\n                    distributionId: distributionId\n                });\n            }\n            else { // The component exists now, we must rebalance it\n                var targetShadow = fluid.shadowForComponent(targetComp);\n                fluid.applyDistributions(that, preBlocks, targetShadow);\n            }\n            fluid.popActivity();\n        });\n    };\n\n    fluid.gradeNamesToHash = function (gradeNames) {\n        var contextHash = {};\n        fluid.each(gradeNames, function (gradeName) {\n            contextHash[gradeName] = true;\n            contextHash[fluid.computeNickName(gradeName)] = true;\n        });\n        return contextHash;\n    };\n\n    fluid.cacheShadowGrades = function (that, shadow) {\n        var contextHash = fluid.gradeNamesToHash(that.options.gradeNames);\n        if (!contextHash[shadow.memberName]) {\n            contextHash[shadow.memberName] = \"memberName\"; // This is filtered out again in recordComponent - TODO: Ensure that ALL resolution uses the scope chain eventually\n        }\n        shadow.contextHash = contextHash;\n        fluid.each(contextHash, function (troo, context) {\n            shadow.ownScope[context] = that;\n            if (shadow.parentShadow && shadow.parentShadow.that.type !== \"fluid.rootComponent\") {\n                shadow.parentShadow.childrenScope[context] = that;\n            }\n        });\n    };\n\n    // First sequence point where the mergeOptions strategy is delivered from Fluid.js - here we take care\n    // of both receiving and transmitting options distributions\n    fluid.deliverOptionsStrategy = function (that, target, mergeOptions) {\n        var shadow = fluid.shadowForComponent(that, shadow);\n        fluid.cacheShadowGrades(that, shadow);\n        shadow.mergeOptions = mergeOptions;\n    };\n\n    /** Dynamic grade closure algorithm - the following 4 functions share access to a small record structure \"rec\" which is\n     * constructed at the start of fluid.computeDynamicGrades\n     */\n\n    fluid.collectDistributedGrades = function (rec) {\n        // Receive distributions first since these may cause arrival of more contextAwareness blocks.\n        var distributedBlocks = fluid.receiveDistributions(null, null, null, rec.that);\n        if (distributedBlocks.length > 0) {\n            var readyBlocks = fluid.applyDistributions(rec.that, distributedBlocks, rec.shadow);\n            var gradeNamesList = fluid.transform(fluid.getMembers(readyBlocks, [\"source\", \"gradeNames\"]), fluid.makeArray);\n            fluid.accumulateDynamicGrades(rec, fluid.flatten(gradeNamesList));\n        }\n    };\n\n    // Apply a batch of freshly acquired plain dynamic grades to the target component and recompute its options\n    fluid.applyDynamicGrades = function (rec) {\n        rec.oldGradeNames = fluid.makeArray(rec.gradeNames);\n        // Note that this crude algorithm doesn't allow us to determine which grades are \"new\" and which not // TODO: can no longer interpret comment\n        var newDefaults = fluid.copy(fluid.getMergedDefaults(rec.that.typeName, rec.gradeNames));\n        rec.gradeNames.length = 0; // acquire derivatives of dynamic grades (FLUID-5054)\n        rec.gradeNames.push.apply(rec.gradeNames, newDefaults.gradeNames);\n\n        fluid.each(rec.gradeNames, function (gradeName) {\n            if (!fluid.isIoCReference(gradeName)) {\n                rec.seenGrades[gradeName] = true;\n            }\n        });\n\n        var shadow = rec.shadow;\n        fluid.cacheShadowGrades(rec.that, shadow);\n        // This cheap strategy patches FLUID-5091 for now - some more sophisticated activity will take place\n        // at this site when we have a full fix for FLUID-5028\n        shadow.mergeOptions.destroyValue([\"mergePolicy\"]);\n        shadow.mergeOptions.destroyValue([\"components\"]);\n        shadow.mergeOptions.destroyValue([\"invokers\"]);\n\n        rec.defaultsBlock.source = newDefaults;\n        shadow.mergeOptions.updateBlocks();\n        shadow.mergeOptions.computeMergePolicy(); // TODO: we should really only do this if its content changed - this implies moving all options evaluation over to some (cheap) variety of the ChangeApplier\n\n        fluid.accumulateDynamicGrades(rec, newDefaults.gradeNames);\n    };\n\n    // Filter some newly discovered grades into their plain and dynamic queues\n    fluid.accumulateDynamicGrades = function (rec, newGradeNames) {\n        fluid.each(newGradeNames, function (gradeName) {\n            if (!rec.seenGrades[gradeName]) {\n                if (fluid.isIoCReference(gradeName)) {\n                    rec.rawDynamic.push(gradeName);\n                    rec.seenGrades[gradeName] = true;\n                } else if (!fluid.contains(rec.oldGradeNames, gradeName)) {\n                    rec.plainDynamic.push(gradeName);\n                }\n            }\n        });\n    };\n\n    fluid.computeDynamicGrades = function (that, shadow, strategy) {\n        delete that.options.gradeNames; // Recompute gradeNames for FLUID-5012 and others\n        var gradeNames = fluid.driveStrategy(that.options, \"gradeNames\", strategy); // Just acquire the reference and force eval of mergeBlocks \"target\", contents are wrong\n        gradeNames.length = 0;\n        // TODO: In complex distribution cases, a component might end up with multiple default blocks\n        var defaultsBlock = fluid.findMergeBlocks(shadow.mergeOptions.mergeBlocks, \"defaults\")[0];\n\n        var rec = {\n            that: that,\n            shadow: shadow,\n            defaultsBlock: defaultsBlock,\n            gradeNames: gradeNames, // remember that this array is globally shared\n            seenGrades: {},\n            plainDynamic: [],\n            rawDynamic: []\n        };\n        fluid.each(shadow.mergeOptions.mergeBlocks, function (block) { // acquire parents of earlier blocks before applying later ones\n            gradeNames.push.apply(gradeNames, fluid.makeArray(block.target && block.target.gradeNames));\n            fluid.applyDynamicGrades(rec);\n        });\n        fluid.collectDistributedGrades(rec);\n        while (true) {\n            while (rec.plainDynamic.length > 0) {\n                gradeNames.push.apply(gradeNames, rec.plainDynamic);\n                rec.plainDynamic.length = 0;\n                fluid.applyDynamicGrades(rec);\n                fluid.collectDistributedGrades(rec);\n            }\n            if (rec.rawDynamic.length > 0) {\n                var expanded = fluid.expandImmediate(rec.rawDynamic.shift(), that, shadow.localDynamic);\n                if (typeof(expanded) === \"function\") {\n                    expanded = expanded();\n                }\n                if (expanded) {\n                    rec.plainDynamic = rec.plainDynamic.concat(expanded);\n                }\n            } else {\n                break;\n            }\n        }\n\n        if (shadow.collectedClearer) {\n            shadow.collectedClearer();\n            delete shadow.collectedClearer;\n        }\n    };\n\n    fluid.computeDynamicComponentKey = function (recordKey, sourceKey) {\n        return recordKey + (sourceKey === 0 ? \"\" : \"-\" + sourceKey); // TODO: configurable name strategies\n    };\n\n    fluid.registerDynamicRecord = function (that, recordKey, sourceKey, record, toCensor) {\n        var key = fluid.computeDynamicComponentKey(recordKey, sourceKey);\n        var cRecord = fluid.copy(record);\n        delete cRecord[toCensor];\n        fluid.set(that.options, [\"components\", key], cRecord);\n        return key;\n    };\n\n    fluid.computeDynamicComponents = function (that, mergeOptions) {\n        var shadow = fluid.shadowForComponent(that);\n        var localSub = shadow.subcomponentLocal = {};\n        var records = fluid.driveStrategy(that.options, \"dynamicComponents\", mergeOptions.strategy);\n        fluid.each(records, function (record, recordKey) {\n            if (!record.sources && !record.createOnEvent) {\n                fluid.fail(\"Cannot process dynamicComponents record \", record, \" without a \\\"sources\\\" or \\\"createOnEvent\\\" entry\");\n            }\n            if (record.sources) {\n                var sources = fluid.expandOptions(record.sources, that);\n                fluid.each(sources, function (source, sourceKey) {\n                    var key = fluid.registerDynamicRecord(that, recordKey, sourceKey, record, \"sources\");\n                    localSub[key] = {\"source\": source, \"sourcePath\": sourceKey};\n                });\n            }\n            else if (record.createOnEvent) {\n                var event = fluid.event.expandOneEvent(that, record.createOnEvent);\n                fluid.set(shadow, [\"dynamicComponentCount\", recordKey], 0);\n                var listener = function () {\n                    var key = fluid.registerDynamicRecord(that, recordKey, shadow.dynamicComponentCount[recordKey]++, record, \"createOnEvent\");\n                    var localRecord = {\"arguments\": fluid.makeArray(arguments)};\n                    fluid.initDependent(that, key, localRecord);\n                };\n                event.addListener(listener);\n                fluid.recordListener(event, listener, shadow);\n            }\n        });\n    };\n\n    // Second sequence point for mergeOptions from Fluid.js - here we construct all further\n    // strategies required on the IoC side and mount them into the shadow's getConfig for universal use\n    fluid.computeComponentAccessor = function (that, localRecord) {\n        var instantiator = fluid.globalInstantiator;\n        var shadow = fluid.shadowForComponent(that);\n        shadow.localDynamic = localRecord; // for signalling to dynamic grades from dynamic components\n        var options = that.options;\n        var strategy = shadow.mergeOptions.strategy;\n        var optionsStrategy = fluid.mountStrategy([\"options\"], options, strategy);\n        shadow.invokerStrategy = fluid.recordStrategy(that, options, strategy, \"invokers\", fluid.invokerFromRecord);\n        shadow.eventStrategyBlock = fluid.recordStrategy(that, options, strategy, \"events\", fluid.eventFromRecord, [\"events\"]);\n        var eventStrategy = fluid.mountStrategy([\"events\"], that, shadow.eventStrategyBlock.strategy, [\"events\"]);\n        shadow.memberStrategy = fluid.recordStrategy(that, options, strategy, \"members\", fluid.memberFromRecord, null, {model: true, modelRelay: true});\n        // NB - ginger strategy handles concrete, rationalise\n        shadow.getConfig = {strategies: [fluid.model.funcResolverStrategy, fluid.makeGingerStrategy(that),\n            optionsStrategy, shadow.invokerStrategy.strategy, shadow.memberStrategy.strategy, eventStrategy]};\n\n        fluid.computeDynamicGrades(that, shadow, strategy, shadow.mergeOptions.mergeBlocks);\n        fluid.distributeOptions(that, strategy);\n        if (shadow.contextHash[\"fluid.resolveRoot\"]) {\n            var memberName;\n            if (shadow.contextHash[\"fluid.resolveRootSingle\"]) {\n                var singleRootType = fluid.getForComponent(that, [\"options\", \"singleRootType\"]);\n                if (!singleRootType) {\n                    fluid.fail(\"Cannot register object with grades \" + Object.keys(shadow.contextHash).join(\", \") + \" as fluid.resolveRootSingle since it has not defined option singleRootType\");\n                }\n                memberName = fluid.typeNameToMemberName(singleRootType);\n            } else {\n                memberName = fluid.computeGlobalMemberName(that);\n            }\n            var parent = fluid.resolveRootComponent;\n            if (parent[memberName]) {\n                instantiator.clearComponent(parent, memberName);\n            }\n            instantiator.recordKnownComponent(parent, that, memberName, false);\n        }\n\n        return shadow.getConfig;\n    };\n\n    // About the SHADOW:\n    // Allocated at: instantiator's \"recordComponent\"\n    // Contents:\n    //     path {String} Principal allocated path (point of construction) in tree\n    //     that {Component} The component itself\n    //     contextHash {String to Boolean} Map of context names which this component matches\n    //     mergePolicy, mergeOptions: Machinery for last phase of options merging\n    //     invokerStrategy, eventStrategyBlock, memberStrategy, getConfig: Junk required to operate the accessor\n    //     listeners: Listeners registered during this component's construction, to be cleared during clearListeners\n    //     distributions, collectedClearer: Managing options distributions\n    //     outDistributions: A list of distributions registered from this component, signalling from distributeOptions to clearDistributions\n    //     subcomponentLocal: Signalling local record from computeDynamicComponents to assembleCreatorArguments\n    //     dynamicLocal: Local signalling for dynamic grades\n    //     ownScope: A hash of names to components which are in scope from this component - populated in cacheShadowGrades\n    //     childrenScope: A hash of names to components which are in scope because they are children of this component (BELOW own ownScope in resolution order)\n\n    fluid.shadowForComponent = function (component) {\n        var instantiator = fluid.getInstantiator(component);\n        return instantiator && component ? instantiator.idToShadow[component.id] : null;\n    };\n\n    // Access the member at a particular path in a component, forcing it to be constructed gingerly if necessary\n    // supported, PUBLIC API function\n    fluid.getForComponent = function (component, path) {\n        var shadow = fluid.shadowForComponent(component);\n        var getConfig = shadow ? shadow.getConfig : undefined;\n        return fluid.get(component, path, getConfig);\n    };\n\n    // An EL segment resolver strategy that will attempt to trigger creation of\n    // components that it discovers along the EL path, if they have been defined but not yet\n    // constructed.\n    fluid.makeGingerStrategy = function (that) {\n        var instantiator = fluid.getInstantiator(that);\n        return function (component, thisSeg, index, segs) {\n            var atval = component[thisSeg];\n            if (atval === fluid.inEvaluationMarker && index === segs.length) {\n                fluid.fail(\"Error in component configuration - a circular reference was found during evaluation of path segment \\\"\" + thisSeg +\n                    \"\\\": for more details, see the activity records following this message in the console, or issue fluid.setLogging(fluid.logLevel.TRACE) when running your application\");\n            }\n            if (index > 1) {\n                return atval;\n            }\n            if (atval === undefined && component.hasOwnProperty(thisSeg)) { // avoid recomputing properties that have been explicitly evaluated to undefined\n                return fluid.NO_VALUE;\n            }\n            if (atval === undefined) { // pick up components in instantiation here - we can cut this branch by attaching early\n                var parentPath = instantiator.idToShadow[component.id].path;\n                var childPath = instantiator.composePath(parentPath, thisSeg);\n                atval = instantiator.pathToComponent[childPath];\n            }\n            if (atval === undefined) {\n                // TODO: This check is very expensive - once gingerness is stable, we ought to be able to\n                // eagerly compute and cache the value of options.components - check is also incorrect and will miss injections\n                var subRecord = fluid.getForComponent(component, [\"options\", \"components\", thisSeg]);\n                if (subRecord) {\n                    if (subRecord.createOnEvent) {\n                        fluid.fail(\"Error resolving path segment \\\"\" + thisSeg + \"\\\" of path \" + segs.join(\".\") + \" since component with record \", subRecord,\n                            \" has annotation \\\"createOnEvent\\\" - this very likely represents an implementation error. Either alter the reference so it does not \" +\n                            \" match this component, or alter your workflow to ensure that the component is instantiated by the time this reference resolves\");\n                    }\n                    fluid.initDependent(component, thisSeg);\n                    atval = component[thisSeg];\n                }\n            }\n            return atval;\n        };\n    };\n\n    // Listed in dependence order\n    fluid.frameworkGrades = [\"fluid.component\", \"fluid.modelComponent\", \"fluid.viewComponent\", \"fluid.rendererComponent\"];\n\n    fluid.filterBuiltinGrades = function (gradeNames) {\n        return fluid.remove_if(fluid.makeArray(gradeNames), function (gradeName) {\n            return fluid.frameworkGrades.indexOf(gradeName) !== -1;\n        });\n    };\n\n    fluid.dumpGradeNames = function (that) {\n        return that.options && that.options.gradeNames ?\n            \" gradeNames: \" + JSON.stringify(fluid.filterBuiltinGrades(that.options.gradeNames)) : \"\";\n    };\n\n    fluid.dumpThat = function (that) {\n        return \"{ typeName: \\\"\" + that.typeName + \"\\\"\" + fluid.dumpGradeNames(that) + \" id: \" + that.id + \"}\";\n    };\n\n    fluid.dumpThatStack = function (thatStack, instantiator) {\n        var togo = fluid.transform(thatStack, function (that) {\n            var path = instantiator.idToPath(that.id);\n            return fluid.dumpThat(that) + (path ? (\" - path: \" + path) : \"\");\n        });\n        return togo.join(\"\\n\");\n    };\n\n    fluid.dumpComponentPath = function (that) {\n        var path = fluid.pathForComponent(that);\n        return path ? fluid.pathUtil.composeSegments(path) : \"** no path registered for component **\";\n    };\n\n    fluid.resolveContext = function (context, that, fast) {\n        if (context === \"that\") {\n            return that;\n        }\n        // TODO: Check performance impact of this type check introduced for FLUID-5903 in a very sensitive corner\n        if (typeof(context) === \"object\") {\n            var innerContext = fluid.resolveContext(context.context, that, fast);\n            if (!fluid.isComponent(innerContext)) {\n                fluid.triggerMismatchedPathError(context.context, that);\n            }\n            var rawValue = fluid.getForComponent(innerContext, context.path);\n            // TODO: Terrible, slow dispatch for this route\n            var expanded = fluid.expandOptions(rawValue, that);\n            if (!fluid.isComponent(expanded)) {\n                fluid.fail(\"Unable to resolve recursive context expression \" + fluid.renderContextReference(context) + \": the directly resolved value of \" + rawValue +\n                     \" did not resolve to a component in the scope of component \", that, \": got \", expanded);\n            }\n            return expanded;\n        } else {\n            var foundComponent;\n            var instantiator = fluid.globalInstantiator; // fluid.getInstantiator(that); // this hash lookup takes over 1us!\n            if (fast) {\n                var shadow = instantiator.idToShadow[that.id];\n                return shadow.ownScope[context];\n            } else {\n                var thatStack = instantiator.getFullStack(that);\n                fluid.visitComponentsForVisibility(instantiator, thatStack, function (component, name) {\n                    var shadow = fluid.shadowForComponent(component);\n                    // TODO: Some components, e.g. the static environment and typeTags do not have a shadow, which slows us down here\n                    if (context === name || shadow && shadow.contextHash && shadow.contextHash[context] || context === component.typeName) {\n                        foundComponent = component;\n                        return true; // YOUR VISIT IS AT AN END!!\n                    }\n                    if (fluid.getForComponent(component, [\"options\", \"components\", context]) && !component[context]) {\n          // This is an expensive guess since we make it for every component up the stack - must apply the WAVE OF EXPLOSIONS (FLUID-4925) to discover all components first\n          // This line attempts a hopeful construction of components that could be guessed by nickname through finding them unconstructed\n          // in options. In the near future we should eagerly BEGIN the process of constructing components, discovering their\n          // types and then attaching them to the tree VERY EARLY so that we get consistent results from different strategies.\n                        foundComponent = fluid.getForComponent(component, context);\n                        return true;\n                    }\n                });\n                return foundComponent;\n            }\n        }\n    };\n\n    fluid.triggerMismatchedPathError = function (parsed, parentThat) {\n        var ref = fluid.renderContextReference(parsed);\n        fluid.fail(\"Failed to resolve reference \" + ref + \" - could not match context with name \" +\n            parsed.context + \" from component \" + fluid.dumpThat(parentThat) + \" at path \" + fluid.dumpComponentPath(parentThat) + \" component: \" , parentThat);\n    };\n\n    fluid.makeStackFetcher = function (parentThat, localRecord, fast) {\n        var fetcher = function (parsed) {\n            if (parentThat && parentThat.lifecycleStatus === \"destroyed\") {\n                fluid.fail(\"Cannot resolve reference \" + fluid.renderContextReference(parsed) + \" from component \" + fluid.dumpThat(parentThat) + \" which has been destroyed\");\n            }\n            var context = parsed.context;\n            if (localRecord && context in localRecord) {\n                return fluid.get(localRecord[context], parsed.path);\n            }\n            var foundComponent = fluid.resolveContext(context, parentThat, fast);\n            if (!foundComponent && parsed.path !== \"\") {\n                fluid.triggerMismatchedPathError(parsed, parentThat);\n            }\n            return fluid.getForComponent(foundComponent, parsed.path);\n        };\n        return fetcher;\n    };\n\n    fluid.makeStackResolverOptions = function (parentThat, localRecord, fast) {\n        return $.extend(fluid.copy(fluid.rawDefaults(\"fluid.makeExpandOptions\")), {\n            localRecord: localRecord || {},\n            fetcher: fluid.makeStackFetcher(parentThat, localRecord, fast),\n            contextThat: parentThat,\n            exceptions: {members: {model: true, modelRelay: true}}\n        });\n    };\n\n    fluid.clearListeners = function (shadow) {\n        // TODO: bug here - \"afterDestroy\" listeners will be unregistered already unless they come from this component\n        fluid.each(shadow.listeners, function (rec) {\n            rec.event.removeListener(rec.listenerId || rec.listener);\n        });\n        delete shadow.listeners;\n    };\n\n    fluid.recordListener = function (event, listener, shadow, listenerId) {\n        if (event.ownerId !== shadow.that.id) { // don't bother recording listeners registered from this component itself\n            fluid.pushArray(shadow, \"listeners\", {event: event, listener: listener, listenerId: listenerId});\n        }\n    };\n\n    fluid.constructScopeObjects = function (instantiator, parent, child, childShadow) {\n        var parentShadow = parent ? instantiator.idToShadow[parent.id] : null;\n        childShadow.childrenScope = parentShadow ? Object.create(parentShadow.ownScope) : {};\n        childShadow.ownScope = Object.create(childShadow.childrenScope);\n        childShadow.parentShadow = parentShadow;\n    };\n\n    fluid.clearChildrenScope = function (instantiator, parentShadow, child, childShadow) {\n        fluid.each(childShadow.contextHash, function (troo, context) {\n            if (parentShadow.childrenScope[context] === child) {\n                delete parentShadow.childrenScope[context]; // TODO: ambiguous resolution\n            }\n        });\n    };\n\n    // unsupported, non-API function - however, this structure is of considerable interest to those debugging\n    // into IoC issues. The structures idToShadow and pathToComponent contain a complete map of the component tree\n    // forming the surrounding scope\n    fluid.instantiator = function () {\n        var that = fluid.typeTag(\"instantiator\");\n        $.extend(that, {\n            lifecycleStatus: \"constructed\",\n            pathToComponent: {},\n            idToShadow: {},\n            modelTransactions: {init: {}}, // a map of transaction id to map of component id to records of components enlisted in a current model initialisation transaction\n            composePath: fluid.model.composePath, // For speed, we declare that no component's name may contain a period\n            composeSegments: fluid.model.composeSegments,\n            parseEL: fluid.model.parseEL,\n            events: {\n                onComponentAttach: fluid.makeEventFirer({name: \"instantiator's onComponentAttach event\"}),\n                onComponentClear: fluid.makeEventFirer({name: \"instantiator's onComponentClear event\"})\n            }\n        });\n        // TODO: this API can shortly be removed\n        that.idToPath = function (id) {\n            var shadow = that.idToShadow[id];\n            return shadow ? shadow.path : \"\";\n        };\n        // Note - the returned stack is assumed writeable and does not include the root\n        that.getThatStack = function (component) {\n            var shadow = that.idToShadow[component.id];\n            if (shadow) {\n                var path = shadow.path;\n                var parsed = that.parseEL(path);\n                var root = that.pathToComponent[\"\"], togo = [];\n                for (var i = 0; i < parsed.length; ++i) {\n                    root = root[parsed[i]];\n                    togo.push(root);\n                }\n                return togo;\n            }\n            else { return [];}\n        };\n        that.getFullStack = function (component) {\n            var thatStack = component ? that.getThatStack(component) : [];\n            thatStack.unshift(fluid.resolveRootComponent);\n            return thatStack;\n        };\n        function recordComponent(parent, component, path, name, created) {\n            var shadow;\n            if (created) {\n                shadow = that.idToShadow[component.id] = {};\n                shadow.that = component;\n                shadow.path = path;\n                shadow.memberName = name;\n                fluid.constructScopeObjects(that, parent, component, shadow);\n            } else {\n                shadow = that.idToShadow[component.id];\n                shadow.injectedPaths = shadow.injectedPaths || {}; // a hash since we will modify whilst iterating\n                shadow.injectedPaths[path] = true;\n                var parentShadow = that.idToShadow[parent.id]; // structural parent shadow - e.g. resolveRootComponent\n                var keys = fluid.keys(shadow.contextHash);\n                fluid.remove_if(keys, function (key) {\n                    return shadow.contextHash && shadow.contextHash[key] === \"memberName\";\n                });\n                keys.push(name); // add local name - FLUID-5696 and FLUID-5820\n                fluid.each(keys, function (context) {\n                    if (!parentShadow.childrenScope[context]) {\n                        parentShadow.childrenScope[context] = component;\n                    }\n                });\n            }\n            if (that.pathToComponent[path]) {\n                fluid.fail(\"Error during instantiation - path \" + path + \" which has just created component \" + fluid.dumpThat(component) +\n                    \" has already been used for component \" + fluid.dumpThat(that.pathToComponent[path]) + \" - this is a circular instantiation or other oversight.\" +\n                    \" Please clear the component using instantiator.clearComponent() before reusing the path.\");\n            }\n            that.pathToComponent[path] = component;\n        }\n        that.recordRoot = function (component) {\n            recordComponent(null, component, \"\", \"\", true);\n        };\n        that.recordKnownComponent = function (parent, component, name, created) {\n            parent[name] = component;\n            if (fluid.isComponent(component) || component.type === \"instantiator\") {\n                var parentPath = that.idToShadow[parent.id].path;\n                var path = that.composePath(parentPath, name);\n                recordComponent(parent, component, path, name, created);\n                that.events.onComponentAttach.fire(component, path, that, created);\n            } else {\n                fluid.fail(\"Cannot record non-component with value \", component, \" at path \\\"\" + name + \"\\\" of parent \", parent);\n            }\n        };\n        that.clearConcreteComponent = function (record) {\n            // Clear injected instance of this component from all other paths - historically we didn't bother\n            // to do this since injecting into a shorter scope is an error - but now we have resolveRoot area\n            fluid.each(record.childShadow.injectedPaths, function (troo, injectedPath) {\n                var parentPath = fluid.model.getToTailPath(injectedPath);\n                var otherParent = that.pathToComponent[parentPath];\n                that.clearComponent(otherParent, fluid.model.getTailPath(injectedPath), record.child);\n            });\n            fluid.clearDistributions(record.childShadow);\n            fluid.clearListeners(record.childShadow);\n            fluid.fireEvent(record.child, \"afterDestroy\", [record.child, record.name, record.component]);\n            delete that.idToShadow[record.child.id];\n        };\n        that.clearComponent = function (component, name, child, options, nested, path) {\n            // options are visitor options for recursive driving\n            var shadow = that.idToShadow[component.id];\n            // use flat recursion since we want to use our own recursion rather than rely on \"visited\" records\n            options = options || {flat: true, instantiator: that, destroyRecs: []};\n            child = child || component[name];\n            path = path || shadow.path;\n            if (path === undefined) {\n                fluid.fail(\"Cannot clear component \" + name + \" from component \", component,\n                    \" which was not created by this instantiator\");\n            }\n\n            var childPath = that.composePath(path, name);\n            var childShadow = that.idToShadow[child.id];\n            if (!childShadow) { // Explicit FLUID-5812 check - this can be eliminated once we move visitComponentChildren to instantiator's records\n                return;\n            }\n            var created = childShadow.path === childPath;\n            that.events.onComponentClear.fire(child, childPath, component, created);\n\n            // only recurse on components which were created in place - if the id record disagrees with the\n            // recurse path, it must have been injected\n            if (created) {\n                fluid.visitComponentChildren(child, function (gchild, gchildname, segs, i) {\n                    var parentPath = that.composeSegments.apply(null, segs.slice(0, i));\n                    that.clearComponent(child, gchildname, null, options, true, parentPath);\n                }, options, that.parseEL(childPath));\n                fluid.doDestroy(child, name, component); // call \"onDestroy\", null out events and invokers, setting lifecycleStatus to \"destroyed\"\n                options.destroyRecs.push({child: child, childShadow: childShadow, name: name, component: component});\n            } else {\n                fluid.remove_if(childShadow.injectedPaths, function (troo, path) {\n                    return path === childPath;\n                });\n            }\n            fluid.clearChildrenScope(that, shadow, child, childShadow);\n            // Note that \"pathToComponent\" will not be available during afterDestroy. This is so that we can synchronously recreate the component\n            // in an afterDestroy listener (FLUID-5931). We don't clear up the shadow itself until after afterDestroy.\n            delete that.pathToComponent[childPath];\n            if (!nested) {\n                delete component[name]; // there may be no entry - if creation is not concluded\n                // Do actual destruction for the whole tree here, including \"afterDestroy\" and deleting shadows\n                fluid.each(options.destroyRecs, that.clearConcreteComponent);\n            }\n        };\n        return that;\n    };\n\n    // The global instantiator, holding all components instantiated in this context (instance of Infusion)\n    fluid.globalInstantiator = fluid.instantiator();\n\n    // Look up the globally registered instantiator for a particular component - we now only really support a\n    // single, global instantiator, but this method is left as a notation point in case this ever reverts\n    // Returns null if argument is a noncomponent or has no shadow\n    fluid.getInstantiator = function (component) {\n        var instantiator = fluid.globalInstantiator;\n        return component && instantiator.idToShadow[component.id] ? instantiator : null;\n    };\n\n    // The grade supplied to components which will be resolvable from all parts of the component tree\n    fluid.defaults(\"fluid.resolveRoot\");\n    // In addition to being resolvable at the root, \"resolveRootSingle\" component will have just a single instance available. Fresh\n    // instances will displace older ones.\n    fluid.defaults(\"fluid.resolveRootSingle\", {\n        gradeNames: \"fluid.resolveRoot\"\n    });\n\n    fluid.constructRootComponents = function (instantiator) {\n        // Instantiate the primordial components at the root of each context tree\n        fluid.rootComponent = instantiator.rootComponent = fluid.typeTag(\"fluid.rootComponent\");\n        instantiator.recordRoot(fluid.rootComponent);\n\n        // The component which for convenience holds injected instances of all components with fluid.resolveRoot grade\n        fluid.resolveRootComponent = instantiator.resolveRootComponent = fluid.typeTag(\"fluid.resolveRootComponent\");\n        instantiator.recordKnownComponent(fluid.rootComponent, fluid.resolveRootComponent, \"resolveRootComponent\", true);\n\n        // obliterate resolveRoot's scope objects and replace by the real root scope - which is unused by its own children\n        var rootShadow = instantiator.idToShadow[fluid.rootComponent.id];\n        rootShadow.contextHash = {}; // Fix for FLUID-6128\n        var resolveRootShadow = instantiator.idToShadow[fluid.resolveRootComponent.id];\n        resolveRootShadow.ownScope = rootShadow.ownScope;\n        resolveRootShadow.childrenScope = rootShadow.childrenScope;\n\n        instantiator.recordKnownComponent(fluid.resolveRootComponent, instantiator, \"instantiator\", true); // needs to have a shadow so it can be injected\n        resolveRootShadow.childrenScope.instantiator = instantiator; // needs to be mounted since it never passes through cacheShadowGrades\n    };\n\n    fluid.constructRootComponents(fluid.globalInstantiator); // currently a singleton - in future, alternative instantiators might come back\n\n    /** Expand a set of component options either immediately, or with deferred effect.\n     *  The current policy is to expand immediately function arguments within fluid.assembleCreatorArguments which are not the main options of a\n     *  component. The component's own options take <code>{defer: true}</code> as part of\n     *  <code>outerExpandOptions</code> which produces an \"expandOptions\" structure holding the \"strategy\" and \"initter\" pattern\n     *  common to ginger participants.\n     *  Probably not to be advertised as part of a public API, but is considerably more stable than most of the rest\n     *  of the IoC API structure especially with respect to the first arguments.\n     */\n\n// TODO: Can we move outerExpandOptions to 2nd place? only user of 3 and 4 is fluid.makeExpandBlock\n// TODO: Actually we want localRecord in 2nd place since outerExpandOptions is now almost disused\n    fluid.expandOptions = function (args, that, mergePolicy, localRecord, outerExpandOptions) {\n        if (!args) {\n            return args;\n        }\n        fluid.pushActivity(\"expandOptions\", \"expanding options %args for component %that \", {that: that, args: args});\n        var expandOptions = fluid.makeStackResolverOptions(that, localRecord);\n        expandOptions.mergePolicy = mergePolicy;\n        var expanded = outerExpandOptions && outerExpandOptions.defer ?\n            fluid.makeExpandOptions(args, expandOptions) : fluid.expand(args, expandOptions);\n        fluid.popActivity();\n        return expanded;\n    };\n\n    fluid.localRecordExpected = fluid.arrayToHash([\"type\", \"options\", \"container\", \"createOnEvent\", \"priority\", \"recordType\"]); // last element unavoidably polluting\n\n    fluid.checkComponentRecord = function (localRecord) {\n        fluid.each(localRecord, function (value, key) {\n            if (!fluid.localRecordExpected[key]) {\n                fluid.fail(\"Probable error in subcomponent record \", localRecord, \" - key \\\"\" + key +\n                    \"\\\" found, where the only legal options are \" +\n                    fluid.keys(fluid.localRecordExpected).join(\", \"));\n            }\n        });\n    };\n\n    fluid.mergeRecordsToList = function (that, mergeRecords) {\n        var list = [];\n        fluid.each(mergeRecords, function (value, key) {\n            value.recordType = key;\n            if (key === \"distributions\") {\n                list.push.apply(list, fluid.transform(value, function (distributedBlock) {\n                    return fluid.computeDistributionPriority(that, distributedBlock);\n                }));\n            }\n            else {\n                if (!value.options) { return; }\n                value.priority = fluid.mergeRecordTypes[key];\n                if (value.priority === undefined) {\n                    fluid.fail(\"Merge record with unrecognised type \" + key + \": \", value);\n                }\n                list.push(value);\n            }\n        });\n        return list;\n    };\n\n    // TODO: overall efficiency could huge be improved by resorting to the hated PROTOTYPALISM as an optimisation\n    // for this mergePolicy which occurs in every component. Although it is a deep structure, the root keys are all we need\n    var addPolicyBuiltins = function (policy) {\n        fluid.each([\"gradeNames\", \"mergePolicy\", \"argumentMap\", \"components\", \"dynamicComponents\", \"events\", \"listeners\", \"modelListeners\", \"modelRelay\", \"distributeOptions\", \"transformOptions\"], function (key) {\n            fluid.set(policy, [key, \"*\", \"noexpand\"], true);\n        });\n        return policy;\n    };\n\n    // used from Fluid.js\n    fluid.generateExpandBlock = function (record, that, mergePolicy, localRecord) {\n        var expanded = fluid.expandOptions(record.options, record.contextThat || that, mergePolicy, localRecord, {defer: true});\n        expanded.priority = record.priority;\n        expanded.namespace = record.namespace;\n        expanded.recordType = record.recordType;\n        return expanded;\n    };\n\n    var expandComponentOptionsImpl = function (mergePolicy, defaults, initRecord, that) {\n        var defaultCopy = fluid.copy(defaults);\n        addPolicyBuiltins(mergePolicy);\n        var shadow = fluid.shadowForComponent(that);\n        shadow.mergePolicy = mergePolicy;\n        var mergeRecords = {\n            defaults: {options: defaultCopy}\n        };\n\n        $.extend(mergeRecords, initRecord.mergeRecords);\n        // Do this here for gradeless components that were corrected by \"localOptions\"\n        if (mergeRecords.subcomponentRecord) {\n            fluid.checkComponentRecord(mergeRecords.subcomponentRecord);\n        }\n\n        var expandList = fluid.mergeRecordsToList(that, mergeRecords);\n\n        var togo = fluid.transform(expandList, function (value) {\n            return fluid.generateExpandBlock(value, that, mergePolicy, initRecord.localRecord);\n        });\n        return togo;\n    };\n\n    fluid.fabricateDestroyMethod = function (that, name, instantiator, child) {\n        return function () {\n            instantiator.clearComponent(that, name, child);\n        };\n    };\n\n    // Computes a name for a component appearing at the global root which is globally unique, from its nickName and id\n    fluid.computeGlobalMemberName = function (that) {\n        var nickName = fluid.computeNickName(that.typeName);\n        return nickName + \"-\" + that.id;\n    };\n\n    // Maps a type name to the member name to be used for it at a particular path level where it is intended to be unique\n    // Note that \".\" is still not supported within a member name\n    // supported, PUBLIC API function\n    fluid.typeNameToMemberName = function (typeName) {\n        return typeName.replace(/\\./g, \"_\");\n    };\n\n    // This is the initial entry point from the non-IoC side reporting the first presence of a new component - called from fluid.mergeComponentOptions\n    fluid.expandComponentOptions = function (mergePolicy, defaults, userOptions, that) {\n        var initRecord = userOptions; // might have been tunnelled through \"userOptions\" from \"assembleCreatorArguments\"\n        var instantiator = userOptions && userOptions.marker === fluid.EXPAND ? userOptions.instantiator : null;\n        fluid.pushActivity(\"expandComponentOptions\", \"expanding component options %options with record %record for component %that\",\n            {options: instantiator ? userOptions.mergeRecords.user : userOptions, record: initRecord, that: that});\n        if (!instantiator) { // it is a top-level component which needs to be attached to the global root\n            instantiator = fluid.globalInstantiator;\n            initRecord = { // upgrade \"userOptions\" to the same format produced by fluid.assembleCreatorArguments via the subcomponent route\n                mergeRecords: {user: {options: fluid.expandCompact(userOptions, true)}},\n                memberName: fluid.computeGlobalMemberName(that),\n                instantiator: instantiator,\n                parentThat: fluid.rootComponent\n            };\n        }\n        that.destroy = fluid.fabricateDestroyMethod(initRecord.parentThat, initRecord.memberName, instantiator, that);\n\n        instantiator.recordKnownComponent(initRecord.parentThat, that, initRecord.memberName, true);\n        var togo = expandComponentOptionsImpl(mergePolicy, defaults, initRecord, that);\n\n        fluid.popActivity();\n        return togo;\n    };\n\n    /** Given a typeName, determine the final concrete\n     * \"invocation specification\" consisting of a concrete global function name\n     * and argument list which is suitable to be executed directly by fluid.invokeGlobalFunction.\n     */\n    // options is just a disposition record containing memberName, componentRecord\n    fluid.assembleCreatorArguments = function (parentThat, typeName, options) {\n        var upDefaults = fluid.defaults(typeName); // we're not responsive to dynamic changes in argMap, but we don't believe in these anyway\n        if (!upDefaults || !upDefaults.argumentMap) {\n            fluid.fail(\"Error in assembleCreatorArguments: cannot look up component type name \" + typeName + \" to a component creator grade with an argumentMap\");\n        }\n\n        var fakeThat = {}; // fake \"that\" for receiveDistributions since we try to match selectors before creation for FLUID-5013\n        var distributions = parentThat ? fluid.receiveDistributions(parentThat, upDefaults.gradeNames, options.memberName, fakeThat) : [];\n        fluid.each(distributions, function (distribution) { // TODO: The duplicated route for this is in fluid.mergeComponentOptions\n            fluid.computeDistributionPriority(parentThat, distribution);\n            if (fluid.isPrimitive(distribution.priority)) { // TODO: These should be immutable and parsed just once on registration - but we can't because of crazy target-dependent distance system\n                distribution.priority = fluid.parsePriority(distribution.priority, 0, false, \"options distribution\");\n            }\n        });\n        fluid.sortByPriority(distributions);\n\n        var localDynamic = options.localDynamic;\n        var localRecord = $.extend({}, fluid.censorKeys(options.componentRecord, [\"type\"]), localDynamic);\n\n        var argMap = upDefaults.argumentMap;\n        var findKeys = Object.keys(argMap).concat([\"type\"]);\n\n        fluid.each(findKeys, function (name) {\n            for (var i = 0; i < distributions.length; ++i) { // Apply non-options material from distributions (FLUID-5013)\n                if (distributions[i][name] !== undefined) {\n                    localRecord[name] = distributions[i][name];\n                }\n            }\n        });\n        typeName = localRecord.type || typeName;\n\n        delete localRecord.type;\n        delete localRecord.options;\n\n        var mergeRecords = {distributions: distributions};\n\n        if (options.componentRecord !== undefined) {\n            // Deliberately put too many things here so they can be checked in expandComponentOptions (FLUID-4285)\n            mergeRecords.subcomponentRecord = $.extend({}, options.componentRecord);\n        }\n        var args = [];\n        fluid.each(argMap, function (index, name) {\n            var arg;\n            if (name === \"options\") {\n                arg = {marker: fluid.EXPAND,\n                           localRecord: localDynamic,\n                           mergeRecords: mergeRecords,\n                           instantiator: fluid.getInstantiator(parentThat),\n                           parentThat: parentThat,\n                           memberName: options.memberName};\n            } else {\n                var value = localRecord[name];\n                arg = fluid.expandImmediate(value, parentThat, localRecord);\n            }\n            args[index] = arg;\n        });\n\n        var togo = {\n            args: args,\n            funcName: typeName\n        };\n        return togo;\n    };\n\n    /** Instantiate the subcomponent with the supplied name of the supplied top-level component. Although this method\n     * is published as part of the Fluid API, it should not be called by general users and may not remain stable. It is\n     * currently the only mechanism provided for instantiating components whose definitions are dynamic, and will be\n     * replaced in time by dedicated declarative framework described by FLUID-5022.\n     * @param that {Component} the parent component for which the subcomponent is to be instantiated\n     * @param name {String} the name of the component - the index of the options block which configures it as part of the\n     * <code>components</code> section of its parent's options\n     */\n    fluid.initDependent = function (that, name, localRecord) {\n        if (that[name]) { return; } // TODO: move this into strategy\n        var component = that.options.components[name];\n        var instance;\n        var instantiator = fluid.globalInstantiator;\n        var shadow = instantiator.idToShadow[that.id];\n        var localDynamic = localRecord || shadow.subcomponentLocal && shadow.subcomponentLocal[name];\n        fluid.pushActivity(\"initDependent\", \"instantiating dependent component at path \\\"%path\\\" with record %record as child of %parent\",\n            {path: shadow.path + \".\" + name, record: component, parent: that});\n\n        if (typeof(component) === \"string\" || component.expander) {\n            that[name] = fluid.inEvaluationMarker;\n            instance = fluid.expandImmediate(component, that);\n            if (instance) {\n                instantiator.recordKnownComponent(that, instance, name, false);\n            } else {\n                delete that[name];\n            }\n        }\n        else if (component.type) {\n            var type = fluid.expandImmediate(component.type, that, localDynamic);\n            if (!type) {\n                fluid.fail(\"Error in subcomponent record: \", component.type, \" could not be resolved to a type for component \", name,\n                    \" of parent \", that);\n            }\n            var invokeSpec = fluid.assembleCreatorArguments(that, type, {componentRecord: component, memberName: name, localDynamic: localDynamic});\n            instance = fluid.initSubcomponentImpl(that, {type: invokeSpec.funcName}, invokeSpec.args);\n        }\n        else {\n            fluid.fail(\"Unrecognised material in place of subcomponent \" + name + \" - no \\\"type\\\" field found\");\n        }\n        fluid.popActivity();\n        return instance;\n    };\n\n    fluid.bindDeferredComponent = function (that, componentName, component) {\n        var events = fluid.makeArray(component.createOnEvent);\n        fluid.each(events, function (eventName) {\n            var event = fluid.isIoCReference(eventName) ? fluid.expandOptions(eventName, that) : that.events[eventName];\n            if (!event || !event.addListener) {\n                fluid.fail(\"Error instantiating createOnEvent component with name \" + componentName + \" of parent \", that, \" since event specification \" +\n                    eventName + \" could not be expanded to an event - got \", event);\n            }\n            event.addListener(function () {\n                fluid.pushActivity(\"initDeferred\", \"instantiating deferred component %componentName of parent %that due to event %eventName\",\n                 {componentName: componentName, that: that, eventName: eventName});\n                if (that[componentName]) {\n                    fluid.globalInstantiator.clearComponent(that, componentName);\n                }\n                var localRecord = {\"arguments\": fluid.makeArray(arguments)};\n                fluid.initDependent(that, componentName, localRecord);\n                fluid.popActivity();\n            }, null, component.priority);\n        });\n    };\n\n    fluid.priorityForComponent = function (component) {\n        return component.priority ? component.priority :\n            (component.type === \"fluid.typeFount\" || fluid.hasGrade(fluid.defaults(component.type), \"fluid.typeFount\")) ?\n            \"first\" : undefined;\n    };\n\n    fluid.initDependents = function (that) {\n        fluid.pushActivity(\"initDependents\", \"instantiating dependent components for component %that\", {that: that});\n        var shadow = fluid.shadowForComponent(that);\n        shadow.memberStrategy.initter();\n        shadow.invokerStrategy.initter();\n\n        fluid.getForComponent(that, \"modelRelay\");\n        fluid.getForComponent(that, \"model\"); // trigger this as late as possible - but must be before components so that child component has model on its onCreate\n        if (fluid.isDestroyed(that)) {\n            return; // Further fix for FLUID-5869 - if we managed to destroy ourselves through some bizarre model self-reaction, bail out here\n        }\n\n        var options = that.options;\n        var components = options.components || {};\n        var componentSort = [];\n\n        fluid.each(components, function (component, name) {\n            if (!component.createOnEvent) {\n                var priority = fluid.priorityForComponent(component);\n                componentSort.push({namespace: name, priority: fluid.parsePriority(priority)});\n            }\n            else {\n                fluid.bindDeferredComponent(that, name, component);\n            }\n        });\n        fluid.sortByPriority(componentSort);\n        fluid.each(componentSort, function (entry) {\n            fluid.initDependent(that, entry.namespace);\n        });\n        if (shadow.subcomponentLocal) {\n            fluid.clear(shadow.subcomponentLocal); // still need repo for event-driven dynamic components - abolish these in time\n        }\n        that.lifecycleStatus = \"constructed\";\n        fluid.assessTreeConstruction(that, shadow);\n\n        fluid.popActivity();\n    };\n\n    fluid.assessTreeConstruction = function (that, shadow) {\n        var instantiator = fluid.globalInstantiator;\n        var thatStack = instantiator.getThatStack(that);\n        var unstableUp = fluid.find_if(thatStack, function (that) {\n            return that.lifecycleStatus === \"constructing\";\n        });\n        if (unstableUp) {\n            that.lifecycleStatus = \"constructed\";\n        } else {\n            fluid.markSubtree(instantiator, that, shadow.path, \"treeConstructed\");\n        }\n    };\n\n    fluid.markSubtree = function (instantiator, that, path, state) {\n        that.lifecycleStatus = state;\n        fluid.visitComponentChildren(that, function (child, name) {\n            var childPath = instantiator.composePath(path, name);\n            var childShadow = instantiator.idToShadow[child.id];\n            var created = childShadow && childShadow.path === childPath;\n            if (created) {\n                fluid.markSubtree(instantiator, child, childPath, state);\n            }\n        }, {flat: true});\n    };\n\n\n    /** BEGIN NEXUS METHODS **/\n\n    /** Given a component reference, returns the path of that component within its component tree\n     * @param component {Component} A reference to a component\n     * @param instantiator {Instantiator} (optional) An instantiator to use for the lookup\n     * @return {Array of String} An array of path segments of the component within its tree, or `null` if the reference does not hold a live component\n     */\n    fluid.pathForComponent = function (component, instantiator) {\n        instantiator = instantiator || fluid.getInstantiator(component) || fluid.globalInstantiator;\n        var shadow = instantiator.idToShadow[component.id];\n        if (!shadow) {\n            return null;\n        }\n        return instantiator.parseEL(shadow.path);\n    };\n\n    /** Construct a component with the supplied options at the specified path in the component tree. The parent path of the location must already be a component.\n     * @param path {String|Array of String} Path where the new component is to be constructed, represented as a string or array of segments\n     * @param options {Object} Top-level options supplied to the component - must at the very least include a field <code>type</code> holding the component's type\n     * @param instantiator {Instantiator} [optional] The instantiator holding the component to be created - if blank, the global instantiator will be used\n     */\n    fluid.construct = function (path, options, instantiator) {\n        var record = fluid.destroy(path, instantiator);\n        // TODO: We must construct a more principled scheme for designating child components than this - especially once options become immutable\n        fluid.set(record.parent, [\"options\", \"components\", record.memberName], {\n            type: options.type,\n            options: options\n        });\n        return fluid.initDependent(record.parent, record.memberName);\n    };\n\n    /** Destroys a component held at the specified path. The parent path must represent a component, although the component itself may be nonexistent\n     * @param path {String|Array of String} Path where the new component is to be destroyed, represented as a string or array of segments\n     * @param instantiator {Instantiator} [optional] The instantiator holding the component to be destroyed - if blank, the global instantiator will be used\n     */\n    fluid.destroy = function (path, instantiator) {\n        instantiator = instantiator || fluid.globalInstantiator;\n        var segs = fluid.model.parseToSegments(path, instantiator.parseEL, true);\n        if (segs.length === 0) {\n            fluid.fail(\"Cannot destroy the root component\");\n        }\n        var memberName = segs.pop(), parentPath = instantiator.composeSegments.apply(null, segs);\n        var parent = instantiator.pathToComponent[parentPath];\n        if (!parent) {\n            fluid.fail(\"Cannot modify component with nonexistent parent at path \", path);\n        }\n        if (parent[memberName]) {\n            parent[memberName].destroy();\n        }\n        return {\n            parent: parent,\n            memberName: memberName\n        };\n    };\n\n   /** Construct an instance of a component as a child of the specified parent, with a well-known, unique name derived from its typeName\n    * @param parentPath {String|Array of String} Parent of path where the new component is to be constructed, represented as a string or array of segments\n    * @param options {String|Object} Options encoding the component to be constructed. If this is of type String, it is assumed to represent the component's typeName with no options\n    * @param instantiator {Instantiator} [optional] The instantiator holding the component to be created - if blank, the global instantiator will be used\n    */\n    fluid.constructSingle = function (parentPath, options, instantiator) {\n        instantiator = instantiator || fluid.globalInstantiator;\n        parentPath = parentPath || \"\";\n        var segs = fluid.model.parseToSegments(parentPath, instantiator.parseEL, true);\n        if (typeof(options) === \"string\") {\n            options = {type: options};\n        }\n        var type = options.type;\n        if (!type) {\n            fluid.fail(\"Cannot construct singleton object without a type entry\");\n        }\n        options = $.extend({}, options);\n        var gradeNames = options.gradeNames = fluid.makeArray(options.gradeNames);\n        gradeNames.unshift(type); // principal type may be noninstantiable\n        options.type = \"fluid.component\";\n        var root = segs.length === 0;\n        if (root) {\n            gradeNames.push(\"fluid.resolveRoot\");\n        }\n        var memberName = fluid.typeNameToMemberName(options.singleRootType || type);\n        segs.push(memberName);\n        fluid.construct(segs, options, instantiator);\n    };\n\n    /** Destroy an instance created by `fluid.constructSingle`\n     * @param parentPath {String|Array of String} Parent of path where the new component is to be constructed, represented as a string or array of segments\n     * @param typeName {String} The type name used to construct the component (either `type` or `singleRootType` of the `options` argument to `fluid.constructSingle`\n     * @param instantiator {Instantiator} [optional] The instantiator holding the component to be created - if blank, the global instantiator will be used\n    */\n    fluid.destroySingle = function (parentPath, typeName, instantiator) {\n        instantiator = instantiator || fluid.globalInstantiator;\n        var segs = fluid.model.parseToSegments(parentPath, instantiator.parseEL, true);\n        var memberName = fluid.typeNameToMemberName(typeName);\n        segs.push(memberName);\n        fluid.destroy(segs, instantiator);\n    };\n\n    /** Registers and constructs a \"linkage distribution\" which will ensure that wherever a set of \"input grades\" co-occur, they will\n     * always result in a supplied \"output grades\" in the component where they co-occur.\n     * @param linkageName {String} The name of the grade which will broadcast the resulting linkage. If required, this linkage can be destroyed by supplying this name to `fluid.destroySingle`.\n     * @param inputNames {Array of String} An array of grade names which will be tested globally for co-occurrence\n     * @param outputNames {String|Array of String} A single name or array of grade names which will be output into the co-occuring component\n     */\n    fluid.makeGradeLinkage = function (linkageName, inputNames, outputNames) {\n        fluid.defaults(linkageName, {\n            gradeNames: \"fluid.component\",\n            distributeOptions: {\n                record: outputNames,\n                target: \"{/ \" + inputNames.join(\"&\") + \"}.options.gradeNames\"\n            }\n        });\n        fluid.constructSingle([], linkageName);\n    };\n\n    /** Retrieves a component by global path.\n    * @param path {String|Array of String} The global path of the component to look up\n    * @return The component at the specified path, or undefined if none is found\n    */\n    fluid.componentForPath = function (path) {\n        return fluid.globalInstantiator.pathToComponent[fluid.isArrayable(path) ? path.join(\".\") : path];\n    };\n\n    /** END NEXUS METHODS **/\n\n    /** BEGIN IOC DEBUGGING METHODS **/\n    fluid[\"debugger\"] = function () {\n        debugger; // eslint-disable-line no-debugger\n    };\n\n    fluid.defaults(\"fluid.debuggingProbe\", {\n        gradeNames: [\"fluid.component\"]\n    });\n\n    // probe looks like:\n    // target: {preview other}.listeners.eventName\n    // priority: first/last\n    // func: console.log/fluid.log/fluid.debugger\n    fluid.probeToDistribution = function (probe) {\n        var instantiator = fluid.globalInstantiator;\n        var parsed = fluid.parseContextReference(probe.target);\n        var segs = fluid.model.parseToSegments(parsed.path, instantiator.parseEL, true);\n        if (segs[0] !== \"options\") {\n            segs.unshift(\"options\"); // compensate for this insanity until we have the great options flattening\n        }\n        var parsedPriority = fluid.parsePriority(probe.priority);\n        if (parsedPriority.constraint && !parsedPriority.constraint.target) {\n            parsedPriority.constraint.target = \"authoring\";\n        }\n        return {\n            target: \"{/ \" + parsed.context + \"}.\" + instantiator.composeSegments.apply(null, segs),\n            record: {\n                func: probe.func,\n                funcName: probe.funcName,\n                args: probe.args,\n                priority: fluid.renderPriority(parsedPriority)\n            }\n        };\n    };\n\n    fluid.registerProbes = function (probes) {\n        var probeDistribution = fluid.transform(probes, fluid.probeToDistribution);\n        var memberName = \"fluid_debuggingProbe_\" + fluid.allocateGuid();\n        fluid.construct([memberName], {\n            type: \"fluid.debuggingProbe\",\n            distributeOptions: probeDistribution\n        });\n        return memberName;\n    };\n\n    fluid.deregisterProbes = function (probeName) {\n        fluid.destroy([probeName]);\n    };\n\n    /** END IOC DEBUGGING METHODS **/\n\n    fluid.thisistToApplicable = function (record, recthis, that) {\n        return {\n            apply: function (noThis, args) {\n                // Resolve this material late, to deal with cases where the target has only just been brought into existence\n                // (e.g. a jQuery target for rendered material) - TODO: Possibly implement cached versions of these as we might do for invokers\n                var resolvedThis = fluid.expandOptions(recthis, that);\n                if (typeof(resolvedThis) === \"string\") {\n                    resolvedThis = fluid.getGlobalValue(resolvedThis);\n                }\n                if (!resolvedThis) {\n                    fluid.fail(\"Could not resolve reference \" + recthis + \" to a value\");\n                }\n                var resolvedFunc = resolvedThis[record.method];\n                if (typeof(resolvedFunc) !== \"function\") {\n                    fluid.fail(\"Object \", resolvedThis, \" at reference \" + recthis + \" has no member named \" + record.method + \" which is a function \");\n                }\n                if (fluid.passLogLevel(fluid.logLevel.TRACE)) {\n                    fluid.log(fluid.logLevel.TRACE, \"Applying arguments \", args, \" to method \" + record.method + \" of instance \", resolvedThis);\n                }\n                return resolvedFunc.apply(resolvedThis, args);\n            }\n        };\n    };\n\n    fluid.changeToApplicable = function (record, that) {\n        return {\n            apply: function (noThis, args, localRecord, mergeRecord) {\n                var parsed = fluid.parseValidModelReference(that, \"changePath listener record\", record.changePath);\n                var value = fluid.expandOptions(record.value, that, {}, fluid.extend(localRecord, {\"arguments\": args}));\n                var sources = mergeRecord && mergeRecord.source && mergeRecord.source.length ? fluid.makeArray(record.source).concat(mergeRecord.source) : record.source;\n                parsed.applier.change(parsed.modelSegs, value, record.type, sources); // FLUID-5586 now resolved\n            }\n        };\n    };\n\n    // Convert \"exotic records\" into an applicable form (\"this/method\" for FLUID-4878 or \"changePath\" for FLUID-3674)\n    fluid.recordToApplicable = function (record, that, standard) {\n        if (record.changePath !== undefined) { // Allow falsy paths for FLUID-5586\n            return fluid.changeToApplicable(record, that, standard);\n        }\n        var recthis = record[\"this\"];\n        if (record.method ^ recthis) {\n            fluid.fail(\"Record \", that, \" must contain both entries \\\"method\\\" and \\\"this\\\" if it contains either\");\n        }\n        return record.method ? fluid.thisistToApplicable(record, recthis, that) : null;\n    };\n\n    fluid.getGlobalValueNonComponent = function (funcName, context) { // TODO: Guard this in listeners as well\n        var defaults = fluid.defaults(funcName);\n        if (defaults && fluid.hasGrade(defaults, \"fluid.component\")) {\n            fluid.fail(\"Error in function specification - cannot invoke function \" + funcName + \" in the context of \" + context + \": component creator functions can only be used as subcomponents\");\n        }\n        return fluid.getGlobalValue(funcName);\n    };\n\n    fluid.makeInvoker = function (that, invokerec, name) {\n        invokerec = fluid.upgradePrimitiveFunc(invokerec); // shorthand case for direct function invokers (FLUID-4926)\n        if (invokerec.args !== undefined && invokerec.args !== fluid.NO_VALUE && !fluid.isArrayable(invokerec.args)) {\n            invokerec.args = fluid.makeArray(invokerec.args);\n        }\n        var func = fluid.recordToApplicable(invokerec, that);\n        var invokePre = fluid.preExpand(invokerec.args);\n        var localRecord = {};\n        var expandOptions = fluid.makeStackResolverOptions(that, localRecord, true);\n        func = func || (invokerec.funcName ? fluid.getGlobalValueNonComponent(invokerec.funcName, \"an invoker\") : fluid.expandImmediate(invokerec.func, that));\n        if (!func || !func.apply) {\n            fluid.fail(\"Error in invoker record: could not resolve members func, funcName or method to a function implementation - got \" + func + \" from \", invokerec);\n        } else if (func === fluid.notImplemented) {\n            fluid.fail(\"Error constructing component \", that, \" - the invoker named \" + name + \" which was defined in grade \" + invokerec.componentSource + \" needs to be overridden with a concrete implementation\");\n        }\n        return function invokeInvoker() {\n            if (fluid.defeatLogging === false) {\n                fluid.pushActivity(\"invokeInvoker\", \"invoking invoker with name %name and record %record from path %path holding component %that\",\n                    {name: name, record: invokerec, path: fluid.dumpComponentPath(that), that: that});\n            }\n            var togo, finalArgs;\n            if (that.lifecycleStatus === \"destroyed\") {\n                fluid.log(fluid.logLevel.WARN, \"Ignoring call to invoker \" + name + \" of component \", that, \" which has been destroyed\");\n            } else {\n                localRecord.arguments = arguments;\n                if (invokerec.args === undefined || invokerec.args === fluid.NO_VALUE) {\n                    finalArgs = arguments;\n                } else {\n                    fluid.expandImmediateImpl(invokePre, expandOptions);\n                    finalArgs = invokePre.source;\n                }\n                togo = func.apply(null, finalArgs);\n            }\n            if (fluid.defeatLogging === false) {\n                fluid.popActivity();\n            }\n            return togo;\n        };\n    };\n\n    // weird higher-order function so that we can staightforwardly dispatch original args back onto listener\n    fluid.event.makeTrackedListenerAdder = function (source) {\n        var shadow = fluid.shadowForComponent(source);\n        return function (event) {\n            return {addListener: function (listener, namespace, priority, softNamespace, listenerId) {\n                fluid.recordListener(event, listener, shadow, listenerId);\n                event.addListener.apply(null, arguments);\n            }};\n        };\n    };\n\n    fluid.event.listenerEngine = function (eventSpec, callback, adder) {\n        var argstruc = {};\n        function checkFire() {\n            var notall = fluid.find(eventSpec, function (value, key) {\n                if (argstruc[key] === undefined) {\n                    return true;\n                }\n            });\n            if (!notall) {\n                var oldstruc = argstruc;\n                argstruc = {}; // guard against the case the callback perversely fires one of its prerequisites (FLUID-5112)\n                callback(oldstruc);\n            }\n        }\n        fluid.each(eventSpec, function (event, eventName) {\n            adder(event).addListener(function () {\n                argstruc[eventName] = fluid.makeArray(arguments);\n                checkFire();\n            });\n        });\n    };\n\n    fluid.event.dispatchListener = function (that, listener, eventName, eventSpec, indirectArgs) {\n        if (eventSpec.args !== undefined && eventSpec.args !== fluid.NO_VALUE && !fluid.isArrayable(eventSpec.args)) {\n            eventSpec.args = fluid.makeArray(eventSpec.args);\n        }\n        listener = fluid.event.resolveListener(listener); // In theory this optimisation is too aggressive if global name is not defined yet\n        var dispatchPre = fluid.preExpand(eventSpec.args);\n        var localRecord = {};\n        var expandOptions = fluid.makeStackResolverOptions(that, localRecord, true);\n        var togo = function () {\n            if (fluid.defeatLogging === false) {\n                fluid.pushActivity(\"dispatchListener\", \"firing to listener to event named %eventName of component %that\",\n                    {eventName: eventName, that: that});\n            }\n\n            var args = indirectArgs ? arguments[0] : arguments, finalArgs;\n            localRecord.arguments = args;\n            if (eventSpec.args !== undefined && eventSpec.args !== fluid.NO_VALUE) {\n                fluid.expandImmediateImpl(dispatchPre, expandOptions);\n                finalArgs = dispatchPre.source;\n            } else {\n                finalArgs = args;\n            }\n            var togo = listener.apply(null, finalArgs);\n            if (fluid.defeatLogging === false) {\n                fluid.popActivity();\n            }\n            return togo;\n        };\n        fluid.event.impersonateListener(listener, togo); // still necessary for FLUID-5254 even though framework's listeners now get explicit guids\n        return togo;\n    };\n\n    fluid.event.resolveSoftNamespace = function (key) {\n        if (typeof(key) !== \"string\") {\n            return null;\n        } else {\n            var lastpos = Math.max(key.lastIndexOf(\".\"), key.lastIndexOf(\"}\"));\n            return key.substring(lastpos + 1);\n        }\n    };\n\n    fluid.event.resolveListenerRecord = function (lisrec, that, eventName, namespace, standard) {\n        var badRec = function (record, extra) {\n            fluid.fail(\"Error in listener record - could not resolve reference \", record, \" to a listener or firer. \" +\n                \"Did you miss out \\\"events.\\\" when referring to an event firer?\" + extra);\n        };\n        fluid.pushActivity(\"resolveListenerRecord\", \"resolving listener record for event named %eventName for component %that\",\n            {eventName: eventName, that: that});\n        var records = fluid.makeArray(lisrec);\n        var transRecs = fluid.transform(records, function (record) {\n            // TODO: FLUID-5242 fix - we copy here since distributeOptions does not copy options blocks that it distributes and we can hence corrupt them.\n            // need to clarify policy on options sharing - for slightly better efficiency, copy should happen during distribution and not here\n            // Note that fluid.mergeModelListeners expects to write to these too\n            var expanded = fluid.isPrimitive(record) || record.expander ? {listener: record} : fluid.copy(record);\n            var methodist = fluid.recordToApplicable(record, that, standard);\n            if (methodist) {\n                expanded.listener = methodist;\n            }\n            else {\n                expanded.listener = expanded.listener || expanded.func || expanded.funcName;\n            }\n            if (!expanded.listener) {\n                badRec(record, \" Listener record must contain a member named \\\"listener\\\", \\\"func\\\", \\\"funcName\\\" or \\\"method\\\"\");\n            }\n            var softNamespace = record.method ?\n                fluid.event.resolveSoftNamespace(record[\"this\"]) + \".\" + record.method :\n                fluid.event.resolveSoftNamespace(expanded.listener);\n            if (!expanded.namespace && !namespace && softNamespace) {\n                expanded.softNamespace = true;\n                expanded.namespace = (record.componentSource ? record.componentSource : that.typeName) + \".\" + softNamespace;\n            }\n            var listener = expanded.listener = fluid.expandOptions(expanded.listener, that);\n            if (!listener) {\n                badRec(record, \"\");\n            }\n            var firer = false;\n            if (listener.typeName === \"fluid.event.firer\") {\n                listener = listener.fire;\n                firer = true;\n            }\n            expanded.listener = (standard && (expanded.args && listener !== \"fluid.notImplemented\" || firer)) ? fluid.event.dispatchListener(that, listener, eventName, expanded) : listener;\n            expanded.listenerId = fluid.allocateGuid();\n            return expanded;\n        });\n        var togo = {\n            records: transRecs,\n            adderWrapper: standard ? fluid.event.makeTrackedListenerAdder(that) : null\n        };\n        fluid.popActivity();\n        return togo;\n    };\n\n    fluid.event.expandOneEvent = function (that, event) {\n        var origin;\n        if (typeof(event) === \"string\" && event.charAt(0) !== \"{\") {\n            // Shorthand for resolving onto our own events, but with GINGER WORLD!\n            origin = fluid.getForComponent(that, [\"events\", event]);\n        }\n        else {\n            origin = fluid.expandOptions(event, that);\n        }\n        if (!origin || origin.typeName !== \"fluid.event.firer\") {\n            fluid.fail(\"Error in event specification - could not resolve base event reference \", event, \" to an event firer: got \", origin);\n        }\n        return origin;\n    };\n\n    fluid.event.expandEvents = function (that, event) {\n        return typeof(event) === \"string\" ?\n            fluid.event.expandOneEvent(that, event) :\n            fluid.transform(event, function (oneEvent) {\n                return fluid.event.expandOneEvent(that, oneEvent);\n            });\n    };\n\n    fluid.event.resolveEvent = function (that, eventName, eventSpec) {\n        fluid.pushActivity(\"resolveEvent\", \"resolving event with name %eventName attached to component %that\",\n            {eventName: eventName, that: that});\n        var adder = fluid.event.makeTrackedListenerAdder(that);\n        if (typeof(eventSpec) === \"string\") {\n            eventSpec = {event: eventSpec};\n        }\n        var event = eventSpec.typeName === \"fluid.event.firer\" ? eventSpec : eventSpec.event || eventSpec.events;\n        if (!event) {\n            fluid.fail(\"Event specification for event with name \" + eventName + \" does not include a base event specification: \", eventSpec);\n        }\n\n        var origin = event.typeName === \"fluid.event.firer\" ? event : fluid.event.expandEvents(that, event);\n\n        var isMultiple = origin.typeName !== \"fluid.event.firer\";\n        var isComposite = eventSpec.args || isMultiple;\n        // If \"event\" is not composite, we want to share the listener list and FIRE method with the original\n        // If \"event\" is composite, we need to create a new firer. \"composite\" includes case where any boiling\n        // occurred - this was implemented wrongly in 1.4.\n        var firer;\n        if (isComposite) {\n            firer = fluid.makeEventFirer({name: \" [composite] \" + fluid.event.nameEvent(that, eventName)});\n            var dispatcher = fluid.event.dispatchListener(that, firer.fire, eventName, eventSpec, isMultiple);\n            if (isMultiple) {\n                fluid.event.listenerEngine(origin, dispatcher, adder);\n            }\n            else {\n                adder(origin).addListener(dispatcher);\n            }\n        }\n        else {\n            firer = {typeName: \"fluid.event.firer\"};\n            firer.fire = function () {\n                var outerArgs = fluid.makeArray(arguments);\n                fluid.pushActivity(\"fireSynthetic\", \"firing synthetic event %eventName \", {eventName: eventName});\n                var togo = origin.fire.apply(null, outerArgs);\n                fluid.popActivity();\n                return togo;\n            };\n            firer.addListener = function (listener, namespace, priority, softNamespace, listenerId) {\n                var dispatcher = fluid.event.dispatchListener(that, listener, eventName, eventSpec);\n                adder(origin).addListener(dispatcher, namespace, priority, softNamespace, listenerId);\n            };\n            firer.removeListener = function (listener) {\n                origin.removeListener(listener);\n            };\n        }\n        fluid.popActivity();\n        return firer;\n    };\n\n    /** BEGIN unofficial IoC material **/\n    // The following three functions are unsupported ane only used in the renderer expander.\n    // The material they produce is no longer recognised for component resolution.\n\n    fluid.withEnvironment = function (envAdd, func, root) {\n        var key;\n        root = root || fluid.globalThreadLocal();\n        try {\n            for (key in envAdd) {\n                root[key] = envAdd[key];\n            }\n            $.extend(root, envAdd);\n            return func();\n        } finally {\n            for (key in envAdd) {\n                delete root[key]; // TODO: users may want a recursive \"scoping\" model\n            }\n        }\n    };\n\n    fluid.fetchContextReference = function (parsed, directModel, env, elResolver, externalFetcher) {\n        // The \"elResolver\" is a hack to make certain common idioms in protoTrees work correctly, where a contextualised EL\n        // path actually resolves onto a further EL reference rather than directly onto a value target\n        if (elResolver) {\n            parsed = elResolver(parsed, env);\n        }\n        var base = parsed.context ? env[parsed.context] : directModel;\n        if (!base) {\n            var resolveExternal = externalFetcher && externalFetcher(parsed);\n            return resolveExternal || base;\n        }\n        return parsed.noDereference ? parsed.path : fluid.get(base, parsed.path);\n    };\n\n    fluid.makeEnvironmentFetcher = function (directModel, elResolver, envGetter, externalFetcher) {\n        envGetter = envGetter || fluid.globalThreadLocal;\n        return function (parsed) {\n            var env = envGetter();\n            return fluid.fetchContextReference(parsed, directModel, env, elResolver, externalFetcher);\n        };\n    };\n\n    /** END of unofficial IoC material **/\n\n    /* Compact expansion machinery - for short form invoker and expander references such as @expand:func(arg) and func(arg) */\n\n    fluid.coerceToPrimitive = function (string) {\n        return string === \"false\" ? false : (string === \"true\" ? true :\n            (isFinite(string) ? Number(string) : string));\n    };\n\n    fluid.compactStringToRec = function (string, type) {\n        var openPos = string.indexOf(\"(\");\n        var closePos = string.indexOf(\")\");\n        if (openPos === -1 ^ closePos === -1 || openPos > closePos) {\n            fluid.fail(\"Badly-formed compact \" + type + \" record without matching parentheses: \" + string);\n        }\n        if (openPos !== -1 && closePos !== -1) {\n            var trail = string.substring(closePos + 1);\n            if ($.trim(trail) !== \"\") {\n                fluid.fail(\"Badly-formed compact \" + type + \" record \" + string + \" - unexpected material following close parenthesis: \" + trail);\n            }\n            var prefix = string.substring(0, openPos);\n            var body = $.trim(string.substring(openPos + 1, closePos));\n            var args = body === \"\" ? [] : fluid.transform(body.split(\",\"), $.trim, fluid.coerceToPrimitive);\n            var togo = fluid.upgradePrimitiveFunc(prefix, null);\n            togo.args = args;\n            return togo;\n        }\n        else if (type === \"expander\") {\n            fluid.fail(\"Badly-formed compact expander record without parentheses: \" + string);\n        }\n        return string;\n    };\n\n    fluid.expandPrefix = \"@expand:\";\n\n    fluid.expandCompactString = function (string, active) {\n        var rec = string;\n        if (string.indexOf(fluid.expandPrefix) === 0) {\n            var rem = string.substring(fluid.expandPrefix.length);\n            rec = {\n                expander: fluid.compactStringToRec(rem, \"expander\")\n            };\n        }\n        else if (active) {\n            rec = fluid.compactStringToRec(string, active);\n        }\n        return rec;\n    };\n\n    var singularPenRecord = {\n        listeners: \"listener\",\n        modelListeners: \"modelListener\"\n    };\n\n    var singularRecord = $.extend({\n        invokers: \"invoker\"\n    }, singularPenRecord);\n\n    fluid.expandCompactRec = function (segs, target, source) {\n        fluid.guardCircularExpansion(segs, segs.length);\n        var pen = segs.length > 0 ? segs[segs.length - 1] : \"\";\n        var active = singularRecord[pen];\n        if (!active && segs.length > 1) {\n            active = singularPenRecord[segs[segs.length - 2]]; // support array of listeners and modelListeners\n        }\n        fluid.each(source, function (value, key) {\n            if (fluid.isPlainObject(value)) {\n                target[key] = fluid.freshContainer(value);\n                segs.push(key);\n                fluid.expandCompactRec(segs, target[key], value);\n                segs.pop();\n                return;\n            }\n            else if (typeof(value) === \"string\") {\n                value = fluid.expandCompactString(value, active);\n            }\n            target[key] = value;\n        });\n    };\n\n    fluid.expandCompact = function (options) {\n        var togo = {};\n        fluid.expandCompactRec([], togo, options);\n        return togo;\n    };\n\n    /** End compact record expansion machinery **/\n\n    fluid.extractEL = function (string, options) {\n        if (options.ELstyle === \"ALL\") {\n            return string;\n        }\n        else if (options.ELstyle.length === 1) {\n            if (string.charAt(0) === options.ELstyle) {\n                return string.substring(1);\n            }\n        }\n        else if (options.ELstyle === \"${}\") {\n            var i1 = string.indexOf(\"${\");\n            var i2 = string.lastIndexOf(\"}\");\n            if (i1 === 0 && i2 !== -1) {\n                return string.substring(2, i2);\n            }\n        }\n    };\n\n    fluid.extractELWithContext = function (string, options) {\n        var EL = fluid.extractEL(string, options);\n        if (fluid.isIoCReference(EL)) {\n            return fluid.parseContextReference(EL);\n        }\n        return EL ? {path: EL} : EL;\n    };\n\n    /** Parse the string form of a contextualised IoC reference into an object.\n     * @param reference {String} The reference to be parsed. The character at position `index` is assumed to be `{`\n     * @param index {String} [optional] The index into the string to start parsing at, if omitted, defaults to 0\n     * @param delimiter {Character} [optional] A character which will delimit the end of the context expression. If omitted, the expression continues to the end of the string.\n     * @return {ParsedContext} A structure holding the parsed structure, with members\n     *    context {String|ParsedContext} The context portion of the reference. This will be a `string` for a flat reference, or a further `ParsedContext` for a recursive reference\n     *    path {String} The string portion of the reference\n     *    endpos {Integer} The position in the string where parsing stopped [this member is not supported and will be removed in a future release]\n     */\n    fluid.parseContextReference = function (reference, index, delimiter) {\n        index = index || 0;\n        var isNested = reference.charAt(index + 1) === \"{\", endcpos, context, nested;\n        if (isNested) {\n            nested = fluid.parseContextReference(reference, index + 1, \"}\");\n            endcpos = nested.endpos;\n        } else {\n            endcpos = reference.indexOf(\"}\", index + 1);\n        }\n        if (endcpos === -1) {\n            fluid.fail(\"Cannot parse context reference \\\"\" + reference + \"\\\": Malformed context reference without }\");\n        }\n        if (isNested) {\n            context = nested;\n        } else {\n            context = reference.substring(index + 1, endcpos);\n        }\n        var endpos = delimiter ? reference.indexOf(delimiter, endcpos + 1) : reference.length;\n        var path = reference.substring(endcpos + 1, endpos);\n        if (path.charAt(0) === \".\") {\n            path = path.substring(1);\n        }\n        return {context: context, path: path, endpos: endpos};\n    };\n\n    fluid.renderContextReference = function (parsed) {\n        var context = parsed.context;\n        return \"{\" + (typeof(context) === \"string\" ? context : fluid.renderContextReference(context)) + \"}\" + (parsed.path ? \".\" + parsed.path : \"\");\n    };\n\n    // TODO: Once we eliminate expandSource (in favour of fluid.expander.fetch), all of this tree of functions can be hived off to RendererUtilities\n    fluid.resolveContextValue = function (string, options) {\n        function fetch(parsed) {\n            fluid.pushActivity(\"resolveContextValue\", \"resolving context value %parsed\", {parsed: parsed});\n            var togo = options.fetcher(parsed);\n            fluid.pushActivity(\"resolvedContextValue\", \"resolved value %parsed to value %value\", {parsed: parsed, value: togo});\n            fluid.popActivity(2);\n            return togo;\n        }\n        var parsed;\n        if (options.bareContextRefs && fluid.isIoCReference(string)) {\n            parsed = fluid.parseContextReference(string);\n            return fetch(parsed);\n        }\n        else if (options.ELstyle && options.ELstyle !== \"${}\") {\n            parsed = fluid.extractELWithContext(string, options);\n            if (parsed) {\n                return fetch(parsed);\n            }\n        }\n        while (typeof(string) === \"string\") {\n            var i1 = string.indexOf(\"${\");\n            var i2 = string.indexOf(\"}\", i1 + 2);\n            if (i1 !== -1 && i2 !== -1) {\n                if (string.charAt(i1 + 2) === \"{\") {\n                    parsed = fluid.parseContextReference(string, i1 + 2, \"}\");\n                    i2 = parsed.endpos;\n                }\n                else {\n                    parsed = {path: string.substring(i1 + 2, i2)};\n                }\n                var subs = fetch(parsed);\n                var all = (i1 === 0 && i2 === string.length - 1);\n                // TODO: test case for all undefined substitution\n                if (subs === undefined || subs === null) {\n                    return subs;\n                }\n                string = all ? subs : string.substring(0, i1) + subs + string.substring(i2 + 1);\n            }\n            else {\n                break;\n            }\n        }\n        return string;\n    };\n\n    // This function appears somewhat reusable, but not entirely - it probably needs to be packaged\n    // along with the particular \"strategy\". Very similar to the old \"filter\"... the \"outer driver\" needs\n    // to execute it to get the first recursion going at top level. This was one of the most odd results\n    // of the reorganisation, since the \"old work\" seemed much more naturally expressed in terms of values\n    // and what happened to them. The \"new work\" is expressed in terms of paths and how to move amongst them.\n    fluid.fetchExpandChildren = function (target, i, segs, source, mergePolicy, options) {\n        if (source.expander) { // possible expander at top level\n            var expanded = fluid.expandExpander(target, source, options);\n            if (fluid.isPrimitive(expanded) || !fluid.isPlainObject(expanded) || (fluid.isArrayable(expanded) ^ fluid.isArrayable(target))) {\n                return expanded;\n            }\n            else { // make an attempt to preserve the root reference if possible\n                $.extend(true, target, expanded);\n            }\n        }\n        // NOTE! This expects that RHS is concrete! For material input to \"expansion\" this happens to be the case, but is not\n        // true for other algorithms. Inconsistently, this algorithm uses \"sourceStrategy\" below. In fact, this \"fetchChildren\"\n        // operation looks like it is a fundamental primitive of the system. We do call \"deliverer\" early which enables correct\n        // reference to parent nodes up the tree - however, anyone processing a tree IN THE CHAIN requires that it is produced\n        // concretely at the point STRATEGY returns. Which in fact it is...............\n        fluid.each(source, function (newSource, key) {\n            if (newSource === undefined) {\n                target[key] = undefined; // avoid ever dispatching to ourselves with undefined source\n            }\n            else if (key !== \"expander\") {\n                segs[i] = key;\n                if (fluid.getImmediate(options.exceptions, segs, i) !== true) {\n                    options.strategy(target, key, i + 1, segs, source, mergePolicy);\n                }\n            }\n        });\n        return target;\n    };\n\n    // TODO: This method is unnecessary and will quadratic inefficiency if RHS block is not concrete.\n    // The driver should detect \"homogeneous uni-strategy trundling\" and agree to preserve the extra\n    // \"cursor arguments\" which should be advertised somehow (at least their number)\n    function regenerateCursor(source, segs, limit, sourceStrategy) {\n        for (var i = 0; i < limit; ++i) {\n            // copy segs to avoid aliasing with FLUID-5243\n            source = sourceStrategy(source, segs[i], i, fluid.makeArray(segs));\n        }\n        return source;\n    }\n\n    fluid.isUnexpandable = function (source) { // slightly more efficient compound of fluid.isCopyable and fluid.isComponent - review performance\n        return fluid.isPrimitive(source) || !fluid.isPlainObject(source);\n    };\n\n    fluid.expandSource = function (options, target, i, segs, deliverer, source, policy, recurse) {\n        var expanded, isTrunk;\n        var thisPolicy = fluid.derefMergePolicy(policy);\n        if (typeof (source) === \"string\" && !thisPolicy.noexpand) {\n            if (!options.defaultEL || source.charAt(0) === \"{\") { // hard-code this for performance\n                fluid.pushActivity(\"expandContextValue\", \"expanding context value %source held at path %path\", {source: source, path: fluid.path.apply(null, segs.slice(0, i))});\n                expanded = fluid.resolveContextValue(source, options);\n                fluid.popActivity(1);\n            } else {\n                expanded = source;\n            }\n        }\n        else if (thisPolicy.noexpand || fluid.isUnexpandable(source)) {\n            expanded = source;\n        }\n        else if (source.expander) {\n            expanded = fluid.expandExpander(deliverer, source, options);\n        }\n        else {\n            expanded = fluid.freshContainer(source);\n            isTrunk = true;\n        }\n        if (expanded !== fluid.NO_VALUE) {\n            deliverer(expanded);\n        }\n        if (isTrunk) {\n            recurse(expanded, source, i, segs, policy);\n        }\n        return expanded;\n    };\n\n    fluid.guardCircularExpansion = function (segs, i) {\n        if (i > fluid.strategyRecursionBailout) {\n            fluid.fail(\"Overflow/circularity in options expansion, current path is \", segs, \" at depth \" , i, \" - please ensure options are not circularly connected, or protect from expansion using the \\\"noexpand\\\" policy or expander\");\n        }\n    };\n\n    fluid.makeExpandStrategy = function (options) {\n        var recurse = function (target, source, i, segs, policy) {\n            return fluid.fetchExpandChildren(target, i || 0, segs || [], source, policy, options);\n        };\n        var strategy = function (target, name, i, segs, source, policy) {\n            fluid.guardCircularExpansion(segs, i);\n            if (!target) {\n                return;\n            }\n            if (target.hasOwnProperty(name)) { // bail out if our work has already been done\n                return target[name];\n            }\n            if (source === undefined) { // recover our state in case this is an external entry point\n                source = regenerateCursor(options.source, segs, i - 1, options.sourceStrategy);\n                policy = regenerateCursor(options.mergePolicy, segs, i - 1, fluid.concreteTrundler);\n            }\n            var thisSource = options.sourceStrategy(source, name, i, segs);\n            var thisPolicy = fluid.concreteTrundler(policy, name);\n            function deliverer(value) {\n                target[name] = value;\n            }\n            return fluid.expandSource(options, target, i, segs, deliverer, thisSource, thisPolicy, recurse);\n        };\n        options.recurse = recurse;\n        options.strategy = strategy;\n        return strategy;\n    };\n\n    fluid.defaults(\"fluid.makeExpandOptions\", {\n        ELstyle:          \"${}\",\n        bareContextRefs:  true,\n        target:           fluid.inCreationMarker\n    });\n\n    fluid.makeExpandOptions = function (source, options) {\n        options = $.extend({}, fluid.rawDefaults(\"fluid.makeExpandOptions\"), options);\n        options.defaultEL = options.ELStyle === \"${}\" && options.bareContextRefs; // optimisation to help expander\n        options.expandSource = function (source) {\n            return fluid.expandSource(options, null, 0, [], fluid.identity, source, options.mergePolicy, false);\n        };\n        if (!fluid.isUnexpandable(source)) {\n            options.source = source;\n            options.target = fluid.freshContainer(source);\n            options.sourceStrategy = options.sourceStrategy || fluid.concreteTrundler;\n            fluid.makeExpandStrategy(options);\n            options.initter = function () {\n                options.target = fluid.fetchExpandChildren(options.target, 0, [], options.source, options.mergePolicy, options);\n            };\n        }\n        else { // these init immediately since we must deliver a valid root target\n            options.strategy = fluid.concreteTrundler;\n            options.initter = fluid.identity;\n            if (typeof(source) === \"string\") {\n                options.target = options.expandSource(source);\n            }\n            else {\n                options.target = source;\n            }\n        }\n        return options;\n    };\n\n    // supported, PUBLIC API function\n    fluid.expand = function (source, options) {\n        var expandOptions = fluid.makeExpandOptions(source, options);\n        expandOptions.initter();\n        return expandOptions.target;\n    };\n\n    fluid.preExpandRecurse = function (root, source, holder, member, rootSegs) { // on entry, holder[member] = source\n        fluid.guardCircularExpansion(rootSegs, rootSegs.length);\n        function pushExpander(expander) {\n            root.expanders.push({expander: expander, holder: holder, member: member});\n            delete holder[member];\n        }\n        if (fluid.isIoCReference(source)) {\n            var parsed = fluid.parseContextReference(source);\n            var segs = fluid.model.parseEL(parsed.path);\n            pushExpander({\n                typeFunc: fluid.expander.fetch,\n                context: parsed.context,\n                segs: segs\n            });\n        } else if (fluid.isPlainObject(source)) {\n            if (source.expander) {\n                source.expander.typeFunc = fluid.getGlobalValue(source.expander.type || \"fluid.invokeFunc\");\n                pushExpander(source.expander);\n            } else {\n                fluid.each(source, function (value, key) {\n                    rootSegs.push(key);\n                    fluid.preExpandRecurse(root, value, source, key, rootSegs);\n                    rootSegs.pop();\n                });\n            }\n        }\n    };\n\n    fluid.preExpand = function (source) {\n        var root = {\n            expanders: [],\n            source: fluid.isUnexpandable(source) ? source : fluid.copy(source)\n        };\n        fluid.preExpandRecurse(root, root.source, root, \"source\", []);\n        return root;\n    };\n\n    // Main pathway for freestanding material that is not part of a component's options\n    fluid.expandImmediate = function (source, that, localRecord) {\n        var options = fluid.makeStackResolverOptions(that, localRecord, true); // TODO: ELstyle and target are now ignored\n        var root = fluid.preExpand(source);\n        fluid.expandImmediateImpl(root, options);\n        return root.source;\n    };\n\n    // High performance expander for situations such as invokers, listeners, where raw materials can be cached - consumes \"root\" structure produced by preExpand\n    fluid.expandImmediateImpl = function (root, options) {\n        var expanders = root.expanders;\n        for (var i = 0; i < expanders.length; ++i) {\n            var expander = expanders[i];\n            expander.holder[expander.member] = expander.expander.typeFunc(null, expander, options);\n        }\n    };\n\n    fluid.expandExpander = function (deliverer, source, options) {\n        var expander = fluid.getGlobalValue(source.expander.type || \"fluid.invokeFunc\");\n        if (!expander) {\n            fluid.fail(\"Unknown expander with type \" + source.expander.type);\n        }\n        return expander(deliverer, source, options);\n    };\n\n    fluid.registerNamespace(\"fluid.expander\");\n\n    // \"deliverer\" is null in the new (fast) pathway, this is a relic of the old \"source expander\" signature. It appears we can already globally remove this\n    fluid.expander.fetch = function (deliverer, source, options) {\n        var localRecord = options.localRecord, context = source.expander.context, segs = source.expander.segs;\n        // TODO: Either type-check on context as string or else create fetchSlow\n        var inLocal = localRecord[context] !== undefined;\n        var contextStatus = options.contextThat.lifecycleStatus;\n        // somewhat hack to anticipate \"fits\" for FLUID-4925 - we assume that if THIS component is in construction, its reference target might be too\n        // if context is destroyed, we are most likely in an afterDestroy listener and so path records have been destroyed\n        var fast = contextStatus === \"treeConstructed\" || contextStatus === \"destroyed\";\n        var component = inLocal ? localRecord[context] : fluid.resolveContext(context, options.contextThat, fast);\n        if (component) {\n            var root = component;\n            if (inLocal || component.lifecycleStatus !== \"constructing\") {\n                for (var i = 0; i < segs.length; ++i) { // fast resolution of paths when no ginger process active\n                    root = root ? root[segs[i]] : undefined;\n                }\n            } else {\n                root = fluid.getForComponent(component, segs);\n            }\n            if (root === undefined && !inLocal) { // last-ditch attempt to get exotic EL value from component\n                root = fluid.getForComponent(component, segs);\n            }\n            return root;\n        } else if (segs.length > 0) {\n            fluid.triggerMismatchedPathError(source.expander, options.contextThat);\n        }\n    };\n\n    /** \"light\" expanders, starting with the default expander invokeFunc,\n         which makes an arbitrary function call (after expanding arguments) and are then replaced in\n         the configuration with the call results. These will probably be abolished and replaced with\n         equivalent model transformation machinery **/\n\n    // This one is now positioned as the \"universal expander\" - default if no type supplied\n    fluid.invokeFunc = function (deliverer, source, options) {\n        var expander = source.expander;\n        var args = fluid.makeArray(expander.args);\n        expander.args = args; // head off case where args is an EL reference which resolves to an array\n        if (options.recurse) { // only available in the path from fluid.expandOptions - this will be abolished in the end\n            args = options.recurse([], args);\n        } else {\n            expander = fluid.expandImmediate(expander, options.contextThat, options.localRecord);\n            args = expander.args;\n        }\n        var funcEntry = expander.func || expander.funcName;\n        var func = (options.expandSource ? options.expandSource(funcEntry) : funcEntry) || fluid.recordToApplicable(expander, options.contextThat);\n        if (typeof(func) === \"string\") {\n            func = fluid.getGlobalValue(func);\n        }\n        if (!func) {\n            fluid.fail(\"Error in expander record \", expander, \": \" + funcEntry + \" could not be resolved to a function for component \", options.contextThat);\n        }\n        return func.apply(null, args);\n    };\n\n    // The \"noexpand\" expander which simply unwraps one level of expansion and ceases.\n    fluid.noexpand = function (deliverer, source) {\n        return source.expander.value ? source.expander.value : source.expander.tree;\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2008-2010 University of Cambridge\nCopyright 2008-2009 University of Toronto\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2010-2014 OCAD University\nCopyright 2012-2014 Raising the Floor - US\nCopyright 2014-2016 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    /** NOTE: The contents of this file are by default NOT PART OF THE PUBLIC FLUID API unless explicitly annotated before the function **/\n\n    /** MODEL ACCESSOR ENGINE **/\n\n    /** Standard strategies for resolving path segments **/\n\n    fluid.model.makeEnvironmentStrategy = function (environment) {\n        return function (root, segment, index) {\n            return index === 0 && environment[segment] ?\n                environment[segment] : undefined;\n        };\n    };\n\n    fluid.model.defaultCreatorStrategy = function (root, segment) {\n        if (root[segment] === undefined) {\n            root[segment] = {};\n            return root[segment];\n        }\n    };\n\n    fluid.model.defaultFetchStrategy = function (root, segment) {\n        return root[segment];\n    };\n\n    fluid.model.funcResolverStrategy = function (root, segment) {\n        if (root.resolvePathSegment) {\n            return root.resolvePathSegment(segment);\n        }\n    };\n\n    fluid.model.traverseWithStrategy = function (root, segs, initPos, config, uncess) {\n        var strategies = config.strategies;\n        var limit = segs.length - uncess;\n        for (var i = initPos; i < limit; ++i) {\n            if (!root) {\n                return root;\n            }\n            var accepted;\n            for (var j = 0; j < strategies.length; ++j) {\n                accepted = strategies[j](root, segs[i], i + 1, segs);\n                if (accepted !== undefined) {\n                    break; // May now short-circuit with stateless strategies\n                }\n            }\n            if (accepted === fluid.NO_VALUE) {\n                accepted = undefined;\n            }\n            root = accepted;\n        }\n        return root;\n    };\n\n    /** Returns both the value and the path of the value held at the supplied EL path **/\n    fluid.model.getValueAndSegments = function (root, EL, config, initSegs) {\n        return fluid.model.accessWithStrategy(root, EL, fluid.NO_VALUE, config, initSegs, true);\n    };\n\n    // Very lightweight remnant of trundler, only used in resolvers\n    fluid.model.makeTrundler = function (config) {\n        return function (valueSeg, EL) {\n            return fluid.model.getValueAndSegments(valueSeg.root, EL, config, valueSeg.segs);\n        };\n    };\n\n    fluid.model.getWithStrategy = function (root, EL, config, initSegs) {\n        return fluid.model.accessWithStrategy(root, EL, fluid.NO_VALUE, config, initSegs);\n    };\n\n    fluid.model.setWithStrategy = function (root, EL, newValue, config, initSegs) {\n        fluid.model.accessWithStrategy(root, EL, newValue, config, initSegs);\n    };\n\n    fluid.model.accessWithStrategy = function (root, EL, newValue, config, initSegs, returnSegs) {\n        // This function is written in this unfortunate style largely for efficiency reasons. In many cases\n        // it should be capable of running with 0 allocations (EL is preparsed, initSegs is empty)\n        if (!fluid.isPrimitive(EL) && !fluid.isArrayable(EL)) {\n            var key = EL.type || \"default\";\n            var resolver = config.resolvers[key];\n            if (!resolver) {\n                fluid.fail(\"Unable to find resolver of type \" + key);\n            }\n            var trundler = fluid.model.makeTrundler(config); // very lightweight trundler for resolvers\n            var valueSeg = {root: root, segs: initSegs};\n            valueSeg = resolver(valueSeg, EL, trundler);\n            if (EL.path && valueSeg) { // every resolver supports this piece of output resolution\n                valueSeg = trundler(valueSeg, EL.path);\n            }\n            return returnSegs ? valueSeg : (valueSeg ? valueSeg.root : undefined);\n        }\n        else {\n            return fluid.model.accessImpl(root, EL, newValue, config, initSegs, returnSegs, fluid.model.traverseWithStrategy);\n        }\n    };\n\n    // Implementation notes: The EL path manipulation utilities here are equivalents of the simpler ones\n    // that are provided in Fluid.js and elsewhere - they apply escaping rules to parse characters .\n    // as \\. and \\ as \\\\ - allowing us to process member names containing periods. These versions are mostly\n    // in use within model machinery, whereas the cheaper versions based on String.split(\".\") are mostly used\n    // within the IoC machinery.\n    // Performance testing in early 2015 suggests that modern browsers now allow these to execute slightly faster\n    // than the equivalent machinery written using complex regexps - therefore they will continue to be maintained\n    // here. However, there is still a significant performance gap with respect to the performance of String.split(\".\")\n    // especially on Chrome, so we will continue to insist that component member names do not contain a \".\" character\n    // for the time being.\n    // See http://jsperf.com/parsing-escaped-el for some experiments\n\n    fluid.registerNamespace(\"fluid.pathUtil\");\n\n    fluid.pathUtil.getPathSegmentImpl = function (accept, path, i) {\n        var segment = null;\n        if (accept) {\n            segment = \"\";\n        }\n        var escaped = false;\n        var limit = path.length;\n        for (; i < limit; ++i) {\n            var c = path.charAt(i);\n            if (!escaped) {\n                if (c === \".\") {\n                    break;\n                }\n                else if (c === \"\\\\\") {\n                    escaped = true;\n                }\n                else if (segment !== null) {\n                    segment += c;\n                }\n            }\n            else {\n                escaped = false;\n                if (segment !== null) {\n                    segment += c;\n                }\n            }\n        }\n        if (segment !== null) {\n            accept[0] = segment;\n        }\n        return i;\n    };\n\n    var globalAccept = []; // TODO: reentrancy risk here. This holder is here to allow parseEL to make two returns without an allocation.\n\n    /** A version of fluid.model.parseEL that apples escaping rules - this allows path segments\n     * to contain period characters . - characters \"\\\" and \"}\" will also be escaped. WARNING -\n     * this current implementation is EXTREMELY slow compared to fluid.model.parseEL and should\n     * not be used in performance-sensitive applications */\n    // supported, PUBLIC API function\n    fluid.pathUtil.parseEL = function (path) {\n        var togo = [];\n        var index = 0;\n        var limit = path.length;\n        while (index < limit) {\n            var firstdot = fluid.pathUtil.getPathSegmentImpl(globalAccept, path, index);\n            togo.push(globalAccept[0]);\n            index = firstdot + 1;\n        }\n        return togo;\n    };\n\n    // supported, PUBLIC API function\n    fluid.pathUtil.composeSegment = function (prefix, toappend) {\n        toappend = toappend.toString();\n        for (var i = 0; i < toappend.length; ++i) {\n            var c = toappend.charAt(i);\n            if (c === \".\" || c === \"\\\\\" || c === \"}\") {\n                prefix += \"\\\\\";\n            }\n            prefix += c;\n        }\n        return prefix;\n    };\n\n    /** Escapes a single path segment by replacing any character \".\", \"\\\" or \"}\" with\n     * itself prepended by \\\n     */\n    // supported, PUBLIC API function\n    fluid.pathUtil.escapeSegment = function (segment) {\n        return fluid.pathUtil.composeSegment(\"\", segment);\n    };\n\n    /**\n     * Compose a prefix and suffix EL path, where the prefix is already escaped.\n     * Prefix may be empty, but not null. The suffix will become escaped.\n     */\n    // supported, PUBLIC API function\n    fluid.pathUtil.composePath = function (prefix, suffix) {\n        if (prefix.length !== 0) {\n            prefix += \".\";\n        }\n        return fluid.pathUtil.composeSegment(prefix, suffix);\n    };\n\n    /**\n     * Compose a set of path segments supplied as arguments into an escaped EL expression. Escaped version\n     * of fluid.model.composeSegments\n     */\n\n    // supported, PUBLIC API function\n    fluid.pathUtil.composeSegments = function () {\n        var path = \"\";\n        for (var i = 0; i < arguments.length; ++i) {\n            path = fluid.pathUtil.composePath(path, arguments[i]);\n        }\n        return path;\n    };\n\n    /** Helpful utility for use in resolvers - matches a path which has already been\n     * parsed into segments **/\n\n    fluid.pathUtil.matchSegments = function (toMatch, segs, start, end) {\n        if (end - start !== toMatch.length) {\n            return false;\n        }\n        for (var i = start; i < end; ++i) {\n            if (segs[i] !== toMatch[i - start]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    fluid.model.unescapedParser = {\n        parse: fluid.model.parseEL,\n        compose: fluid.model.composeSegments\n    };\n\n    // supported, PUBLIC API record\n    fluid.model.defaultGetConfig = {\n        parser: fluid.model.unescapedParser,\n        strategies: [fluid.model.funcResolverStrategy, fluid.model.defaultFetchStrategy]\n    };\n\n    // supported, PUBLIC API record\n    fluid.model.defaultSetConfig = {\n        parser: fluid.model.unescapedParser,\n        strategies: [fluid.model.funcResolverStrategy, fluid.model.defaultFetchStrategy, fluid.model.defaultCreatorStrategy]\n    };\n\n    fluid.model.escapedParser = {\n        parse: fluid.pathUtil.parseEL,\n        compose: fluid.pathUtil.composeSegments\n    };\n\n    // supported, PUBLIC API record\n    fluid.model.escapedGetConfig = {\n        parser: fluid.model.escapedParser,\n        strategies: [fluid.model.defaultFetchStrategy]\n    };\n\n    // supported, PUBLIC API record\n    fluid.model.escapedSetConfig = {\n        parser: fluid.model.escapedParser,\n        strategies: [fluid.model.defaultFetchStrategy, fluid.model.defaultCreatorStrategy]\n    };\n\n    /** MODEL COMPONENT HIERARCHY AND RELAY SYSTEM **/\n\n    fluid.initRelayModel = function (that) {\n        fluid.deenlistModelComponent(that);\n        return that.model;\n    };\n\n    // TODO: This utility compensates for our lack of control over \"wave of explosions\" initialisation - we may\n    // catch a model when it is apparently \"completely initialised\" and that's the best we can do, since we have\n    // missed its own initial transaction\n\n    fluid.isModelComplete = function (that) {\n        return \"model\" in that && that.model !== fluid.inEvaluationMarker;\n    };\n\n    // Enlist this model component as part of the \"initial transaction\" wave - note that \"special transaction\" init\n    // is indexed by component, not by applier, and has special record type (complete + initModel), not transaction\n    fluid.enlistModelComponent = function (that) {\n        var instantiator = fluid.getInstantiator(that);\n        var enlist = instantiator.modelTransactions.init[that.id];\n        if (!enlist) {\n            enlist = {\n                that: that,\n                applier: fluid.getForComponent(that, \"applier\"), // required for FLUID-5504 even though currently unused\n                complete: fluid.isModelComplete(that)\n            };\n            instantiator.modelTransactions.init[that.id] = enlist;\n        }\n        return enlist;\n    };\n\n    fluid.clearTransactions = function () {\n        var instantiator = fluid.globalInstantiator;\n        fluid.clear(instantiator.modelTransactions);\n        instantiator.modelTransactions.init = {};\n    };\n\n    fluid.failureEvent.addListener(fluid.clearTransactions, \"clearTransactions\", \"before:fail\");\n\n    // Utility to coordinate with our crude \"oscillation prevention system\" which limits each link to 2 updates (presumably\n    // in opposite directions). In the case of the initial transaction, we need to reset the count given that genuine\n    // changes are arising in the system with each new enlisted model. TODO: if we ever get users operating their own\n    // transactions, think of a way to incorporate this into that workflow\n    fluid.clearLinkCounts = function (transRec, relaysAlso) {\n        // TODO: Separate this record out into different types of records (relays are already in their own area)\n        fluid.each(transRec, function (value, key) {\n            if (typeof(value) === \"number\") {\n                transRec[key] = 0;\n            } else if (relaysAlso && value.options && typeof(value.relayCount) === \"number\") {\n                value.relayCount = 0;\n            }\n        });\n    };\n\n    fluid.sortCompleteLast = function (reca, recb) {\n        return (reca.completeOnInit ? 1 : 0) - (recb.completeOnInit ? 1 : 0);\n    };\n\n    // Operate all coordinated transactions by bringing models to their respective initial values, and then commit them all\n    fluid.operateInitialTransaction = function (that, mrec) {\n        var transId = fluid.allocateGuid();\n        var transRec = fluid.getModelTransactionRec(that, transId);\n        var transac;\n        var transacs = fluid.transform(mrec, function (recel) {\n            transac = recel.that.applier.initiate(null, \"init\", transId);\n            transRec[recel.that.applier.applierId] = {transaction: transac};\n            return transac;\n        });\n        // TODO: This sort has very little effect in any current test (can be replaced by no-op - see FLUID-5339) - but\n        // at least can't be performed in reverse order (\"FLUID-3674 event coordination test\" will fail) - need more cases\n        var recs = fluid.values(mrec).sort(fluid.sortCompleteLast);\n        fluid.each(recs, function (recel) {\n            var that = recel.that;\n            var transac = transacs[that.id];\n            if (recel.completeOnInit) {\n                fluid.initModelEvent(that, that.applier, transac, that.applier.listeners.sortedListeners);\n            } else {\n                fluid.each(recel.initModels, function (initModel) {\n                    transac.fireChangeRequest({type: \"ADD\", segs: [], value: initModel});\n                    fluid.clearLinkCounts(transRec, true);\n                });\n            }\n            var shadow = fluid.shadowForComponent(that);\n            if (shadow) { // Fix for FLUID-5869 - the component may have been destroyed during its own init transaction\n                shadow.modelComplete = true; // technically this is a little early, but this flag is only read in fluid.connectModelRelay\n            }\n        });\n\n        transac.commit(); // committing one representative transaction will commit them all\n    };\n\n    // This modelComponent has now concluded initialisation - commit its initialisation transaction if it is the last such in the wave\n    fluid.deenlistModelComponent = function (that) {\n        var instantiator = fluid.getInstantiator(that);\n        var mrec = instantiator.modelTransactions.init;\n        if (!mrec[that.id]) { // avoid double evaluation through currently hacked \"members\" implementation\n            return;\n        }\n        that.model = undefined; // Abuse of the ginger system - in fact it is \"currently in evaluation\" - we need to return a proper initial model value even if no init occurred yet\n        mrec[that.id].complete = true; // flag means - \"complete as in ready to participate in this transaction\"\n        var incomplete = fluid.find_if(mrec, function (recel) {\n            return recel.complete !== true;\n        });\n        if (!incomplete) {\n            fluid.operateInitialTransaction(that, mrec);\n            // NB: Don't call fluid.concludeTransaction since \"init\" is not a standard record - this occurs in commitRelays for the corresponding genuine record as usual\n            instantiator.modelTransactions.init = {};\n        }\n    };\n\n    fluid.parseModelReference = function (that, ref) {\n        var parsed = fluid.parseContextReference(ref);\n        parsed.segs = that.applier.parseEL(parsed.path);\n        return parsed;\n    };\n\n    /** Given a string which may represent a reference into a model, parses it into a structure holding the coordinates for resolving the reference. It specially\n     * detects \"references into model material\" by looking for the first path segment in the path reference which holds the value \"model\". Some of its workflow is bypassed\n     * in the special case of a reference representing an implicit model relay. In this case, ref will definitely be a String, and if it does not refer to model material, rather than\n     * raising an error, the return structure will include a field <code>nonModel: true</code>\n     * @param that {Component} The component holding the reference\n     * @param name {String} A human-readable string representing the type of block holding the reference - e.g. \"modelListeners\"\n     * @param ref {String|ModelReference} The model reference to be parsed. This may have already been partially parsed at the original site - that is, a ModelReference is a\n     * structure containing\n     *     segs: {Array of String} An array of model path segments to be dereferenced in the target component (will become `modelSegs` in the final return)\n     *     context: {String} An IoC reference to the component holding the model\n     * @param implicitRelay {Boolean} <code>true</code> if the reference was being resolved for an implicit model relay - that is,\n     * whether it occured within the `model` block itself. In this case, references to non-model material are not a failure and will simply be resolved\n     * (by the caller) onto their targets (as constants). Otherwise, this function will issue a failure on discovering a reference to non-model material.\n     * @return A structure holding:\n     *    that {Component} The component whose model is the target of the reference. This may end up being constructed as part of the act of resolving the reference\n     *    applier {Component} The changeApplier for the component <code>that</code>. This may end up being constructed as part of the act of resolving the reference\n     *    modelSegs {Array of String} An array of path segments into the model of the component\n     *    path {String} the value of <code>modelSegs</code> encoded as an EL path (remove client uses of this in time)\n     *    nonModel {Boolean} Set if <code>implicitRelay</code> was true and the reference was not into a model (modelSegs/path will not be set in this case)\n     *    segs {Array of String} Holds the full array of path segments found by parsing the original reference - only useful in <code>nonModel</code> case\n     */\n    fluid.parseValidModelReference = function (that, name, ref, implicitRelay) {\n        var reject = function (message) {\n            fluid.fail(\"Error in \" + name + \": \", ref, message);\n        };\n        var parsed; // resolve ref into context and modelSegs\n        if (typeof(ref) === \"string\") {\n            if (fluid.isIoCReference(ref)) {\n                parsed = fluid.parseModelReference(that, ref);\n                var modelPoint = parsed.segs.indexOf(\"model\");\n                if (modelPoint === -1) {\n                    if (implicitRelay) {\n                        parsed.nonModel = true;\n                    } else {\n                        reject(\" must be a reference into a component model via a path including the segment \\\"model\\\"\");\n                    }\n                } else {\n                    parsed.modelSegs = parsed.segs.slice(modelPoint + 1);\n                    parsed.contextSegs = parsed.segs.slice(0, modelPoint);\n                    delete parsed.path;\n                }\n\n            } else {\n                parsed = {\n                    path: ref,\n                    modelSegs: that.applier.parseEL(ref)\n                };\n            }\n        } else {\n            if (!fluid.isArrayable(ref.segs)) {\n                reject(\" must contain an entry \\\"segs\\\" holding path segments referring a model path within a component\");\n            }\n            parsed = {\n                context: ref.context,\n                modelSegs: fluid.expandOptions(ref.segs, that)\n            };\n        }\n        var target; // resolve target component, which defaults to \"that\"\n        if (parsed.context) {\n            target = fluid.resolveContext(parsed.context, that);\n            if (!target) {\n                reject(\" must be a reference to an existing component\");\n            }\n            if (parsed.contextSegs) {\n                target = fluid.getForComponent(target, parsed.contextSegs);\n            }\n        } else {\n            target = that;\n        }\n        if (!parsed.nonModel) {\n            if (!target.applier) {\n                fluid.getForComponent(target, [\"applier\"]);\n            }\n            if (!target.applier) {\n                reject(\" must be a reference to a component with a ChangeApplier (descended from fluid.modelComponent)\");\n            }\n        }\n        parsed.that = target;\n        parsed.applier = target.applier;\n        if (!parsed.path) { // ChangeToApplicable amongst others rely on this\n            parsed.path = target.applier.composeSegments.apply(null, parsed.modelSegs);\n        }\n        return parsed;\n    };\n\n    // Gets global record for a particular transaction id, allocating if necessary - looks up applier id to transaction,\n    // as well as looking up source id (linkId in below) to count/true\n    // Through poor implementation quality, not every access passes through this function - some look up instantiator.modelTransactions directly\n    fluid.getModelTransactionRec = function (that, transId) {\n        var instantiator = fluid.getInstantiator(that);\n        if (!transId) {\n            fluid.fail(\"Cannot get transaction record without transaction id\");\n        }\n        if (!instantiator) {\n            return null;\n        }\n        var transRec = instantiator.modelTransactions[transId];\n        if (!transRec) {\n            transRec = instantiator.modelTransactions[transId] = {\n                relays: [], // sorted array of relay elements (also appear at top level index by transaction id)\n                sources: {}, // hash of the global transaction sources (includes \"init\" but excludes \"relay\" and \"local\")\n                externalChanges: {} // index by applierId to changePath to listener record\n            };\n        }\n        return transRec;\n    };\n\n    fluid.recordChangeListener = function (component, applier, sourceListener, listenerId) {\n        var shadow = fluid.shadowForComponent(component);\n        fluid.recordListener(applier.modelChanged, sourceListener, shadow, listenerId);\n    };\n\n    fluid.registerRelayTransaction = function (transRec, targetApplier, transId, options, npOptions) {\n        var newTrans = targetApplier.initiate(\"relay\", null, transId); // non-top-level transaction will defeat postCommit\n        var transEl = transRec[targetApplier.applierId] = {transaction: newTrans, relayCount: 0, namespace: npOptions.namespace, priority: npOptions.priority, options: options};\n        transEl.priority = fluid.parsePriority(transEl.priority, transRec.relays.length, false, \"model relay\");\n        transRec.relays.push(transEl);\n        return transEl;\n    };\n\n    // Configure this parameter to tweak the number of relays the model will attempt per transaction before bailing out with an error\n    fluid.relayRecursionBailout = 100;\n\n    // Used with various arg combinations from different sources. For standard \"implicit relay\" or fully lensed relay,\n    // the first 4 args will be set, and \"options\" will be empty\n\n    // For a model-dependent relay, this will be used in two halves - firstly, all of the model\n    // sources will bind to the relay transform document itself. In this case the argument \"targetApplier\" within \"options\" will be set.\n    // In this case, the component known as \"target\" is really the source - it is a component reference discovered by parsing the\n    // relay document.\n\n    // Secondly, the relay itself will schedule an invalidation (as if receiving change to \"*\" of its source - which may in most\n    // cases actually be empty) and play through its transducer. \"Source\" component itself is never empty, since it is used for listener\n    // degistration on destruction (check this is correct for external model relay). However, \"sourceSegs\" may be empty in the case\n    // there is no \"source\" component registered for the link. This change is played in a \"half-transactional\" way - that is, we wait\n    // for all other changes in the system to settle before playing the relay document, in order to minimise the chances of multiple\n    // firing and corruption. This is done via the \"preCommit\" hook registered at top level in establishModelRelay. This listener\n    // is transactional but it does not require the transaction to conclude in order to fire - it may be reused as many times as\n    // required within the \"overall\" transaction whilst genuine (external) changes continue to arrive.\n\n    // TODO: Vast overcomplication and generation of closure garbage. SURELY we should be able to convert this into an externalised, arg-ist form\n    fluid.registerDirectChangeRelay = function (target, targetSegs, source, sourceSegs, linkId, transducer, options, npOptions) {\n        var targetApplier = options.targetApplier || target.applier; // implies the target is a relay document\n        var sourceApplier = options.sourceApplier || source.applier; // implies the source is a relay document - listener will be transactional\n        var applierId = targetApplier.applierId;\n        targetSegs = fluid.makeArray(targetSegs);\n        sourceSegs = sourceSegs ? fluid.makeArray(sourceSegs) : sourceSegs; // take copies since originals will be trashed\n        var sourceListener = function (newValue, oldValue, path, changeRequest, trans, applier) {\n            var transId = trans.id;\n            var transRec = fluid.getModelTransactionRec(target, transId);\n            if (applier && trans && !transRec[applier.applierId]) { // don't trash existing record which may contain \"options\" (FLUID-5397)\n                transRec[applier.applierId] = {transaction: trans}; // enlist the outer user's original transaction\n            }\n            var existing = transRec[applierId];\n            transRec[linkId] = transRec[linkId] || 0;\n            // Crude \"oscillation prevention\" system limits each link to maximum of 2 operations per cycle (presumably in opposite directions)\n            var relay = true; // TODO: See FLUID-5303 - we currently disable this check entirely to solve FLUID-5293 - perhaps we might remove link counts entirely\n            if (relay) {\n                ++transRec[linkId];\n                if (transRec[linkId] > fluid.relayRecursionBailout) {\n                    fluid.fail(\"Error in model relay specification at component \", target, \" - operated more than \" + fluid.relayRecursionBailout + \" relays without model value settling - current model contents are \", trans.newHolder.model);\n                }\n                if (!existing) {\n                    existing = fluid.registerRelayTransaction(transRec, targetApplier, transId, options, npOptions);\n                }\n                if (transducer && !options.targetApplier) {\n                    // TODO: This is just for safety but is still unusual and now abused. The transducer doesn't need the \"newValue\" since all the transform information\n                    // has been baked into the transform document itself. However, we now rely on this special signalling value to make sure we regenerate transforms in\n                    // the \"forwardAdapter\"\n                    transducer(existing.transaction, options.sourceApplier ? undefined : newValue, sourceSegs, targetSegs, changeRequest);\n                } else {\n                    if (!options.noRelayDeletesDirect && changeRequest && changeRequest.type === \"DELETE\") {\n                        existing.transaction.fireChangeRequest({type: \"DELETE\", segs: targetSegs});\n                    }\n                    if (newValue !== undefined) {\n                        existing.transaction.fireChangeRequest({type: \"ADD\", segs: targetSegs, value: newValue});\n                    }\n                }\n            }\n        };\n        var spec;\n        if (sourceSegs) {\n            spec = sourceApplier.modelChanged.addListener({\n                isRelay: true,\n                segs: sourceSegs,\n                transactional: options.transactional\n            }, sourceListener);\n            if (fluid.passLogLevel(fluid.logLevel.TRACE)) {\n                fluid.log(fluid.logLevel.TRACE, \"Adding relay listener with listenerId \" + spec.listenerId + \" to source applier with id \" +\n                    sourceApplier.applierId + \" from target applier with id \" + applierId + \" for target component with id \" + target.id);\n            }\n        }\n        if (source) { // TODO - we actually may require to register on THREE sources in the case modelRelay is attached to a\n            // component which is neither source nor target. Note there will be problems if source, say, is destroyed and recreated,\n            // and holder is not - relay will in that case be lost. Need to integrate relay expressions with IoCSS.\n            fluid.recordChangeListener(source, sourceApplier, sourceListener, spec.listenerId);\n            if (target !== source) {\n                fluid.recordChangeListener(target, sourceApplier, sourceListener, spec.listenerId);\n            }\n        }\n    };\n\n    // When called during parsing a contextualised model relay document, these arguments are reversed - \"source\" refers to the\n    // current component, and \"target\" refers successively to the various \"source\" components.\n    // \"options\" will be transformPackage\n    fluid.connectModelRelay = function (source, sourceSegs, target, targetSegs, options) {\n        var linkId = fluid.allocateGuid();\n        function enlistComponent(component) {\n            var enlist = fluid.enlistModelComponent(component);\n\n            if (enlist.complete) {\n                var shadow = fluid.shadowForComponent(component);\n                if (shadow.modelComplete) {\n                    enlist.completeOnInit = true;\n                }\n            }\n        }\n        enlistComponent(target);\n        enlistComponent(source); // role of \"source\" and \"target\" may have been swapped in a modelRelay document\n        var npOptions = fluid.filterKeys(options, [\"namespace\", \"priority\"]);\n\n        if (options.update) { // it is a call via parseImplicitRelay for a relay document\n            if (options.targetApplier) {\n                // register changes from the model onto changes to the model relay document\n                fluid.registerDirectChangeRelay(source, sourceSegs, target, targetSegs, linkId, null, {\n                    transactional: false,\n                    targetApplier: options.targetApplier,\n                    update: options.update\n                }, npOptions);\n            } else {\n                // We are in the middle of parsing a contextualised relay, and this call has arrived via its parseImplicitRelay.\n                // Rather than bind source-source, instead register the \"half-transactional\" listener which binds changes\n                // from the relay itself onto the target\n                fluid.registerDirectChangeRelay(target, targetSegs, source, [], linkId + \"-transform\", options.forwardAdapter, {transactional: true, sourceApplier: options.forwardApplier}, npOptions);\n            }\n        } else { // more efficient branch where relay is uncontextualised\n            fluid.registerDirectChangeRelay(target, targetSegs, source, sourceSegs, linkId, options.forwardAdapter, {transactional: false}, npOptions);\n            if (sourceSegs) {\n                fluid.registerDirectChangeRelay(source, sourceSegs, target, targetSegs, linkId, options.backwardAdapter, {transactional: false}, npOptions);\n            }\n        }\n    };\n\n    fluid.parseSourceExclusionSpec = function (targetSpec, sourceSpec) {\n        targetSpec.excludeSource = fluid.arrayToHash(fluid.makeArray(sourceSpec.excludeSource || (sourceSpec.includeSource ? \"*\" : undefined)));\n        targetSpec.includeSource = fluid.arrayToHash(fluid.makeArray(sourceSpec.includeSource));\n        return targetSpec;\n    };\n\n    fluid.isExcludedChangeSource = function (transaction, spec) {\n        if (!spec || !spec.excludeSource) { // mergeModelListeners initModelEvent fabricates a fake spec that bypasses processing\n            return false;\n        }\n        var excluded = spec.excludeSource[\"*\"];\n        for (var source in transaction.fullSources) {\n            if (spec.excludeSource[source]) {\n                excluded = true;\n            }\n            if (spec.includeSource[source]) {\n                excluded = false;\n            }\n        }\n        return excluded;\n    };\n\n    fluid.model.guardedAdapter = function (transaction, cond, func, args) {\n        if (!fluid.isExcludedChangeSource(transaction, cond)) {\n            func.apply(null, args);\n        }\n    };\n\n    // TODO: This rather crummy function is the only site with a hard use of \"path\" as String\n    fluid.transformToAdapter = function (transform, targetPath) {\n        var basedTransform = {};\n        basedTransform[targetPath] = transform; // TODO: Faulty with respect to escaping rules\n        return function (trans, newValue, sourceSegs, targetSegs, changeRequest) {\n            if (changeRequest && changeRequest.type === \"DELETE\") {\n                trans.fireChangeRequest({type: \"DELETE\", path: targetPath}); // avoid mouse droppings in target document for FLUID-5585\n            }\n            // TODO: More efficient model that can only run invalidated portion of transform (need to access changeMap of source transaction)\n            fluid.model.transformWithRules(newValue, basedTransform, {finalApplier: trans});\n        };\n    };\n\n    // TODO: sourcePath and targetPath should really be converted to segs to avoid excess work in parseValidModelReference\n    fluid.makeTransformPackage = function (componentThat, transform, sourcePath, targetPath, forwardCond, backwardCond, namespace, priority) {\n        var that = {\n            forwardHolder: {model: transform},\n            backwardHolder: {model: null}\n        };\n        that.generateAdapters = function (trans) {\n            // can't commit \"half-transaction\" or events will fire - violate encapsulation in this way\n            that.forwardAdapterImpl = fluid.transformToAdapter(trans ? trans.newHolder.model : that.forwardHolder.model, targetPath);\n            if (sourcePath !== null) {\n                that.backwardHolder.model = fluid.model.transform.invertConfiguration(transform);\n                that.backwardAdapterImpl = fluid.transformToAdapter(that.backwardHolder.model, sourcePath);\n            }\n        };\n        that.forwardAdapter = function (transaction, newValue) { // create a stable function reference for this possibly changing adapter\n            if (newValue === undefined) {\n                that.generateAdapters(); // TODO: Quick fix for incorrect scheduling of invalidation/transducing\n                // \"it so happens\" that fluid.registerDirectChangeRelay invokes us with empty newValue in the case of invalidation -> transduction\n            }\n            fluid.model.guardedAdapter(transaction, forwardCond, that.forwardAdapterImpl, arguments);\n        };\n        // fired from fluid.model.updateRelays via invalidator event\n        that.runTransform = function (trans) {\n            trans.commit(); // this will reach the special \"half-transactional listener\" registered in fluid.connectModelRelay,\n            // branch with options.targetApplier - by committing the transaction, we update the relay document in bulk and then cause\n            // it to execute (via \"transducer\")\n            trans.reset();\n        };\n        that.forwardApplier = fluid.makeHolderChangeApplier(that.forwardHolder);\n        that.forwardApplier.isRelayApplier = true; // special annotation so these can be discovered in the transaction record\n        that.invalidator = fluid.makeEventFirer({name: \"Invalidator for model relay with applier \" + that.forwardApplier.applierId});\n        if (sourcePath !== null) {\n            that.backwardApplier = fluid.makeHolderChangeApplier(that.backwardHolder);\n            that.backwardAdapter = function (transaction) {\n                fluid.model.guardedAdapter(transaction, backwardCond, that.backwardAdapterImpl, arguments);\n            };\n        }\n        that.update = that.invalidator.fire; // necessary so that both routes to fluid.connectModelRelay from here hit the first branch\n        var implicitOptions = {\n            targetApplier: that.forwardApplier, // this special field identifies us to fluid.connectModelRelay\n            update: that.update,\n            namespace: namespace,\n            priority: priority,\n            refCount: 0\n        };\n        that.forwardHolder.model = fluid.parseImplicitRelay(componentThat, transform, [], implicitOptions);\n        that.refCount = implicitOptions.refCount;\n        that.namespace = namespace;\n        that.priority = priority;\n        that.generateAdapters();\n        that.invalidator.addListener(that.generateAdapters);\n        that.invalidator.addListener(that.runTransform);\n        return that;\n    };\n\n    fluid.singleTransformToFull = function (singleTransform) {\n        var withPath = $.extend(true, {inputPath: \"\"}, singleTransform);\n        return {\n            \"\": {\n                transform: withPath\n            }\n        };\n    };\n\n    // Convert old-style \"relay conditions\" to source includes/excludes as used in model listeners\n    fluid.model.relayConditions = {\n        initOnly: {includeSource: \"init\"},\n        liveOnly: {excludeSource: \"init\"},\n        never:    {includeSource: []},\n        always:   {}\n    };\n\n    fluid.model.parseRelayCondition = function (condition) {\n        if (condition === \"initOnly\") {\n            fluid.log(fluid.logLevel.WARN, \"The relay condition \\\"initOnly\\\" is deprecated: Please use the form 'includeSource: \\\"init\\\"' instead\");\n        } else if (condition === \"liveOnly\") {\n            fluid.log(fluid.logLevel.WARN, \"The relay condition \\\"initOnly\\\" is deprecated: Please use the form 'excludeSource: \\\"init\\\"' instead\");\n        }\n        var exclusionRec;\n        if (!condition) {\n            exclusionRec = {};\n        } else if (typeof(condition) === \"string\") {\n            exclusionRec = fluid.model.relayConditions[condition];\n            if (!exclusionRec) {\n                fluid.fail(\"Unrecognised model relay condition string \\\"\" + condition + \"\\\": the supported values are \\\"never\\\" or a record with members \\\"includeSource\\\" and/or \\\"excludeSource\\\"\");\n            }\n        } else {\n            exclusionRec = condition;\n        }\n        return fluid.parseSourceExclusionSpec({}, exclusionRec);\n    };\n\n    fluid.parseModelRelay = function (that, mrrec, key) {\n        var parsedSource = mrrec.source ? fluid.parseValidModelReference(that, \"modelRelay record member \\\"source\\\"\", mrrec.source) :\n            {path: null, modelSegs: null};\n        var parsedTarget = fluid.parseValidModelReference(that, \"modelRelay record member \\\"target\\\"\", mrrec.target);\n        var namespace = mrrec.namespace || key;\n\n        var transform = mrrec.singleTransform ? fluid.singleTransformToFull(mrrec.singleTransform) : mrrec.transform;\n        if (!transform) {\n            fluid.fail(\"Cannot parse modelRelay record without element \\\"singleTransform\\\" or \\\"transform\\\":\", mrrec);\n        }\n        var forwardCond = fluid.model.parseRelayCondition(mrrec.forward), backwardCond = fluid.model.parseRelayCondition(mrrec.backward);\n\n        var transformPackage = fluid.makeTransformPackage(that, transform, parsedSource.path, parsedTarget.path, forwardCond, backwardCond, namespace, mrrec.priority);\n        var noRelayDeletes = {noRelayDeletesDirect : true}; // DELETE relay is handled in the transducer itself\n        if (transformPackage.refCount === 0) { // There were no implicit relay elements found in the relay document - it can be relayed directly\n            // This first call binds changes emitted from the relay ends to each other, synchronously\n            fluid.connectModelRelay(parsedSource.that || that, parsedSource.modelSegs, parsedTarget.that, parsedTarget.modelSegs,\n            // Primarily, here, we want to get rid of \"update\" which is what signals to connectModelRelay that this is a invalidatable relay\n                fluid.filterKeys(transformPackage, [\"forwardAdapter\", \"backwardAdapter\", \"namespace\", \"priority\"])\n                , noRelayDeletes);\n        } else {\n            if (parsedSource.modelSegs) {\n                fluid.fail(\"Error in model relay definition: If a relay transform has a model dependency, you can not specify a \\\"source\\\" entry - please instead enter this as \\\"input\\\" in the transform specification. Definition was \", mrrec, \" for component \", that);\n            }\n            // This second call binds changes emitted from the relay document itself onto the relay ends (using the \"half-transactional system\")\n            fluid.connectModelRelay(parsedSource.that || that, parsedSource.modelSegs, parsedTarget.that, parsedTarget.modelSegs, transformPackage);\n        }\n    };\n\n    fluid.parseImplicitRelay = function (that, modelRec, segs, options) {\n        var value;\n        if (fluid.isIoCReference(modelRec)) {\n            var parsed = fluid.parseValidModelReference(that, \"model reference from model (implicit relay)\", modelRec, true);\n            if (parsed.nonModel) {\n                value = fluid.getForComponent(parsed.that, parsed.segs);\n            } else {\n                ++options.refCount; // This count is used from within fluid.makeTransformPackage\n                fluid.connectModelRelay(that, segs, parsed.that, parsed.modelSegs, options);\n            }\n        } else if (fluid.isPrimitive(modelRec) || !fluid.isPlainObject(modelRec)) {\n            value = modelRec;\n        } else if (modelRec.expander && fluid.isPlainObject(modelRec.expander)) {\n            value = fluid.expandOptions(modelRec, that);\n        } else {\n            value = fluid.freshContainer(modelRec);\n            fluid.each(modelRec, function (innerValue, key) {\n                segs.push(key);\n                var innerTrans = fluid.parseImplicitRelay(that, innerValue, segs, options);\n                if (innerTrans !== undefined) {\n                    value[key] = innerTrans;\n                }\n                segs.pop();\n            });\n        }\n        return value;\n    };\n\n\n    // Conclude the transaction by firing to all external listeners in priority order\n    fluid.model.notifyExternal = function (transRec) {\n        var allChanges = transRec ? fluid.values(transRec.externalChanges) : [];\n        fluid.sortByPriority(allChanges);\n        for (var i = 0; i < allChanges.length; ++i) {\n            var change = allChanges[i];\n            var targetApplier = change.args[5]; // NOTE: This argument gets here via fluid.model.storeExternalChange from fluid.notifyModelChanges\n            if (!targetApplier.destroyed) { // 3rd point of guarding for FLUID-5592\n                change.listener.apply(null, change.args);\n            }\n        }\n        fluid.clearLinkCounts(transRec, true); // \"options\" structures for relayCount are aliased\n    };\n\n    fluid.model.commitRelays = function (instantiator, transactionId) {\n        var transRec = instantiator.modelTransactions[transactionId];\n        fluid.each(transRec, function (transEl) {\n        // EXPLAIN: This must commit ALL current transactions, not just those for relays - why?\n            if (transEl.transaction) { // some entries are links\n                transEl.transaction.commit(\"relay\");\n                transEl.transaction.reset();\n            }\n        });\n    };\n\n    // Listens to all invalidation to relays, and reruns/applies them if they have been invalidated\n    fluid.model.updateRelays = function (instantiator, transactionId) {\n        var transRec = instantiator.modelTransactions[transactionId];\n        var updates = 0;\n        fluid.sortByPriority(transRec.relays);\n        fluid.each(transRec.relays, function (transEl) {\n            // TODO: We have a bit of a problem here in that we only process updatable relays by priority - plain relays get to act non-transactionally\n            if (transEl.transaction.changeRecord.changes > 0 && transEl.relayCount < 2 && transEl.options.update) {\n                transEl.relayCount++;\n                fluid.clearLinkCounts(transRec);\n                transEl.options.update(transEl.transaction, transRec);\n                ++updates;\n            }\n        });\n        return updates;\n    };\n\n    fluid.establishModelRelay = function (that, optionsModel, optionsML, optionsMR, applier) {\n        var shadow = fluid.shadowForComponent(that);\n        if (!shadow.modelRelayEstablished) {\n            shadow.modelRelayEstablished = true;\n        } else {\n            fluid.fail(\"FLUID-5887 failure: Model relay initialised twice on component\", that);\n        }\n        fluid.mergeModelListeners(that, optionsML);\n\n        var enlist = fluid.enlistModelComponent(that);\n        fluid.each(optionsMR, function (mrrec, key) {\n            for (var i = 0; i < mrrec.length; ++i) {\n                fluid.parseModelRelay(that, mrrec[i], key);\n            }\n        });\n\n        // Note: this particular instance of \"refCount\" is disused. We only use the count made within fluid.makeTransformPackge\n        var initModels = fluid.transform(optionsModel, function (modelRec) {\n            return fluid.parseImplicitRelay(that, modelRec, [], {refCount: 0, priority: \"first\"});\n        });\n        enlist.initModels = initModels;\n\n        var instantiator = fluid.getInstantiator(that);\n\n        function updateRelays(transaction) {\n            while (fluid.model.updateRelays(instantiator, transaction.id) > 0) {} // eslint-disable-line no-empty\n        }\n\n        function commitRelays(transaction, applier, code) {\n            if (code !== \"relay\") { // don't commit relays if this commit is already a relay commit\n                fluid.model.commitRelays(instantiator, transaction.id);\n            }\n        }\n\n        function concludeTransaction(transaction, applier, code) {\n            if (code !== \"relay\") {\n                fluid.model.notifyExternal(instantiator.modelTransactions[transaction.id]);\n                delete instantiator.modelTransactions[transaction.id];\n            }\n        }\n\n        applier.preCommit.addListener(updateRelays);\n        applier.preCommit.addListener(commitRelays);\n        applier.postCommit.addListener(concludeTransaction);\n\n        return null;\n    };\n\n    // supported, PUBLIC API grade\n    fluid.defaults(\"fluid.modelComponent\", {\n        gradeNames: [\"fluid.component\"],\n        changeApplierOptions: {\n            relayStyle: true,\n            cullUnchanged: true\n        },\n        members: {\n            model: \"@expand:fluid.initRelayModel({that}, {that}.modelRelay)\",\n            applier: \"@expand:fluid.makeHolderChangeApplier({that}, {that}.options.changeApplierOptions)\",\n            modelRelay: \"@expand:fluid.establishModelRelay({that}, {that}.options.model, {that}.options.modelListeners, {that}.options.modelRelay, {that}.applier)\"\n        },\n        mergePolicy: {\n            model: {\n                noexpand: true,\n                func: fluid.arrayConcatPolicy // TODO: bug here in case a model consists of an array\n            },\n            modelListeners: fluid.makeMergeListenersPolicy(fluid.arrayConcatPolicy),\n            modelRelay: fluid.makeMergeListenersPolicy(fluid.arrayConcatPolicy, true)\n        }\n    });\n\n    fluid.modelChangedToChange = function (args) {\n        return {\n            value: args[0],\n            oldValue: args[1],\n            path: args[2],\n            transaction: args[4]\n        };\n    };\n\n    // Note - has only one call, from resolveModelListener\n    fluid.event.invokeListener = function (listener, args, localRecord, mergeRecord) {\n        if (typeof(listener) === \"string\") {\n            listener = fluid.event.resolveListener(listener); // just resolves globals\n        }\n        return listener.apply(null, args, localRecord, mergeRecord); // can be \"false apply\" that requires extra context for expansion\n    };\n\n    fluid.resolveModelListener = function (that, record) {\n        var togo = function () {\n            if (fluid.isDestroyed(that)) { // first guarding point to resolve FLUID-5592\n                return;\n            }\n            var change = fluid.modelChangedToChange(arguments);\n            var args = arguments;\n            var localRecord = {change: change, \"arguments\": args};\n            var mergeRecord = {source: Object.keys(change.transaction.sources)}; // cascade for FLUID-5490\n            if (record.args) {\n                args = fluid.expandOptions(record.args, that, {}, localRecord);\n            }\n            fluid.event.invokeListener(record.listener, fluid.makeArray(args), localRecord, mergeRecord);\n        };\n        fluid.event.impersonateListener(record.listener, togo);\n        return togo;\n    };\n\n    fluid.registerModelListeners = function (that, record, paths, namespace) {\n        var func = fluid.resolveModelListener(that, record);\n        fluid.each(record.byTarget, function (parsedArray) {\n            var parsed = parsedArray[0]; // that, applier are common across all these elements\n            var spec = {\n                listener: func, // for initModelEvent\n                listenerId: fluid.allocateGuid(), // external declarative listeners may often share listener handle, identify here\n                segsArray: fluid.getMembers(parsedArray, \"modelSegs\"),\n                pathArray: fluid.getMembers(parsedArray, \"path\"),\n                includeSource: record.includeSource,\n                excludeSource: record.excludeSource,\n                priority: fluid.expandOptions(record.priority, that),\n                transactional: true\n            };\n            // update \"spec\" so that we parse priority information just once\n            spec = parsed.applier.modelChanged.addListener(spec, func, namespace, record.softNamespace);\n\n            fluid.recordChangeListener(that, parsed.applier, func, spec.listenerId);\n            function initModelEvent() {\n                if (fluid.isModelComplete(parsed.that)) {\n                    var trans = parsed.applier.initiate(null, \"init\");\n                    fluid.initModelEvent(that, parsed.applier, trans, [spec]);\n                    trans.commit();\n                }\n            }\n            if (that !== parsed.that && !fluid.isModelComplete(that)) { // TODO: Use FLUID-4883 \"latched events\" when available\n                // Don't confuse the end user by firing their listener before the component is constructed\n                // TODO: Better detection than this is requred - we assume that the target component will not be discovered as part\n                // of the initial transaction wave, but if it is, it will get a double notification - we really need \"wave of explosions\"\n                // since we are currently too early in initialisation of THIS component in order to tell if other will be found\n                // independently.\n                var onCreate = fluid.getForComponent(that, [\"events\", \"onCreate\"]);\n                onCreate.addListener(initModelEvent);\n            }\n        });\n    };\n\n    fluid.mergeModelListeners = function (that, listeners) {\n        fluid.each(listeners, function (value, key) {\n            if (typeof(value) === \"string\") {\n                value = {\n                    funcName: value\n                };\n            }\n            // Bypass fluid.event.dispatchListener by means of \"standard = false\" and enter our custom workflow including expanding \"change\":\n            var records = fluid.event.resolveListenerRecord(value, that, \"modelListeners\", null, false).records;\n            fluid.each(records, function (record) {\n                // Aggregate model listeners into groups referring to the same component target.\n                // We do this so that a single entry will appear in its modelListeners so that they may\n                // be notified just once per transaction, and also displaced by namespace\n                record.byTarget = {};\n                var paths = fluid.makeArray(record.path === undefined ? key : record.path);\n                fluid.each(paths, function (path) {\n                    var parsed = fluid.parseValidModelReference(that, \"modelListeners entry\", path);\n                    fluid.pushArray(record.byTarget, parsed.that.id, parsed);\n                });\n                var namespace = (record.namespace && !record.softNamespace ? record.namespace : null) || (record.path !== undefined ? key : null);\n                fluid.registerModelListeners(that, record, paths, namespace);\n            });\n        });\n    };\n\n\n    /** CHANGE APPLIER **/\n\n    /** Dispatches a list of changes to the supplied applier */\n    fluid.fireChanges = function (applier, changes) {\n        for (var i = 0; i < changes.length; ++i) {\n            applier.fireChangeRequest(changes[i]);\n        }\n    };\n\n    fluid.model.isChangedPath = function (changeMap, segs) {\n        for (var i = 0; i <= segs.length; ++i) {\n            if (typeof(changeMap) === \"string\") {\n                return true;\n            }\n            if (i < segs.length && changeMap) {\n                changeMap = changeMap[segs[i]];\n            }\n        }\n        return false;\n    };\n\n    fluid.model.setChangedPath = function (options, segs, value) {\n        var notePath = function (record) {\n            segs.unshift(record);\n            fluid.model.setSimple(options, segs, value);\n            segs.shift();\n        };\n        if (!fluid.model.isChangedPath(options.changeMap, segs)) {\n            ++options.changes;\n            notePath(\"changeMap\");\n        }\n        if (!fluid.model.isChangedPath(options.deltaMap, segs)) {\n            ++options.deltas;\n            notePath(\"deltaMap\");\n        }\n    };\n\n    fluid.model.fetchChangeChildren = function (target, i, segs, source, options) {\n        fluid.each(source, function (value, key) {\n            segs[i] = key;\n            fluid.model.applyChangeStrategy(target, key, i, segs, value, options);\n            segs.length = i;\n        });\n    };\n\n    // Called with two primitives which are compared for equality. This takes account of \"floating point slop\" to avoid\n    // continuing to propagate inverted values as changes\n    // TODO: replace with a pluggable implementation\n    fluid.model.isSameValue = function (a, b) {\n        if (typeof(a) !== \"number\" || typeof(b) !== \"number\") {\n            return a === b;\n        } else {\n            // Don't use isNaN because of https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/isNaN#Confusing_special-case_behavior\n            if (a === b || a !== a && b !== b) { // Either the same concrete number or both NaN\n                return true;\n            } else {\n                var relError = Math.abs((a - b) / b);\n                return relError < 1e-12; // 64-bit floats have approx 16 digits accuracy, this should deal with most reasonable transforms\n            }\n        }\n    };\n\n    fluid.model.applyChangeStrategy = function (target, name, i, segs, source, options) {\n        var targetSlot = target[name];\n        var sourceCode = fluid.typeCode(source);\n        var targetCode = fluid.typeCode(targetSlot);\n        var changedValue = fluid.NO_VALUE;\n        if (sourceCode === \"primitive\") {\n            if (!fluid.model.isSameValue(targetSlot, source)) {\n                changedValue = source;\n                ++options.unchanged;\n            }\n        } else if (targetCode !== sourceCode || sourceCode === \"array\" && source.length !== targetSlot.length) {\n            // RH is not primitive - array or object and mismatching or any array rewrite\n            changedValue = fluid.freshContainer(source);\n        }\n        if (changedValue !== fluid.NO_VALUE) {\n            target[name] = changedValue;\n            if (options.changeMap) {\n                fluid.model.setChangedPath(options, segs, options.inverse ? \"DELETE\" : \"ADD\");\n            }\n        }\n        if (sourceCode !== \"primitive\") {\n            fluid.model.fetchChangeChildren(target[name], i + 1, segs, source, options);\n        }\n    };\n\n    fluid.model.stepTargetAccess = function (target, type, segs, startpos, endpos, options) {\n        for (var i = startpos; i < endpos; ++i) {\n            if (!target) {\n                continue;\n            }\n            var oldTrunk = target[segs[i]];\n            target = fluid.model.traverseWithStrategy(target, segs, i, options[type === \"ADD\" ? \"resolverSetConfig\" : \"resolverGetConfig\"],\n                segs.length - i - 1);\n            if (oldTrunk !== target && options.changeMap) {\n                fluid.model.setChangedPath(options, segs.slice(0, i + 1), \"ADD\");\n            }\n        }\n        return {root: target, last: segs[endpos]};\n    };\n\n    fluid.model.defaultAccessorConfig = function (options) {\n        options = options || {};\n        options.resolverSetConfig = options.resolverSetConfig || fluid.model.escapedSetConfig;\n        options.resolverGetConfig = options.resolverGetConfig || fluid.model.escapedGetConfig;\n        return options;\n    };\n\n    // Changes: \"MERGE\" action abolished\n    // ADD/DELETE at root can be destructive\n    // changes tracked in optional final argument holding \"changeMap: {}, changes: 0, unchanged: 0\"\n    fluid.model.applyHolderChangeRequest = function (holder, request, options) {\n        options = fluid.model.defaultAccessorConfig(options);\n        options.deltaMap = options.changeMap ? {} : null;\n        options.deltas = 0;\n        var length = request.segs.length;\n        var pen, atRoot = length === 0;\n        if (atRoot) {\n            pen = {root: holder, last: \"model\"};\n        } else {\n            if (!holder.model) {\n                holder.model = {};\n                fluid.model.setChangedPath(options, [], options.inverse ? \"DELETE\" : \"ADD\");\n            }\n            pen = fluid.model.stepTargetAccess(holder.model, request.type, request.segs, 0, length - 1, options);\n        }\n        if (request.type === \"ADD\") {\n            var value = request.value;\n            var segs = fluid.makeArray(request.segs);\n            fluid.model.applyChangeStrategy(pen.root, pen.last, length - 1, segs, value, options, atRoot);\n        } else if (request.type === \"DELETE\") {\n            if (pen.root && pen.root[pen.last] !== undefined) {\n                delete pen.root[pen.last];\n                if (options.changeMap) {\n                    fluid.model.setChangedPath(options, request.segs, \"DELETE\");\n                }\n            }\n        } else {\n            fluid.fail(\"Unrecognised change type of \" + request.type);\n        }\n        return options.deltas ? options.deltaMap : null;\n    };\n\n    /** Compare two models for equality using a deep algorithm. It is assumed that both models are JSON-equivalent and do\n     * not contain circular links.\n     * @param modela The first model to be compared\n     * @param modelb The second model to be compared\n     * @param options {Object} If supplied, will receive a map and summary of the change content between the objects. Structure is:\n     *     changeMap: {Object/String} An isomorphic map of the object structures to values \"ADD\" or \"DELETE\" indicating\n     * that values have been added/removed at that location. Note that in the case the object structure differs at the root, <code>changeMap</code> will hold\n     * the plain String value \"ADD\" or \"DELETE\"\n     *     changes: {Integer} Counts the number of changes between the objects - The two objects are identical iff <code>changes === 0</code>.\n     *     unchanged: {Integer} Counts the number of leaf (primitive) values at which the two objects are identical. Note that the current implementation will\n     * double-count, this summary should be considered indicative rather than precise.\n     * @return <code>true</code> if the models are identical\n     */\n    // TODO: This algorithm is quite inefficient in that both models will be copied once each\n    // supported, PUBLIC API function\n    fluid.model.diff = function (modela, modelb, options) {\n        options = options || {changes: 0, unchanged: 0, changeMap: {}}; // current algorithm can't avoid the expense of changeMap\n        var typea = fluid.typeCode(modela);\n        var typeb = fluid.typeCode(modelb);\n        var togo;\n        if (typea === \"primitive\" && typeb === \"primitive\") {\n            togo = fluid.model.isSameValue(modela, modelb);\n        } else if (typea === \"primitive\" ^ typeb === \"primitive\") {\n            togo = false;\n        } else {\n            // Apply both forward and reverse changes - if no changes either way, models are identical\n            // \"ADD\" reported in the reverse direction must be accounted as a \"DELETE\"\n            var holdera = {\n                model: fluid.copy(modela)\n            };\n            fluid.model.applyHolderChangeRequest(holdera, {value: modelb, segs: [], type: \"ADD\"}, options);\n            var holderb = {\n                model: fluid.copy(modelb)\n            };\n            options.inverse = true;\n            fluid.model.applyHolderChangeRequest(holderb, {value: modela, segs: [], type: \"ADD\"}, options);\n            togo = options.changes === 0;\n        }\n        if (togo === false && options.changes === 0) { // catch all primitive cases\n            options.changes = 1;\n            options.changeMap = modelb === undefined ? \"DELETE\" : \"ADD\";\n        } else if (togo === true && options.unchanged === 0) {\n            options.unchanged = 1;\n        }\n        return togo;\n    };\n\n    fluid.outputMatches = function (matches, outSegs, root) {\n        fluid.each(root, function (value, key) {\n            matches.push(outSegs.concat(key));\n        });\n    };\n\n    // Here we only support for now very simple expressions which have at most one\n    // wildcard which must appear in the final segment\n    fluid.matchChanges = function (changeMap, specSegs, newHolder, oldHolder) {\n        var newRoot = newHolder.model;\n        var oldRoot = oldHolder.model;\n        var map = changeMap;\n        var outSegs = [\"model\"];\n        var wildcard = false;\n        var togo = [];\n        for (var i = 0; i < specSegs.length; ++i) {\n            var seg = specSegs[i];\n            if (seg === \"*\") {\n                if (i === specSegs.length - 1) {\n                    wildcard = true;\n                } else {\n                    fluid.fail(\"Wildcard specification in modelChanged listener is only supported for the final path segment: \" + specSegs.join(\".\"));\n                }\n            } else {\n                outSegs.push(seg);\n                map = fluid.isPrimitive(map) ? map : map[seg];\n                newRoot = newRoot ? newRoot[seg] : undefined;\n                oldRoot = oldRoot ? oldRoot[seg] : undefined;\n            }\n        }\n        if (map) {\n            if (wildcard) {\n                if (map === \"DELETE\") {\n                    fluid.outputMatches(togo, outSegs, oldRoot);\n                } else if (map === \"ADD\") {\n                    fluid.outputMatches(togo, outSegs, newRoot);\n                } else {\n                    fluid.outputMatches(togo, outSegs, map);\n                }\n            } else {\n                togo.push(outSegs);\n            }\n        }\n        return togo;\n    };\n\n    fluid.storeExternalChange = function (transRec, applier, invalidPath, spec, args) {\n        var pathString = applier.composeSegments.apply(null, invalidPath);\n        var keySegs = [applier.holder.id, spec.listenerId, (spec.wildcard ? pathString : \"\")];\n        var keyString = keySegs.join(\"|\");\n        // TODO: We think we probably have a bug in that notifications destined for end of transaction are actually continuously emitted during the transaction\n        // These are unbottled in fluid.concludeTransaction\n        transRec.externalChanges[keyString] = {listener: spec.listener, namespace: spec.namespace, priority: spec.priority, args: args};\n    };\n\n    fluid.notifyModelChanges = function (listeners, changeMap, newHolder, oldHolder, changeRequest, transaction, applier, that) {\n        if (!listeners) {\n            return;\n        }\n        var transRec = transaction && fluid.getModelTransactionRec(that, transaction.id);\n        for (var i = 0; i < listeners.length; ++i) {\n            var spec = listeners[i];\n            var multiplePaths = spec.segsArray.length > 1; // does this spec listen on multiple paths? If so, don't rebase arguments and just report once per transaction\n            for (var j = 0; j < spec.segsArray.length; ++j) {\n                var invalidPaths = fluid.matchChanges(changeMap, spec.segsArray[j], newHolder, oldHolder);\n                // We only have multiple invalidPaths here if there is a wildcard\n                for (var k = 0; k < invalidPaths.length; ++k) {\n                    if (applier.destroyed) { // 2nd guarding point for FLUID-5592\n                        return;\n                    }\n                    var invalidPath = invalidPaths[k];\n                    spec.listener = fluid.event.resolveListener(spec.listener);\n                    var args = [multiplePaths ? newHolder.model : fluid.model.getSimple(newHolder, invalidPath),\n                                multiplePaths ? oldHolder.model : fluid.model.getSimple(oldHolder, invalidPath),\n                                multiplePaths ? [] : invalidPath.slice(1), changeRequest, transaction, applier];\n                    // FLUID-5489: Do not notify of null changes which were reported as a result of invalidating a higher path\n                    // TODO: We can improve greatly on efficiency by i) reporting a special code from fluid.matchChanges which signals the difference between invalidating a higher and lower path,\n                    // ii) improving fluid.model.diff to create fewer intermediate structures and no copies\n                    // TODO: The relay invalidation system is broken and must always be notified (branch 1) - since our old/new value detection is based on the wrong (global) timepoints in the transaction here,\n                    // rather than the \"last received model\" by the holder of the transform document\n                    if (!spec.isRelay) {\n                        var isNull = fluid.model.diff(args[0], args[1]);\n                        if (isNull) {\n                            continue;\n                        }\n                        var sourceExcluded = fluid.isExcludedChangeSource(transaction, spec);\n                        if (sourceExcluded) {\n                            continue;\n                        }\n                    }\n                    if (transRec && !spec.isRelay && spec.transactional) { // bottle up genuine external changes so we can sort and dedupe them later\n                        fluid.storeExternalChange(transRec, applier, invalidPath, spec, args);\n                    } else {\n                        spec.listener.apply(null, args);\n                    }\n                }\n            }\n        }\n    };\n\n    fluid.bindELMethods = function (applier) {\n        applier.parseEL = function (EL) {\n            return fluid.model.pathToSegments(EL, applier.options.resolverSetConfig);\n        };\n        applier.composeSegments = function () {\n            return applier.options.resolverSetConfig.parser.compose.apply(null, arguments);\n        };\n    };\n\n    fluid.initModelEvent = function (that, applier, trans, listeners) {\n        fluid.notifyModelChanges(listeners, \"ADD\", trans.oldHolder, fluid.emptyHolder, null, trans, applier, that);\n    };\n\n    // A standard \"empty model\" for the purposes of comparing initial state during the primordial transaction\n    fluid.emptyHolder = fluid.freezeRecursive({ model: undefined });\n\n    fluid.preFireChangeRequest = function (applier, changeRequest) {\n        if (!changeRequest.type) {\n            changeRequest.type = \"ADD\";\n        }\n        changeRequest.segs = changeRequest.segs || applier.parseEL(changeRequest.path);\n    };\n\n    // Automatically adapts change onto fireChangeRequest\n    fluid.bindRequestChange = function (that) {\n        that.change = function (path, value, type, source) {\n            var changeRequest = {\n                path: path,\n                value: value,\n                type: type,\n                source: source\n            };\n            that.fireChangeRequest(changeRequest);\n        };\n    };\n\n    // Quick n dirty test to cheaply detect Object versus other JSON types\n    fluid.isObjectSimple = function (totest) {\n        return Object.prototype.toString.call(totest) === \"[object Object]\";\n    };\n\n    fluid.mergeChangeSources = function (target, globalSources) {\n        if (fluid.isObjectSimple(globalSources)) { // TODO: No test for this branch!\n            fluid.extend(target, globalSources);\n        } else {\n            fluid.each(fluid.makeArray(globalSources), function (globalSource) {\n                target[globalSource] = true;\n            });\n        }\n    };\n\n    fluid.ChangeApplier = function () {};\n\n    fluid.makeHolderChangeApplier = function (holder, options) {\n        options = fluid.model.defaultAccessorConfig(options);\n        var applierId = fluid.allocateGuid();\n        var that = new fluid.ChangeApplier();\n        var name = fluid.isComponent(holder) ? \"ChangeApplier for component \" + fluid.dumpThat(holder) : \"ChangeApplier with id \" + applierId;\n        $.extend(that, {\n            applierId: applierId,\n            holder: holder,\n            listeners: fluid.makeEventFirer({name: \"Internal change listeners for \" + name}),\n            transListeners: fluid.makeEventFirer({name: \"External change listeners for \" + name}),\n            options: options,\n            modelChanged: {},\n            preCommit: fluid.makeEventFirer({name: \"preCommit event for \" + name}),\n            postCommit: fluid.makeEventFirer({name: \"postCommit event for \" + name})\n        });\n        that.destroy = function () {\n            that.preCommit.destroy();\n            that.postCommit.destroy();\n            that.destroyed = true;\n        };\n        that.modelChanged.addListener = function (spec, listener, namespace, softNamespace) {\n            if (typeof(spec) === \"string\") {\n                spec = {\n                    path: spec\n                };\n            } else {\n                spec = fluid.copy(spec);\n            }\n            spec.listenerId = spec.listenerId || fluid.allocateGuid(); // FLUID-5151: don't use identifyListener since event.addListener will use this as a namespace\n            spec.namespace = namespace;\n            spec.softNamespace = softNamespace;\n            if (typeof(listener) === \"string\") { // The reason for \"globalName\" is so that listener names can be resolved on first use and not on registration\n                listener = {globalName: listener};\n            }\n            spec.listener = listener;\n            if (spec.transactional !== false) {\n                spec.transactional = true;\n            }\n            if (!spec.segsArray) { // It's a manual registration\n                if (spec.path !== undefined) {\n                    spec.segs = spec.segs || that.parseEL(spec.path);\n                }\n                if (!spec.segsArray) {\n                    spec.segsArray = [spec.segs];\n                }\n            }\n            fluid.parseSourceExclusionSpec(spec, spec);\n            spec.wildcard = fluid.accumulate(fluid.transform(spec.segsArray, function (segs) {\n                return fluid.contains(segs, \"*\");\n            }), fluid.add, 0);\n            if (spec.wildcard && spec.segsArray.length > 1) {\n                fluid.fail(\"Error in model listener specification \", spec, \" - you may not supply a wildcard pattern as one of a set of multiple paths to be matched\");\n            }\n            var firer = that[spec.transactional ? \"transListeners\" : \"listeners\"];\n            firer.addListener(spec);\n            return spec; // return is used in registerModelListeners\n        };\n        that.modelChanged.removeListener = function (listener) {\n            that.listeners.removeListener(listener);\n            that.transListeners.removeListener(listener);\n        };\n        that.fireChangeRequest = function (changeRequest) {\n            var ation = that.initiate(\"local\", changeRequest.source);\n            ation.fireChangeRequest(changeRequest);\n            ation.commit();\n        };\n        /**\n         * Initiate a fresh transaction on this applier, perhaps coordinated with other transactions sharing the same id across the component tree\n         * Arguments all optional\n         * localSource {String}: \"local\", \"relay\" or null Local source identifiers only good for transaction's representative on this applier\n         *  globalSources: {String|Array of String|Object String->true} Global source identifiers common across this transaction\n         *  transactionId: {String} Global transaction id to enlist with\n         */\n        that.initiate = function (localSource, globalSources, transactionId) {\n            localSource = globalSources === \"init\" ? null : (localSource || \"local\"); // supported values for localSource are \"local\" and \"relay\" - globalSource of \"init\" defeats defaulting of localSource to \"local\"\n            var defeatPost = localSource === \"relay\"; // defeatPost is supplied for all non-top-level transactions\n            var trans = {\n                instanceId: fluid.allocateGuid(), // for debugging only - the representative of this transction on this applier\n                id: transactionId || fluid.allocateGuid(), // The global transaction id across all appliers - allocate here if this is the starting point\n                changeRecord: {\n                    resolverSetConfig: options.resolverSetConfig, // here to act as \"options\" in applyHolderChangeRequest\n                    resolverGetConfig: options.resolverGetConfig\n                },\n                reset: function () {\n                    trans.oldHolder = holder;\n                    trans.newHolder = { model: fluid.copy(holder.model) };\n                    trans.changeRecord.changes = 0;\n                    trans.changeRecord.unchanged = 0; // just for type consistency - we don't use these values in the ChangeApplier\n                    trans.changeRecord.changeMap = {};\n                },\n                commit: function (code) {\n                    that.preCommit.fire(trans, that, code);\n                    if (trans.changeRecord.changes > 0) {\n                        var oldHolder = {model: holder.model};\n                        holder.model = trans.newHolder.model;\n                        fluid.notifyModelChanges(that.transListeners.sortedListeners, trans.changeRecord.changeMap, holder, oldHolder, null, trans, that, holder);\n                    }\n                    if (!defeatPost) {\n                        that.postCommit.fire(trans, that, code);\n                    }\n                },\n                fireChangeRequest: function (changeRequest) {\n                    fluid.preFireChangeRequest(that, changeRequest);\n                    changeRequest.transactionId = trans.id;\n                    var deltaMap = fluid.model.applyHolderChangeRequest(trans.newHolder, changeRequest, trans.changeRecord);\n                    fluid.notifyModelChanges(that.listeners.sortedListeners, deltaMap, trans.newHolder, holder, changeRequest, trans, that, holder);\n                },\n                hasChangeSource: function (source) {\n                    return trans.fullSources[source];\n                }\n            };\n            var transRec = fluid.getModelTransactionRec(holder, trans.id);\n            if (transRec) {\n                fluid.mergeChangeSources(transRec.sources, globalSources);\n                trans.sources = transRec.sources;\n                trans.fullSources = Object.create(transRec.sources);\n                trans.fullSources[localSource] = true;\n            }\n            trans.reset();\n            fluid.bindRequestChange(trans);\n            return trans;\n        };\n\n        fluid.bindRequestChange(that);\n        fluid.bindELMethods(that);\n        return that;\n    };\n\n    /**\n     * Calculates the changes between the model values 'value' and\n     * 'oldValue' and returns an array of change records. The optional\n     * argument 'changePathPrefix' is prepended to the change path of\n     * each record (this is useful for generating change records to be\n     * applied at a non-root path in a model). The returned array of\n     * change records may be used with fluid.fireChanges().\n     *\n     * @param value {Any} Model value to compare\n     * @param oldValue {Any} Model value to compare\n     * @param changePathPrefix {String|Array of String} [optional] Path prefix to prepend to change record paths\n     * @return {Array of Object} An array of change records\n     */\n    fluid.modelPairToChanges = function (value, oldValue, changePathPrefix) {\n        changePathPrefix = changePathPrefix || \"\";\n\n        // Calculate the diff between value and oldValue\n        var diffOptions = {changes: 0, unchanged: 0, changeMap: {}};\n        fluid.model.diff(oldValue, value, diffOptions);\n\n        var changes = [];\n\n        // Recursively process the diff to generate an array of change\n        // records, stored in 'changes'\n        fluid.modelPairToChangesImpl(value,\n            fluid.pathUtil.parseEL(changePathPrefix),\n            diffOptions.changeMap, [], changes);\n\n        return changes;\n    };\n\n    /**\n     * This function implements recursive processing for\n     * fluid.modelPairToChanges(). It builds an array of change\n     * records, accumulated in the 'changes' argument, by walking the\n     * 'changeMap' structure and 'value' model value. As we walk down\n     * the model, our path from the root of the model is recorded in\n     * the 'changeSegs' argument.\n     *\n     * @param value {Any} Model value\n     * @param changePathPrefixSegs {Array of String} Path prefix to prepend to change record paths\n     * @param changeMap {String|Object} The changeMap structure from fluid.model.diff()\n     * @param changeSegs {Array of String} Our path relative to the model value root\n     * @param changes {Array of Object} The accumulated change records\n     */\n    fluid.modelPairToChangesImpl = function (value, changePathPrefixSegs, changeMap, changeSegs, changes) {\n        if (changeMap === \"ADD\") {\n            // The whole model value is new\n            changes.push({\n                path: changePathPrefixSegs,\n                value: value,\n                type: \"ADD\"\n            });\n        } else if (changeMap === \"DELETE\") {\n            // The whole model value has been deleted\n            changes.push({\n                path: changePathPrefixSegs,\n                value: null,\n                type: \"DELETE\"\n            });\n        } else if (fluid.isPlainObject(changeMap, true)) {\n            // Something within the model value has changed\n            fluid.each(changeMap, function (change, seg) {\n                var currentChangeSegs = changeSegs.concat([seg]);\n                if (change === \"ADD\") {\n                    changes.push({\n                        path: changePathPrefixSegs.concat(currentChangeSegs),\n                        value: fluid.get(value, currentChangeSegs),\n                        type: \"ADD\"\n                    });\n                } else if (change === \"DELETE\") {\n                    changes.push({\n                        path: changePathPrefixSegs.concat(currentChangeSegs),\n                        value: null,\n                        type: \"DELETE\"\n                    });\n                } else if (fluid.isPlainObject(change, true)) {\n                    // Recurse down the tree of changes\n                    fluid.modelPairToChangesImpl(value, changePathPrefixSegs,\n                        change, currentChangeSegs, changes);\n                }\n            });\n        }\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2010 University of Toronto\nCopyright 2010-2014 OCAD University\nCopyright 2012-2014 Raising the Floor - US\nCopyright 2014-2016 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\nvar fluid = fluid || fluid_3_0_0;\n\n(function ($, fluid) {\n    \"use strict\";\n\n    fluid.registerNamespace(\"fluid.model.transform\");\n\n    /** Grade definitions for standard transformation function hierarchy **/\n\n    fluid.defaults(\"fluid.transformFunction\", {\n        gradeNames: \"fluid.function\"\n    });\n\n    // uses standard layout and workflow involving inputPath - an undefined input value\n    // will short-circuit the evaluation\n    fluid.defaults(\"fluid.standardInputTransformFunction\", {\n        gradeNames: \"fluid.transformFunction\"\n    });\n\n    fluid.defaults(\"fluid.standardOutputTransformFunction\", {\n        gradeNames: \"fluid.transformFunction\"\n    });\n\n    // defines a set of options \"inputVariables\" referring to its inputs, which are converted\n    // to functions that the transform may explicitly use to demand the input value\n    fluid.defaults(\"fluid.multiInputTransformFunction\", {\n        gradeNames: \"fluid.transformFunction\"\n    });\n\n    // uses the standard layout and workflow involving inputPath and outputPath\n    fluid.defaults(\"fluid.standardTransformFunction\", {\n        gradeNames: [\"fluid.standardInputTransformFunction\", \"fluid.standardOutputTransformFunction\"]\n    });\n\n    fluid.defaults(\"fluid.lens\", {\n        gradeNames: \"fluid.transformFunction\",\n        invertConfiguration: null\n        // this function method returns \"inverted configuration\" rather than actually performing inversion\n        // TODO: harmonise with strategy used in VideoPlayer_framework.js\n    });\n\n    /***********************************\n     * Base utilities for transformers *\n     ***********************************/\n\n    // unsupported, NON-API function\n    fluid.model.transform.pathToRule = function (inputPath) {\n        return {\n            transform: {\n                type: \"fluid.transforms.value\",\n                inputPath: inputPath\n            }\n        };\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.literalValueToRule = function (input) {\n        return {\n            transform: {\n                type: \"fluid.transforms.literalValue\",\n                input: input\n            }\n        };\n    };\n\n    /** Accepts two fully escaped paths, either of which may be empty or null **/\n    fluid.model.composePaths = function (prefix, suffix) {\n        prefix = prefix === 0 ? \"0\" : prefix || \"\";\n        suffix = suffix === 0 ? \"0\" : suffix || \"\";\n        return !prefix ? suffix : (!suffix ? prefix : prefix + \".\" + suffix);\n    };\n\n    fluid.model.transform.accumulateInputPath = function (inputPath, transformer, paths) {\n        if (inputPath !== undefined) {\n            paths.push(fluid.model.composePaths(transformer.inputPrefix, inputPath));\n        }\n    };\n\n    fluid.model.transform.accumulateStandardInputPath = function (input, transformSpec, transformer, paths) {\n        fluid.model.transform.getValue(undefined, transformSpec[input], transformer);\n        fluid.model.transform.accumulateInputPath(transformSpec[input + \"Path\"], transformer, paths);\n    };\n\n    fluid.model.transform.accumulateMultiInputPaths = function (inputVariables, transformSpec, transformer, paths) {\n        fluid.each(inputVariables, function (v, k) {\n            fluid.model.transform.accumulateStandardInputPath(k, transformSpec, transformer, paths);\n        });\n    };\n\n    fluid.model.transform.getValue = function (inputPath, value, transformer) {\n        var togo;\n        if (inputPath !== undefined) { // NB: We may one day want to reverse the crazy jQuery-like convention that \"no path means root path\"\n            togo = fluid.get(transformer.source, fluid.model.composePaths(transformer.inputPrefix, inputPath), transformer.resolverGetConfig);\n        }\n        if (togo === undefined) {\n            // FLUID-5867 - actually helpful behaviour here rather than the insane original default of expecting a short-form value document\n            togo = fluid.isPrimitive(value) ? value :\n                (\"literalValue\" in value ? value.literalValue :\n                (value.transform === undefined ? value : transformer.expand(value)));\n        }\n        return togo;\n    };\n\n    // distinguished value which indicates that a transformation rule supplied a\n    // non-default output path, and so the user should be prevented from making use of it\n    // in a compound transform definition\n    fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN = {};\n\n    fluid.model.transform.setValue = function (userOutputPath, value, transformer) {\n        // avoid crosslinking to input object - this might be controlled by a \"nocopy\" option in future\n        var toset = fluid.copy(value);\n        var outputPath = fluid.model.composePaths(transformer.outputPrefix, userOutputPath);\n        // TODO: custom resolver config here to create non-hash output model structure\n        if (toset !== undefined) {\n            transformer.applier.change(outputPath, toset);\n        }\n        return userOutputPath ? fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN : toset;\n    };\n\n    /* Resolves the <key> given as parameter by looking up the path <key>Path in the object\n     * to be transformed. If not present, it resolves the <key> by using the literal value if primitive,\n     * or expanding otherwise. <def> defines the default value if unableto resolve the key. If no\n     * default value is given undefined is returned\n     */\n    fluid.model.transform.resolveParam = function (transformSpec, transformer, key, def) {\n        var val = fluid.model.transform.getValue(transformSpec[key + \"Path\"], transformSpec[key], transformer);\n        return (val !== undefined) ? val : def;\n    };\n\n    // Compute a \"match score\" between two pieces of model material, with 0 indicating a complete mismatch, and\n    // higher values indicating increasingly good matches\n    fluid.model.transform.matchValue = function (expected, actual, partialMatches) {\n        var stats = {changes: 0, unchanged: 0, changeMap: {}};\n        fluid.model.diff(expected, actual, stats);\n        // i) a pair with 0 matches counts for 0 in all cases\n        // ii) without \"partial match mode\" (the default), we simply count matches, with any mismatch giving 0\n        // iii) with \"partial match mode\", a \"perfect score\" in the top 24 bits is\n        // penalised for each mismatch, with a positive score of matches store in the bottom 24 bits\n        return stats.unchanged === 0 ? 0\n            : (partialMatches ? 0xffffff000000 - 0x1000000 * stats.changes + stats.unchanged :\n            (stats.changes ? 0 : 0xffffff000000 + stats.unchanged));\n    };\n\n    fluid.model.transform.invertPaths = function (transformSpec, transformer) {\n        // TODO: this will not behave correctly in the face of compound \"input\" which contains\n        // further transforms\n        var oldOutput = fluid.model.composePaths(transformer.outputPrefix, transformSpec.outputPath);\n        transformSpec.outputPath = fluid.model.composePaths(transformer.inputPrefix, transformSpec.inputPath);\n        transformSpec.inputPath = oldOutput;\n        return transformSpec;\n    };\n\n\n    // TODO: prefixApplier is a transform which is currently unused and untested\n    fluid.model.transform.prefixApplier = function (transformSpec, transformer) {\n        if (transformSpec.inputPrefix) {\n            transformer.inputPrefixOp.push(transformSpec.inputPrefix);\n        }\n        if (transformSpec.outputPrefix) {\n            transformer.outputPrefixOp.push(transformSpec.outputPrefix);\n        }\n        transformer.expand(transformSpec.input);\n        if (transformSpec.inputPrefix) {\n            transformer.inputPrefixOp.pop();\n        }\n        if (transformSpec.outputPrefix) {\n            transformer.outputPrefixOp.pop();\n        }\n    };\n\n    fluid.defaults(\"fluid.model.transform.prefixApplier\", {\n        gradeNames: [\"fluid.transformFunction\"]\n    });\n\n    // unsupported, NON-API function\n    fluid.model.makePathStack = function (transform, prefixName) {\n        var stack = transform[prefixName + \"Stack\"] = [];\n        transform[prefixName] = \"\";\n        return {\n            push: function (prefix) {\n                var newPath = fluid.model.composePaths(transform[prefixName], prefix);\n                stack.push(transform[prefixName]);\n                transform[prefixName] = newPath;\n            },\n            pop: function () {\n                transform[prefixName] = stack.pop();\n            }\n        };\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.doTransform = function (transformSpec, transformer, transformOpts) {\n        var expdef = transformOpts.defaults;\n        var transformFn = fluid.getGlobalValue(transformOpts.typeName);\n        if (typeof(transformFn) !== \"function\") {\n            fluid.fail(\"Transformation record specifies transformation function with name \" +\n                transformSpec.type + \" which is not a function - \", transformFn);\n        }\n        if (!fluid.hasGrade(expdef, \"fluid.transformFunction\")) {\n            // If no suitable grade is set up, assume that it is intended to be used as a standardTransformFunction\n            expdef = fluid.defaults(\"fluid.standardTransformFunction\");\n        }\n        var transformArgs = [transformSpec, transformer];\n        if (fluid.hasGrade(expdef, \"fluid.multiInputTransformFunction\")) {\n            var inputs = {};\n            fluid.each(expdef.inputVariables, function (v, k) {\n                inputs[k] = function () {\n                    var input = fluid.model.transform.getValue(transformSpec[k + \"Path\"], transformSpec[k], transformer);\n                    // TODO: This is a mess, null might perfectly well be a possible default\n                    // if no match, assign default if one exists (v != null)\n                    input = (input === undefined && v !== null) ? v : input;\n                    return input;\n                };\n            });\n            transformArgs.unshift(inputs);\n        }\n        if (fluid.hasGrade(expdef, \"fluid.standardInputTransformFunction\")) {\n            if (!(\"input\" in transformSpec) && !(\"inputPath\" in transformSpec)) {\n                fluid.fail(\"Error in transform specification. Either \\\"input\\\" or \\\"inputPath\\\" must be specified for a standardInputTransformFunction: received \", transformSpec);\n            }\n            var expanded = fluid.model.transform.getValue(transformSpec.inputPath, transformSpec.input, transformer);\n\n            transformArgs.unshift(expanded);\n            // if the function has no input, the result is considered undefined, and this is returned\n            if (expanded === undefined) {\n                return undefined;\n            }\n        }\n        var transformed = transformFn.apply(null, transformArgs);\n        if (fluid.hasGrade(expdef, \"fluid.standardOutputTransformFunction\")) {\n            // \"doOutput\" flag is currently set nowhere, but could be used in future\n            var outputPath = transformSpec.outputPath !== undefined ? transformSpec.outputPath : (transformOpts.doOutput ? \"\" : undefined);\n            if (outputPath !== undefined && transformed !== undefined) {\n                //If outputPath is given in the expander we want to:\n                // (1) output to the document\n                // (2) return undefined, to ensure that expanders higher up in the hierarchy doesn't attempt to output it again\n                fluid.model.transform.setValue(transformSpec.outputPath, transformed, transformer);\n                transformed = undefined;\n            }\n        }\n        return transformed;\n    };\n\n    // OLD PATHUTIL utilities: Rescued from old DataBinding implementation to support obsolete \"schema\" scheme for transforms - all of this needs to be rethought\n    var globalAccept = [];\n\n    fluid.registerNamespace(\"fluid.pathUtil\");\n\n    /** Parses a path segment, following escaping rules, starting from character index i in the supplied path */\n    fluid.pathUtil.getPathSegment = function (path, i) {\n        fluid.pathUtil.getPathSegmentImpl(globalAccept, path, i);\n        return globalAccept[0];\n    };\n    /** Returns just the head segment of an EL path */\n    fluid.pathUtil.getHeadPath = function (path) {\n        return fluid.pathUtil.getPathSegment(path, 0);\n    };\n\n    /** Returns all of an EL path minus its first segment - if the path consists of just one segment, returns \"\" */\n    fluid.pathUtil.getFromHeadPath = function (path) {\n        var firstdot = fluid.pathUtil.getPathSegmentImpl(null, path, 0);\n        return firstdot === path.length ? \"\" : path.substring(firstdot + 1);\n    };\n    /** Determines whether a particular EL path matches a given path specification.\n     * The specification consists of a path with optional wildcard segments represented by \"*\".\n     * @param spec (string) The specification to be matched\n     * @param path (string) The path to be tested\n     * @param exact (boolean) Whether the path must exactly match the length of the specification in\n     * terms of path segments in order to count as match. If exact is falsy, short specifications will\n     * match all longer paths as if they were padded out with \"*\" segments\n     * @return (array of string) The path segments which matched the specification, or <code>null</code> if there was no match\n     */\n\n    fluid.pathUtil.matchPath = function (spec, path, exact) {\n        var togo = [];\n        while (true) {\n            if (((path === \"\") ^ (spec === \"\")) && exact) {\n                return null;\n            }\n            // FLUID-4625 - symmetry on spec and path is actually undesirable, but this\n            // quickly avoids at least missed notifications - improved (but slower)\n            // implementation should explode composite changes\n            if (!spec || !path) {\n                break;\n            }\n            var spechead = fluid.pathUtil.getHeadPath(spec);\n            var pathhead = fluid.pathUtil.getHeadPath(path);\n            // if we fail to match on a specific component, fail.\n            if (spechead !== \"*\" && spechead !== pathhead) {\n                return null;\n            }\n            togo.push(pathhead);\n            spec = fluid.pathUtil.getFromHeadPath(spec);\n            path = fluid.pathUtil.getFromHeadPath(path);\n        }\n        return togo;\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.expandWildcards = function (transformer, source) {\n        fluid.each(source, function (value, key) {\n            var q = transformer.queuedTransforms;\n            transformer.pathOp.push(fluid.pathUtil.escapeSegment(key.toString()));\n            for (var i = 0; i < q.length; ++i) {\n                if (fluid.pathUtil.matchPath(q[i].matchPath, transformer.path, true)) {\n                    var esCopy = fluid.copy(q[i].transformSpec);\n                    if (esCopy.inputPath === undefined || fluid.model.transform.hasWildcard(esCopy.inputPath)) {\n                        esCopy.inputPath = \"\";\n                    }\n                    // TODO: allow some kind of interpolation for output path\n                    // TODO: Also, we now require outputPath to be specified in these cases for output to be produced as well.. Is that something we want to continue with?\n                    transformer.inputPrefixOp.push(transformer.path);\n                    transformer.outputPrefixOp.push(transformer.path);\n                    var transformOpts = fluid.model.transform.lookupType(esCopy.type);\n                    var result = fluid.model.transform.doTransform(esCopy, transformer, transformOpts);\n                    if (result !== undefined) {\n                        fluid.model.transform.setValue(null, result, transformer);\n                    }\n                    transformer.outputPrefixOp.pop();\n                    transformer.inputPrefixOp.pop();\n                }\n            }\n            if (!fluid.isPrimitive(value)) {\n                fluid.model.transform.expandWildcards(transformer, value);\n            }\n            transformer.pathOp.pop();\n        });\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.hasWildcard = function (path) {\n        return typeof(path) === \"string\" && path.indexOf(\"*\") !== -1;\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.maybePushWildcard = function (transformSpec, transformer) {\n        var hw = fluid.model.transform.hasWildcard;\n        var matchPath;\n        if (hw(transformSpec.inputPath)) {\n            matchPath = fluid.model.composePaths(transformer.inputPrefix, transformSpec.inputPath);\n        }\n        else if (hw(transformer.outputPrefix) || hw(transformSpec.outputPath)) {\n            matchPath = fluid.model.composePaths(transformer.outputPrefix, transformSpec.outputPath);\n        }\n\n        if (matchPath) {\n            transformer.queuedTransforms.push({transformSpec: transformSpec, outputPrefix: transformer.outputPrefix, inputPrefix: transformer.inputPrefix, matchPath: matchPath});\n            return true;\n        }\n        return false;\n    };\n\n    fluid.model.sortByKeyLength = function (inObject) {\n        var keys = fluid.keys(inObject);\n        return keys.sort(fluid.compareStringLength(true));\n    };\n\n    // Three handler functions operating the (currently) three different processing modes\n    // unsupported, NON-API function\n    fluid.model.transform.handleTransformStrategy = function (transformSpec, transformer, transformOpts) {\n        if (fluid.model.transform.maybePushWildcard(transformSpec, transformer)) {\n            return;\n        }\n        else {\n            return fluid.model.transform.doTransform(transformSpec, transformer, transformOpts);\n        }\n    };\n    // unsupported, NON-API function\n    fluid.model.transform.handleInvertStrategy = function (transformSpec, transformer, transformOpts) {\n        transformSpec = fluid.copy(transformSpec);\n        // if we have a standardTransformFunction we can switch input and output arguments:\n        if (fluid.hasGrade(transformOpts.defaults, \"fluid.standardTransformFunction\")) {\n            transformSpec = fluid.model.transform.invertPaths(transformSpec, transformer);\n        }\n        var invertor = transformOpts.defaults && transformOpts.defaults.invertConfiguration;\n        if (invertor) {\n            var inverted = fluid.invokeGlobalFunction(invertor, [transformSpec, transformer]);\n            transformer.inverted.push(inverted);\n        }\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.handleCollectStrategy = function (transformSpec, transformer, transformOpts) {\n        var defaults = transformOpts.defaults;\n        var standardInput = fluid.hasGrade(defaults, \"fluid.standardInputTransformFunction\");\n        var multiInput = fluid.hasGrade(defaults, \"fluid.multiInputTransformFunction\");\n\n        if (standardInput) {\n            fluid.model.transform.accumulateStandardInputPath(\"input\", transformSpec, transformer, transformer.inputPaths);\n        }\n        if (multiInput) {\n            fluid.model.transform.accumulateMultiInputPaths(defaults.inputVariables, transformSpec, transformer, transformer.inputPaths);\n        }\n        if (!multiInput && !standardInput) {\n            var collector = defaults.collectInputPaths;\n            if (collector) {\n                var collected = fluid.makeArray(fluid.invokeGlobalFunction(collector, [transformSpec, transformer]));\n                transformer.inputPaths = transformer.inputPaths.concat(collected);\n            }\n        }\n    };\n\n    fluid.model.transform.lookupType = function (typeName, transformSpec) {\n        if (!typeName) {\n            fluid.fail(\"Transformation record is missing a type name: \", transformSpec);\n        }\n        if (typeName.indexOf(\".\") === -1) {\n            typeName = \"fluid.transforms.\" + typeName;\n        }\n        var defaults = fluid.defaults(typeName);\n        return { defaults: defaults, typeName: typeName};\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.processRule = function (rule, transformer) {\n        if (typeof(rule) === \"string\") {\n            rule = fluid.model.transform.pathToRule(rule);\n        }\n        // special dispensation to allow \"literalValue\" to escape any value\n        else if (rule.literalValue !== undefined) {\n            rule = fluid.model.transform.literalValueToRule(rule.literalValue);\n        }\n        var togo;\n        if (rule.transform) {\n            var transformSpec, transformOpts;\n            if (fluid.isArrayable(rule.transform)) {\n                // if the transform holds an array, each transformer within that is responsible for its own output\n                var transforms = rule.transform;\n                togo = undefined;\n                for (var i = 0; i < transforms.length; ++i) {\n                    transformSpec = transforms[i];\n                    transformOpts = fluid.model.transform.lookupType(transformSpec.type);\n                    transformer.transformHandler(transformSpec, transformer, transformOpts);\n                }\n            } else {\n                // else we just have a normal single transform which will return 'undefined' as a flag to defeat cascading output\n                transformSpec = rule.transform;\n                transformOpts = fluid.model.transform.lookupType(transformSpec.type);\n                togo = transformer.transformHandler(transformSpec, transformer, transformOpts);\n            }\n        }\n        // if rule is an array, save path for later use in schema strategy on final applier (so output will be interpreted as array)\n        if (fluid.isArrayable(rule)) {\n            transformer.collectedFlatSchemaOpts = transformer.collectedFlatSchemaOpts || {};\n            transformer.collectedFlatSchemaOpts[transformer.outputPrefix] = \"array\";\n        }\n        fluid.each(rule, function (value, key) {\n            if (key !== \"transform\") {\n                transformer.outputPrefixOp.push(key);\n                var togo = transformer.expand(value, transformer);\n                // Value expanders and arrays as rules implicitly output, unless they have nothing (undefined) to output\n                if (togo !== undefined) {\n                    fluid.model.transform.setValue(null, togo, transformer);\n                    // ensure that expanders further up does not try to output this value as well.\n                    togo = undefined;\n                }\n                transformer.outputPrefixOp.pop();\n            }\n        });\n        return togo;\n    };\n\n    // unsupported, NON-API function\n    // 3rd arg is disused by the framework and always defaults to fluid.model.transform.processRule\n    fluid.model.transform.makeStrategy = function (transformer, handleFn, transformFn) {\n        transformFn = transformFn || fluid.model.transform.processRule;\n        transformer.expand = function (rules) {\n            return transformFn(rules, transformer);\n        };\n        transformer.outputPrefixOp = fluid.model.makePathStack(transformer, \"outputPrefix\");\n        transformer.inputPrefixOp = fluid.model.makePathStack(transformer, \"inputPrefix\");\n        transformer.transformHandler = handleFn;\n    };\n\n    fluid.model.transform.invertConfiguration = function (rules) {\n        var transformer = {\n            inverted: []\n        };\n        fluid.model.transform.makeStrategy(transformer, fluid.model.transform.handleInvertStrategy);\n        transformer.expand(rules);\n        return {\n            transform: transformer.inverted\n        };\n    };\n\n    fluid.model.transform.collectInputPaths = function (rules) {\n        var transformer = {\n            inputPaths: []\n        };\n        fluid.model.transform.makeStrategy(transformer, fluid.model.transform.handleCollectStrategy);\n        transformer.expand(rules);\n        return transformer.inputPaths;\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.flatSchemaStrategy = function (flatSchema, getConfig) {\n        var keys = fluid.model.sortByKeyLength(flatSchema);\n        return function (root, segment, index, segs) {\n            var path = getConfig.parser.compose.apply(null, segs.slice(0, index));\n          // TODO: clearly this implementation could be much more efficient\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (fluid.pathUtil.matchPath(key, path, true) !== null) {\n                    return flatSchema[key];\n                }\n            }\n        };\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.defaultSchemaValue = function (schemaValue) {\n        var type = fluid.isPrimitive(schemaValue) ? schemaValue : schemaValue.type;\n        return type === \"array\" ? [] : {};\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.isomorphicSchemaStrategy = function (source, getConfig) {\n        return function (root, segment, index, segs) {\n            var existing = fluid.get(source, segs.slice(0, index), getConfig);\n            return fluid.isArrayable(existing) ? \"array\" : \"object\";\n        };\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.decodeStrategy = function (source, options, getConfig) {\n        if (options.isomorphic) {\n            return fluid.model.transform.isomorphicSchemaStrategy(source, getConfig);\n        }\n        else if (options.flatSchema) {\n            return fluid.model.transform.flatSchemaStrategy(options.flatSchema, getConfig);\n        }\n    };\n\n    // unsupported, NON-API function\n    fluid.model.transform.schemaToCreatorStrategy = function (strategy) {\n        return function (root, segment, index, segs) {\n            if (root[segment] === undefined) {\n                var schemaValue = strategy(root, segment, index, segs);\n                root[segment] = fluid.model.transform.defaultSchemaValue(schemaValue);\n                return root[segment];\n            }\n        };\n    };\n\n    /** Transforms a model by a sequence of rules. Parameters as for fluid.model.transform,\n     * only with an array accepted for \"rules\"\n     */\n    fluid.model.transform.sequence = function (source, rules, options) {\n        for (var i = 0; i < rules.length; ++i) {\n            source = fluid.model.transform(source, rules[i], options);\n        }\n        return source;\n    };\n\n    fluid.model.compareByPathLength = function (changea, changeb) {\n        var pdiff = changea.path.length - changeb.path.length;\n        return pdiff === 0 ? changea.sequence - changeb.sequence : pdiff;\n    };\n\n   /** Fires an accumulated set of change requests in increasing order of target pathlength\n     */\n    fluid.model.fireSortedChanges = function (changes, applier) {\n        changes.sort(fluid.model.compareByPathLength);\n        fluid.fireChanges(applier, changes);\n    };\n\n    /**\n     * Transforms a model based on a specified expansion rules objects.\n     * Rules objects take the form of:\n     *   {\n     *       \"target.path\": \"value.el.path\" || {\n     *          transform: {\n     *              type: \"transform.function.path\",\n     *               ...\n     *           }\n     *       }\n     *   }\n     *\n     * @param {Object} source the model to transform\n     * @param {Object} rules a rules object containing instructions on how to transform the model\n     * @param {Object} options a set of rules governing the transformations. At present this may contain\n     * the values <code>isomorphic: true</code> indicating that the output model is to be governed by the\n     * same schema found in the input model, or <code>flatSchema</code> holding a flat schema object which\n     * consists of a hash of EL path specifications with wildcards, to the values \"array\"/\"object\" defining\n     * the schema to be used to construct missing trunk values.\n     */\n    fluid.model.transformWithRules = function (source, rules, options) {\n        options = options || {};\n\n        var getConfig = fluid.model.escapedGetConfig;\n        var setConfig = fluid.model.escapedSetConfig;\n\n        var schemaStrategy = fluid.model.transform.decodeStrategy(source, options, getConfig);\n\n        var transformer = {\n            source: source,\n            target: {\n                // TODO: This should default to undefined to allow return of primitives, etc.\n                model: schemaStrategy ? fluid.model.transform.defaultSchemaValue(schemaStrategy(null, \"\", 0, [\"\"])) : {}\n            },\n            resolverGetConfig: getConfig,\n            resolverSetConfig: setConfig,\n            collectedFlatSchemaOpts: undefined, // to hold options for flat schema collected during transforms\n            queuedChanges: [],\n            queuedTransforms: [] // TODO: This is used only by wildcard applier - explain its operation\n        };\n        fluid.model.transform.makeStrategy(transformer, fluid.model.transform.handleTransformStrategy);\n        transformer.applier = {\n            fireChangeRequest: function (changeRequest) {\n                changeRequest.sequence = transformer.queuedChanges.length;\n                transformer.queuedChanges.push(changeRequest);\n            }\n        };\n        fluid.bindRequestChange(transformer.applier);\n\n        transformer.expand(rules);\n\n        var rootSetConfig = fluid.copy(setConfig);\n        // Modify schemaStrategy if we collected flat schema options for the setConfig of finalApplier\n        if (transformer.collectedFlatSchemaOpts !== undefined) {\n            $.extend(transformer.collectedFlatSchemaOpts, options.flatSchema);\n            schemaStrategy = fluid.model.transform.flatSchemaStrategy(transformer.collectedFlatSchemaOpts, getConfig);\n        }\n        rootSetConfig.strategies = [fluid.model.defaultFetchStrategy, schemaStrategy ? fluid.model.transform.schemaToCreatorStrategy(schemaStrategy)\n                : fluid.model.defaultCreatorStrategy];\n        transformer.finalApplier = options.finalApplier || fluid.makeHolderChangeApplier(transformer.target, {resolverSetConfig: rootSetConfig});\n\n        if (transformer.queuedTransforms.length > 0) {\n            transformer.typeStack = [];\n            transformer.pathOp = fluid.model.makePathStack(transformer, \"path\");\n            fluid.model.transform.expandWildcards(transformer, source);\n        }\n        fluid.model.fireSortedChanges(transformer.queuedChanges, transformer.finalApplier);\n        return transformer.target.model;\n    };\n\n    $.extend(fluid.model.transformWithRules, fluid.model.transform);\n    fluid.model.transform = fluid.model.transformWithRules;\n\n    /** Utility function to produce a standard options transformation record for a single set of rules **/\n    fluid.transformOne = function (rules) {\n        return {\n            transformOptions: {\n                transformer: \"fluid.model.transformWithRules\",\n                config: rules\n            }\n        };\n    };\n\n    /** Utility function to produce a standard options transformation record for multiple rules to be applied in sequence **/\n    fluid.transformMany = function (rules) {\n        return {\n            transformOptions: {\n                transformer: \"fluid.model.transform.sequence\",\n                config: rules\n            }\n        };\n    };\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2010 University of Toronto\nCopyright 2010-2015 OCAD University\nCopyright 2013-2014 Raising the Floor - US\nCopyright 2013-2016 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_2_0_0 = fluid_2_0_0 || {};\nvar fluid = fluid || fluid_2_0_0;\n\n(function ($, fluid) {\n    \"use strict\";\n\n    fluid.registerNamespace(\"fluid.model.transform\");\n    fluid.registerNamespace(\"fluid.transforms\");\n\n    /**********************************\n     * Standard transformer functions *\n     **********************************/\n\n    fluid.defaults(\"fluid.transforms.value\", {\n        gradeNames: \"fluid.standardTransformFunction\",\n        invertConfiguration: \"fluid.identity\"\n    });\n\n    fluid.transforms.value = fluid.identity;\n\n    // Export the use of the \"value\" transform under the \"identity\" name for FLUID-5293\n    fluid.transforms.identity = fluid.transforms.value;\n    fluid.defaults(\"fluid.transforms.identity\", {\n        gradeNames: \"fluid.transforms.value\"\n    });\n\n    // A helpful utility function to be used when a transform's inverse is the identity\n    fluid.transforms.invertToIdentity = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.identity\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.literalValue\", {\n        gradeNames: \"fluid.standardOutputTransformFunction\"\n    });\n\n    fluid.transforms.literalValue = function (transformSpec) {\n        return transformSpec.input;\n    };\n\n    fluid.defaults(\"fluid.transforms.stringToNumber\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.stringToNumber.invert\"\n    });\n\n    fluid.transforms.stringToNumber = function (value) {\n        var newValue = Number(value);\n        return isNaN(newValue) ? undefined : newValue;\n    };\n\n    fluid.transforms.stringToNumber.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.numberToString\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.numberToString\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.numberToString.invert\"\n    });\n\n    fluid.transforms.numberToString = function (value, transformSpec) {\n        if (typeof value === \"number\") {\n            if (typeof transformSpec.scale === \"number\" && !isNaN(transformSpec.scale)) {\n                var rounded = fluid.roundToDecimal(value, transformSpec.scale, transformSpec.method);\n                return rounded.toString();\n            } else {\n                return value.toString();\n            }\n        }\n    };\n\n    fluid.transforms.numberToString.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.stringToNumber\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.count\", {\n        gradeNames: \"fluid.standardTransformFunction\"\n    });\n\n    fluid.transforms.count = function (value) {\n        return fluid.makeArray(value).length;\n    };\n\n\n    fluid.defaults(\"fluid.transforms.round\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.invertToIdentity\"\n    });\n\n    fluid.transforms.round = function (value) {\n        return Math.round(value);\n    };\n\n\n    fluid.defaults(\"fluid.transforms.delete\", {\n        gradeNames: \"fluid.transformFunction\"\n    });\n\n    fluid.transforms[\"delete\"] = function (transformSpec, transformer) {\n        var outputPath = fluid.model.composePaths(transformer.outputPrefix, transformSpec.outputPath);\n        transformer.applier.change(outputPath, null, \"DELETE\");\n    };\n\n\n    fluid.defaults(\"fluid.transforms.firstValue\", {\n        gradeNames: \"fluid.standardOutputTransformFunction\"\n    });\n\n    fluid.transforms.firstValue = function (transformSpec, transformer) {\n        if (!transformSpec.values || !transformSpec.values.length) {\n            fluid.fail(\"firstValue transformer requires an array of values at path named \\\"values\\\", supplied\", transformSpec);\n        }\n        for (var i = 0; i < transformSpec.values.length; i++) {\n            var value = transformSpec.values[i];\n            // TODO: problem here - all of these transforms will have their side-effects (setValue) even if only one is chosen\n            var expanded = transformer.expand(value);\n            if (expanded !== undefined) {\n                return expanded;\n            }\n        }\n    };\n\n    fluid.defaults(\"fluid.transforms.linearScale\", {\n        gradeNames: [\"fluid.multiInputTransformFunction\",\n                     \"fluid.standardTransformFunction\",\n                     \"fluid.lens\" ],\n        invertConfiguration: \"fluid.transforms.linearScale.invert\",\n        inputVariables: {\n            factor: 1,\n            offset: 0\n        }\n    });\n\n    /* simple linear transformation */\n    fluid.transforms.linearScale = function (input, extraInputs) {\n        var factor = extraInputs.factor();\n        var offset = extraInputs.offset();\n\n        if (typeof(input) !== \"number\" || typeof(factor) !== \"number\" || typeof(offset) !== \"number\") {\n            return undefined;\n        }\n        return input * factor + offset;\n    };\n\n    /* TODO: This inversion doesn't work if the value and factors are given as paths in the source model */\n    fluid.transforms.linearScale.invert = function (transformSpec) {\n        // delete the factor and offset paths if present\n        delete transformSpec.factorPath;\n        delete transformSpec.offsetPath;\n\n        if (transformSpec.factor !== undefined) {\n            transformSpec.factor = (transformSpec.factor === 0) ? 0 : 1 / transformSpec.factor;\n        }\n        if (transformSpec.offset !== undefined) {\n            transformSpec.offset = -transformSpec.offset * (transformSpec.factor !== undefined ? transformSpec.factor : 1);\n        }\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.binaryOp\", {\n        gradeNames: [ \"fluid.multiInputTransformFunction\", \"fluid.standardOutputTransformFunction\" ],\n        inputVariables: {\n            left: null,\n            right: null\n        }\n    });\n\n    fluid.transforms.binaryLookup = {\n        \"===\": function (a, b) { return fluid.model.isSameValue(a, b); },\n        \"!==\": function (a, b) { return !fluid.model.isSameValue(a, b); },\n        \"<=\": function (a, b) { return a <= b; },\n        \"<\": function (a, b) { return a < b; },\n        \">=\": function (a, b) { return a >= b; },\n        \">\": function (a, b) { return a > b; },\n        \"+\": function (a, b) { return a + b; },\n        \"-\": function (a, b) { return a - b; },\n        \"*\": function (a, b) { return a * b; },\n        \"/\": function (a, b) { return a / b; },\n        \"%\": function (a, b) { return a % b; },\n        \"&&\": function (a, b) { return a && b; },\n        \"||\": function (a, b) { return a || b; }\n    };\n\n    fluid.transforms.binaryOp = function (inputs, transformSpec, transformer) {\n        var left = inputs.left();\n        var right = inputs.right();\n\n        var operator = fluid.model.transform.getValue(undefined, transformSpec.operator, transformer);\n\n        var fun = fluid.transforms.binaryLookup[operator];\n        return (fun === undefined || left === undefined || right === undefined) ?\n            undefined : fun(left, right);\n    };\n\n    fluid.defaults(\"fluid.transforms.condition\", {\n        gradeNames: [ \"fluid.multiInputTransformFunction\", \"fluid.standardOutputTransformFunction\" ],\n        inputVariables: {\n            \"true\": null,\n            \"false\": null,\n            \"condition\": null\n        }\n    });\n\n    fluid.transforms.condition = function (inputs) {\n        var condition = inputs.condition();\n        if (condition === null) {\n            return undefined;\n        }\n\n        return inputs[condition ? \"true\" : \"false\"]();\n    };\n\n    fluid.defaults(\"fluid.transforms.valueMapper\", {\n        gradeNames: [\"fluid.transformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.valueMapper.invert\",\n        collectInputPaths: \"fluid.transforms.valueMapper.collect\"\n    });\n\n    /* unsupported, NON-API function\n     * sorts by the object's 'matchValue' property, where higher is better.\n     * Tiebreaking is done via the `index` property, where a lower index takes priority\n     */\n    fluid.model.transform.compareMatches = function (speca, specb) {\n        var matchDiff = specb.matchValue - speca.matchValue;\n        return matchDiff === 0 ? speca.index - specb.index : matchDiff; // tiebreak using 'index'\n    };\n\n    fluid.transforms.valueMapper = function (transformSpec, transformer) {\n        if (!transformSpec.match) {\n            fluid.fail(\"valueMapper requires an array or hash of matches at path named \\\"match\\\", supplied \", transformSpec);\n        }\n        var value = fluid.model.transform.getValue(transformSpec.defaultInputPath, undefined, transformer);\n\n        var matchedEntry = (fluid.isArrayable(transformSpec.match)) ? // long form with array of records?\n            fluid.transforms.valueMapper.longFormMatch(value, transformSpec, transformer) :\n            transformSpec.match[value];\n\n        if (matchedEntry === undefined) { // if no matches found, default to noMatch\n            matchedEntry = transformSpec.noMatch;\n        }\n\n        if (matchedEntry === undefined) { // if there was no noMatch directive, return undefined\n            return;\n        }\n\n        var outputPath = matchedEntry.outputPath === undefined ? transformSpec.defaultOutputPath : matchedEntry.outputPath;\n        transformer.outputPrefixOp.push(outputPath);\n\n        var outputValue;\n        if (fluid.isPrimitive(matchedEntry)) {\n            outputValue = matchedEntry;\n        } else if (matchedEntry.outputUndefinedValue) { // if outputUndefinedValue is set, outputValue `undefined`\n            outputValue = undefined;\n        } else {\n            // get value from outputValue. If none is found set the outputValue to be that of defaultOutputValue (or undefined)\n            outputValue = fluid.model.transform.resolveParam(matchedEntry, transformer, \"outputValue\", undefined);\n            outputValue = (outputValue === undefined) ? transformSpec.defaultOutputValue : outputValue;\n        }\n        // output if we have a path and something to output\n        if (typeof(outputPath) === \"string\" && outputValue !== undefined) {\n            fluid.model.transform.setValue(undefined, outputValue, transformer, transformSpec.merge);\n            outputValue = undefined; // make sure we don't also return value\n        }\n        transformer.outputPrefixOp.pop();\n        return outputValue;\n    };\n\n    // unsupported, NON-API function\n    fluid.transforms.valueMapper.longFormMatch = function (valueFromDefaultPath, transformSpec, transformer) {\n        var o = transformSpec.match;\n        if (o.length === 0) {\n            fluid.fail(\"valueMapper supplied empty list of matches: \", transformSpec);\n        }\n        var matchPower = [];\n        for (var i = 0; i < o.length; ++i) {\n            var option = o[i];\n            var value = option.inputPath ?\n                fluid.model.transform.getValue(option.inputPath, undefined, transformer) : valueFromDefaultPath;\n\n            var matchValue = fluid.model.transform.matchValue(option.inputValue, value, option.partialMatches);\n            matchPower[i] = {index: i, matchValue: matchValue};\n        }\n        matchPower.sort(fluid.model.transform.compareMatches);\n        return matchPower[0].matchValue <= 0 ? undefined : o[matchPower[0].index];\n    };\n\n    fluid.transforms.valueMapper.invert = function (transformSpec, transformer) {\n        var match = [];\n        var togo = {\n            type: \"fluid.transforms.valueMapper\",\n            match: match\n        };\n        var isArray = fluid.isArrayable(transformSpec.match);\n\n        togo.defaultInputPath = fluid.model.composePaths(transformer.outputPrefix, transformSpec.defaultOutputPath);\n        togo.defaultOutputPath = fluid.model.composePaths(transformer.inputPrefix, transformSpec.defaultInputPath);\n\n        var def = fluid.firstDefined;\n        fluid.each(transformSpec.match, function (option, key) {\n            if (option.outputUndefinedValue === true) {\n                return; // don't attempt to invert undefined output value entries\n            }\n            var outOption = {};\n            var origInputValue = def(isArray ? option.inputValue : key, transformSpec.defaultInputValue);\n            if (origInputValue === undefined) {\n                fluid.fail(\"Failure inverting configuration for valueMapper - inputValue could not be resolved for record \" + key + \": \", transformSpec);\n            }\n            outOption.outputValue = origInputValue;\n            outOption.inputValue = !isArray && fluid.isPrimitive(option) ?\n                option : def(option.outputValue, transformSpec.defaultOutputValue);\n\n            if (option.outputPath) {\n                outOption.inputPath = fluid.model.composePaths(transformer.outputPrefix, def(option.outputPath, transformSpec.outputPath));\n            }\n            if (option.inputPath) {\n                outOption.outputPath = fluid.model.composePaths(transformer.inputPrefix, def(option.inputPath, transformSpec.inputPath));\n            }\n            match.push(outOption);\n        });\n        return togo;\n    };\n\n    fluid.transforms.valueMapper.collect = function (transformSpec, transformer) {\n        var togo = [];\n        fluid.model.transform.accumulateInputPath(transformSpec.defaultInputPath, transformer, togo);\n        fluid.each(transformSpec.match, function (option) {\n            fluid.model.transform.accumulateInputPath(option.inputPath, transformer, togo);\n        });\n        return togo;\n    };\n\n    /* -------- arrayToSetMembership and setMembershipToArray ---------------- */\n\n    fluid.defaults(\"fluid.transforms.arrayToSetMembership\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.arrayToSetMembership.invert\"\n    });\n\n\n    fluid.transforms.arrayToSetMembership = function (value, transformSpec, transformer) {\n        var output = {};\n        var options = transformSpec.options;\n\n        if (!value || !fluid.isArrayable(value)) {\n            fluid.fail(\"arrayToSetMembership didn't find array at inputPath nor passed as value.\", transformSpec);\n        }\n        if (!options) {\n            fluid.fail(\"arrayToSetMembership requires an options block set\");\n        }\n\n        if (transformSpec.presentValue === undefined) {\n            transformSpec.presentValue = true;\n        }\n\n        if (transformSpec.missingValue === undefined) {\n            transformSpec.missingValue = false;\n        }\n\n        fluid.each(options, function (outPath, key) {\n            // write to output object the value <presentValue> or <missingValue> depending on whether key is found in user input\n            var outVal = (value.indexOf(key) !== -1) ? transformSpec.presentValue : transformSpec.missingValue;\n            fluid.set(output, outPath, outVal, transformer.resolverSetConfig);\n        });\n        return output;\n    };\n\n    /**\n     * NON-API function; Copies the entire transformSpec with the following modifications:\n     * * A new type is set (from argument)\n     * * each [key]=value entry in the options is swapped to be: [value]=key\n     */\n    fluid.transforms.arrayToSetMembership.invertWithType = function (transformSpec, transformer, newType) {\n        transformSpec.type = newType;\n        var newOptions = {};\n        fluid.each(transformSpec.options, function (path, oldKey) {\n            newOptions[path] = oldKey;\n        });\n        transformSpec.options = newOptions;\n        return transformSpec;\n    };\n\n    fluid.transforms.arrayToSetMembership.invert = function (transformSpec, transformer) {\n        return fluid.transforms.arrayToSetMembership.invertWithType(transformSpec, transformer,\n            \"fluid.transforms.setMembershipToArray\");\n    };\n\n    fluid.defaults(\"fluid.transforms.setMembershipToArray\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.setMembershipToArray.invert\"\n    });\n\n    fluid.transforms.setMembershipToArray = function (input, transformSpec, transformer) {\n        var options = transformSpec.options;\n\n        if (!options) {\n            fluid.fail(\"setMembershipToArray requires an options block specified\");\n        }\n\n        if (transformSpec.presentValue === undefined) {\n            transformSpec.presentValue = true;\n        }\n\n        if (transformSpec.missingValue === undefined) {\n            transformSpec.missingValue = false;\n        }\n\n        var outputArr = [];\n        fluid.each(options, function (outputVal, key) {\n            var value = fluid.get(input, key, transformer.resolverGetConfig);\n            if (value === transformSpec.presentValue) {\n                outputArr.push(outputVal);\n            }\n        });\n        return outputArr;\n    };\n\n    fluid.transforms.setMembershipToArray.invert = function (transformSpec, transformer) {\n        return fluid.transforms.arrayToSetMembership.invertWithType(transformSpec, transformer,\n            \"fluid.transforms.arrayToSetMembership\");\n    };\n\n    /* -------- deindexIntoArrayByKey and indexArrayByKey -------------------- */\n\n    /**\n     * Transforms the given array to an object.\n     * Uses the transformSpec.options.key values from each object within the array as new keys.\n     *\n     * For example, with transformSpec.key = \"name\" and an input object like this:\n     *\n     * {\n     *   b: [\n     *     { name: b1, v: v1 },\n     *     { name: b2, v: v2 }\n     *   ]\n     * }\n     *\n     * The output will be:\n     * {\n     *   b: {\n     *     b1: {\n     *       v: v1\n     *     }\n     *   },\n     *   {\n     *     b2: {\n     *       v: v2\n     *     }\n     *   }\n     * }\n     */\n    fluid.model.transform.applyPaths = function (operation, pathOp, paths) {\n        for (var i = 0; i < paths.length; ++i) {\n            if (operation === \"push\") {\n                pathOp.push(paths[i]);\n            } else {\n                pathOp.pop();\n            }\n        }\n    };\n\n    fluid.model.transform.expandInnerValues = function (inputPath, outputPath, transformer, innerValues) {\n        var inputPrefixOp = transformer.inputPrefixOp;\n        var outputPrefixOp = transformer.outputPrefixOp;\n        var apply = fluid.model.transform.applyPaths;\n\n        apply(\"push\", inputPrefixOp, inputPath);\n        apply(\"push\", outputPrefixOp, outputPath);\n        var expanded = {};\n        fluid.each(innerValues, function (innerValue) {\n            var expandedInner = transformer.expand(innerValue);\n            if (!fluid.isPrimitive(expandedInner)) {\n                $.extend(true, expanded, expandedInner);\n            } else {\n                expanded = expandedInner;\n            }\n        });\n        apply(\"pop\", outputPrefixOp, outputPath);\n        apply(\"pop\", inputPrefixOp, inputPath);\n\n        return expanded;\n    };\n\n\n    fluid.defaults(\"fluid.transforms.indexArrayByKey\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\" ],\n        invertConfiguration: \"fluid.transforms.indexArrayByKey.invert\"\n    });\n\n    /** Transforms an array of objects into an object of objects, by indexing using the option \"key\" which must be supplied within the transform specification.\n    * The key of each element will be taken from the value held in each each original object's member derived from the option value in \"key\" - this member should\n    * exist in each array element. The member with name agreeing with \"key\" and its value will be removed from each original object before inserting into the returned\n    * object.\n    * For example,\n    * <code>fluid.transforms.indexArrayByKey([{k: \"e1\", b: 1, c: 2}, {k: \"e2\", b: 2: c: 3}], {key: \"k\"})</code> will output the object\n    * <code>{e1: {b: 1, c: 2}, e2: {b: 2: c, 3}</code>\n    * Note: This transform frequently arises in the context of data which arose in XML form, which often represents \"morally indexed\" data in repeating array-like\n    * constructs where the indexing key is held, for example, in an attribute.\n    */\n    fluid.transforms.indexArrayByKey = function (arr, transformSpec, transformer) {\n        if (transformSpec.key === undefined) {\n            fluid.fail(\"indexArrayByKey requires a 'key' option.\", transformSpec);\n        }\n        if (!fluid.isArrayable(arr)) {\n            fluid.fail(\"indexArrayByKey didn't find array at inputPath.\", transformSpec);\n        }\n        var newHash = {};\n        var pivot = transformSpec.key;\n\n        fluid.each(arr, function (v, k) {\n            // check that we have a pivot entry in the object and it's a valid type:\n            var newKey = v[pivot];\n            var keyType = typeof(newKey);\n            if (keyType !== \"string\" && keyType !== \"boolean\" && keyType !== \"number\") {\n                fluid.fail(\"indexArrayByKey encountered untransformable array due to missing or invalid key\", v);\n            }\n            // use the value of the key element as key and use the remaining content as value\n            var content = fluid.copy(v);\n            delete content[pivot];\n            // fix sub Arrays if needed:\n            if (transformSpec.innerValue) {\n                content = fluid.model.transform.expandInnerValues([transformer.inputPrefix, transformSpec.inputPath, k.toString()],\n                    [transformSpec.outputPath, newKey], transformer, transformSpec.innerValue);\n            }\n            newHash[newKey] = content;\n        });\n        return newHash;\n    };\n\n    fluid.transforms.indexArrayByKey.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.deindexIntoArrayByKey\";\n        // invert transforms from innerValue as well:\n        // TODO: The Model Transformations framework should be capable of this, but right now the\n        // issue is that we use a \"private contract\" to operate the \"innerValue\" slot. We need to\n        // spend time thinking of how this should be formalised\n        if (transformSpec.innerValue) {\n            var innerValue = transformSpec.innerValue;\n            for (var i = 0; i < innerValue.length; ++i) {\n                innerValue[i] = fluid.model.transform.invertConfiguration(innerValue[i]);\n            }\n        }\n        return transformSpec;\n    };\n\n\n    fluid.defaults(\"fluid.transforms.deindexIntoArrayByKey\", {\n        gradeNames: [ \"fluid.standardTransformFunction\", \"fluid.lens\" ],\n        invertConfiguration: \"fluid.transforms.deindexIntoArrayByKey.invert\"\n    });\n\n    /**\n     * Transforms an object of objects into an array of objects, by deindexing by the option \"key\" which must be supplied within the transform specification.\n     * The key of each object will become split out into a fresh value in each array element which will be given the key held in the transformSpec option \"key\".\n     * For example:\n     * <code>fluid.transforms.deindexIntoArrayByKey({e1: {b: 1, c: 2}, e2: {b: 2: c, 3}, {key: \"k\"})</code> will output the array\n     * <code>[{k: \"e1\", b: 1, c: 2}, {k: \"e2\", b: 2: c: 3}]</code>\n     *\n     * This performs the inverse transform of fluid.transforms.indexArrayByKey.\n     */\n    fluid.transforms.deindexIntoArrayByKey = function (hash, transformSpec, transformer) {\n        if (transformSpec.key === undefined) {\n            fluid.fail(\"deindexIntoArrayByKey requires a \\\"key\\\" option.\", transformSpec);\n        }\n\n        var newArray = [];\n        var pivot = transformSpec.key;\n\n        fluid.each(hash, function (v, k) {\n            var content = {};\n            content[pivot] = k;\n            if (transformSpec.innerValue) {\n                v = fluid.model.transform.expandInnerValues([transformSpec.inputPath, k], [transformSpec.outputPath, newArray.length.toString()],\n                    transformer, transformSpec.innerValue);\n            }\n            $.extend(true, content, v);\n            newArray.push(content);\n        });\n        return newArray;\n    };\n\n    fluid.transforms.deindexIntoArrayByKey.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.indexArrayByKey\";\n        // invert transforms from innerValue as well:\n        // TODO: The Model Transformations framework should be capable of this, but right now the\n        // issue is that we use a \"private contract\" to operate the \"innerValue\" slot. We need to\n        // spend time thinking of how this should be formalised\n        if (transformSpec.innerValue) {\n            var innerValue = transformSpec.innerValue;\n            for (var i = 0; i < innerValue.length; ++i) {\n                innerValue[i] = fluid.model.transform.invertConfiguration(innerValue[i]);\n            }\n        }\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.limitRange\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.invertToIdentity\"\n    });\n\n    fluid.transforms.limitRange = function (value, transformSpec) {\n        var min = transformSpec.min;\n        if (min !== undefined) {\n            var excludeMin = transformSpec.excludeMin || 0;\n            min += excludeMin;\n            if (value < min) {\n                value = min;\n            }\n        }\n        var max = transformSpec.max;\n        if (max !== undefined) {\n            var excludeMax = transformSpec.excludeMax || 0;\n            max -= excludeMax;\n            if (value > max) {\n                value = max;\n            }\n        }\n        return value;\n    };\n\n    fluid.defaults(\"fluid.transforms.indexOf\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.indexOf.invert\"\n    });\n\n    fluid.transforms.indexOf = function (value, transformSpec) {\n        // We do not allow a positive number as 'notFound' value, as it threatens invertibility\n        if (typeof (transformSpec.notFound) === \"number\" && transformSpec.notFound >= 0) {\n            fluid.fail(\"A positive number is not allowed as 'notFound' value for indexOf\");\n        }\n        var offset = fluid.transforms.parseIndexationOffset(transformSpec.offset, \"indexOf\");\n        var array = fluid.makeArray(transformSpec.array);\n        var originalIndex = array.indexOf(value);\n        return originalIndex === -1 && transformSpec.notFound ? transformSpec.notFound : originalIndex + offset;\n    };\n\n    fluid.transforms.indexOf.invert = function (transformSpec, transformer) {\n        var togo = fluid.transforms.invertArrayIndexation(transformSpec, transformer);\n        togo.type = \"fluid.transforms.dereference\";\n        return togo;\n    };\n\n    fluid.defaults(\"fluid.transforms.dereference\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.dereference.invert\"\n    });\n\n    fluid.transforms.dereference = function (value, transformSpec) {\n        if (typeof (value) !== \"number\") {\n            return undefined;\n        }\n        var offset = fluid.transforms.parseIndexationOffset(transformSpec.offset, \"dereference\");\n        var array = fluid.makeArray(transformSpec.array);\n        var index = value + offset;\n        return array[index];\n    };\n\n    fluid.transforms.dereference.invert = function (transformSpec, transformer) {\n        var togo = fluid.transforms.invertArrayIndexation(transformSpec, transformer);\n        togo.type = \"fluid.transforms.indexOf\";\n        return togo;\n    };\n\n    fluid.transforms.parseIndexationOffset = function (offset, transformName) {\n        var parsedOffset = 0;\n        if (offset !== undefined) {\n            parsedOffset = fluid.parseInteger(offset);\n            if (isNaN(parsedOffset)) {\n                fluid.fail(transformName + \" requires the value of \\\"offset\\\" to be an integer or a string that can be converted to an integer. \" + offset + \" is invalid.\");\n            }\n        }\n        return parsedOffset;\n    };\n\n    fluid.transforms.invertArrayIndexation = function (transformSpec) {\n        if (!isNaN(Number(transformSpec.offset))) {\n            transformSpec.offset = Number(transformSpec.offset) * (-1);\n        }\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.stringTemplate\", {\n        gradeNames: \"fluid.standardOutputTransformFunction\"\n    });\n\n    fluid.transforms.stringTemplate = function (transformSpec) {\n        return fluid.stringTemplate(transformSpec.template, transformSpec.terms);\n    };\n\n    fluid.defaults(\"fluid.transforms.free\", {\n        gradeNames: \"fluid.transformFunction\"\n    });\n\n    fluid.transforms.free = function (transformSpec) {\n        var args = fluid.makeArray(transformSpec.args);\n        return fluid.invokeGlobalFunction(transformSpec.func, args);\n    };\n\n    fluid.defaults(\"fluid.transforms.quantize\", {\n        gradeNames: \"fluid.standardTransformFunction\"\n    });\n\n    /**\n     * Quantize function maps a continuous range into discrete values. Given an input, it will\n     * be matched into a discrete bucket and the corresponding output will be done.\n     */\n    fluid.transforms.quantize = function (value, transformSpec, transform) {\n        if (!transformSpec.ranges || !transformSpec.ranges.length) {\n            fluid.fail(\"fluid.transforms.quantize should have a key called ranges containing an array defining ranges to quantize\");\n        }\n        // TODO: error checking that upper bounds are all numbers and increasing\n        for (var i = 0; i < transformSpec.ranges.length; i++) {\n            var rangeSpec = transformSpec.ranges[i];\n            if (value <= rangeSpec.upperBound || rangeSpec.upperBound === undefined && value >= Number.NEGATIVE_INFINITY) {\n                return fluid.isPrimitive(rangeSpec.output) ? rangeSpec.output : transform.expand(rangeSpec.output);\n            }\n        }\n    };\n\n    /**\n     * inRange transformer checks whether a value is within a given range and returns true if it is,\n     * and false if it's not.\n     *\n     * The range is defined by the two inputs: \"min\" and \"max\" (both inclusive). If one of these inputs\n     * is not present it is considered -infinite and +infinite, respectively - In other words, if no\n     * `min` value is defined, any value below or equal to the given \"max\" value will result in true.\n     */\n    fluid.defaults(\"fluid.transforms.inRange\", {\n        gradeNames: \"fluid.standardTransformFunction\"\n    });\n\n    fluid.transforms.inRange = function (value, transformSpec) {\n        return (transformSpec.min === undefined || transformSpec.min <= value) &&\n            (transformSpec.max === undefined ||  transformSpec.max >= value) ? true : false;\n    };\n\n    /**\n     *\n     * Convert a string to a Boolean, for example, when working with HTML form element values.\n     *\n     * The following are all false: undefined, null, \"\", \"0\", \"false\", false, 0\n     *\n     * Everything else is true.\n     *\n     * @param value {String} The value to be interpreted.\n     * @returns {Boolean} The interpreted value.\n     */\n    fluid.transforms.stringToBoolean = function (value) {\n        if (value) {\n            return !(value === \"0\" || value === \"false\");\n        }\n        else {\n            return false;\n        }\n    };\n\n    fluid.transforms.stringToBoolean.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.booleanToString\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.stringToBoolean\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.stringToBoolean.invert\"\n    });\n\n    /**\n     *\n     * Convert any value into a stringified boolean, i. e. either \"true\" or \"false\".  Anything that evaluates to\n     * true (1, true, \"non empty string\", {}, et. cetera) returns \"true\".  Anything else (0, false, null, et. cetera)\n     * returns \"false\".\n     *\n     * @param value - The value to be converted to a stringified Boolean.\n     * @returns {string} - A stringified boolean representation of the value.\n     */\n    fluid.transforms.booleanToString = function (value) {\n        return value ? \"true\" : \"false\";\n    };\n\n    fluid.transforms.booleanToString.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.stringToBoolean\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.booleanToString\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.booleanToString.invert\"\n    });\n\n    /**\n     *\n     * Transform stringified JSON to an object using `JSON.parse`.  Returns `undefined` if the JSON string is invalid.\n     *\n     * @param value {String} - The stringified JSON to be converted to an object.\n     */\n    fluid.transforms.JSONstringToObject = function (value) {\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return undefined;\n        }\n    };\n\n    fluid.transforms.JSONstringToObject.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.objectToJSONString\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.JSONstringToObject\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.JSONstringToObject.invert\"\n    });\n\n    /**\n     *\n     * Transform an object to a string using `JSON.stringify`.  You can pass the `space` option to be used\n     * as part of your transform, as in:\n     *\n     * ```\n     * \"\": {\n     *   transform: {\n     *     funcName: \"fluid.transforms.objectToJSONString\",\n     *     inputPath: \"\",\n     *     space: 2\n     *   }\n     * }\n     * ```\n     *\n     * The default value for `space` is 0, which disables spacing and line breaks.\n     *\n     * @param value {Object} - An object to be converted to stringified JSON.\n     *\n     */\n    fluid.transforms.objectToJSONString = function (value, transformSpec) {\n        var space = transformSpec.space || 0;\n        return JSON.stringify(value, null, space);\n    };\n\n    fluid.transforms.objectToJSONString.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.JSONstringToObject\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.objectToJSONString\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.objectToJSONString.invert\"\n    });\n\n    /**\n     *\n     * Transform a string to a date using the Date constructor.  Accepts (among other things) the date and dateTime\n     * values returned by HTML5 date and dateTime inputs.\n     *\n     * A string that cannot be parsed will be treated as `undefined`.\n     *\n     * Note: This function allows you to create Date objects from an ISO 8601 string such as `2017-01-23T08:51:25.891Z`.\n     * It is intended to provide a consistent mechanism for recreating Date objects stored as strings.  Although the\n     * framework currently works as expected with Date objects stored in the model, this is very likely to change.  If\n     * you are working with Date objects in your model, your best option for ensuring your code continues to work in the\n     * future is to handle serialisation and deserialisation yourself, for example, by using this transform and one of\n     * its inverse transforms, `fluid.transforms.dateToString` or `fluid.transforms.dateTimeToString`.  See the Infusion\n     * documentation for details about supported model values:\n     *\n     * http://docs.fluidproject.org/infusion/development/FrameworkConcepts.html#model-objects\n     *\n     * @param value - The String value to be transformed into a Date object.\n     * @returns {Date} - A date object, or `undefined`.\n     *\n     */\n    fluid.transforms.stringToDate = function (value) {\n        var date = new Date(value);\n        return isNaN(date.getTime()) ? undefined : date;\n    };\n\n    fluid.transforms.stringToDate.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.dateToString\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.stringToDate\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.stringToDate.invert\"\n    });\n\n    /**\n     *\n     * Transform a Date object into a date string using its toISOString method.  Strips the \"time\" portion away to\n     * produce date strings that are suitable for use with both HTML5 \"date\" inputs and JSON Schema \"date\" format\n     * string validation, for example: `2016-11-23`\n     *\n     * If you wish to preserve the time, use `fluid.transforms.dateTimeToString` instead.\n     *\n     * A non-date object will be treated as `undefined`.\n     *\n     * Note: This function allows you to seralise Date objects (not including time information) as ISO 8601 strings such\n     * as `2017-01-23`.  It is intended to provide a consistent mechanism for storing Date objects in a model.  Although\n     * the framework currently works as expected with Date objects stored in the model, this is very likely to change.\n     * If you are working with Date objects in your model, your best option for ensuring your code continues to work in\n     * the future is to handle serialisation and deserialisation yourself, for example, by using this transform and its\n     * inverse, `fluid.transforms.stringToDate`.  See the Infusion documentation for details about supported model\n     * values:\n     *\n     * http://docs.fluidproject.org/infusion/development/FrameworkConcepts.html#model-objects\n     *\n     * @param value - The Date object to be transformed into an ISO 8601 string.\n     * @returns {String} - A {String} value representing the date, or `undefined` if the date is invalid.\n     *\n     */\n    fluid.transforms.dateToString = function (value) {\n        if (value instanceof Date) {\n            var isoString = value.toISOString(); // A string like \"2016-09-26T08:05:57.462Z\"\n            var dateString = isoString.substring(0, isoString.indexOf(\"T\")); // A string like \"2016-09-26\"\n            return dateString;\n        }\n        else {\n            return undefined;\n        }\n    };\n\n    fluid.transforms.dateToString.invert = function (transformSpec) {\n        transformSpec.type = \"fluid.transforms.stringToDate\";\n        return transformSpec;\n    };\n\n    fluid.defaults(\"fluid.transforms.dateToString\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.dateToString.invert\"\n    });\n\n    /**\n     *\n     * Transform a Date object into a date/time string using its toISOString method.  Results in date strings that are\n     * suitable for use with both HTML5 \"dateTime\" inputs and JSON Schema \"date-time\" format string validation, for\\\n     * example: `2016-11-23T13:05:24.079Z`\n     *\n     * A non-date object will be treated as `undefined`.\n     *\n     * Note: This function allows you to seralise Date objects (including time information) as ISO 8601 strings such as\n     * `2017-01-23T08:51:25.891Z`. It is intended to provide a consistent mechanism for storing Date objects in a model.\n     * Although the framework currently works as expected with Date objects stored in the model, this is very likely to\n     * change.  If you are working with Date objects in your model, your best option for ensuring your code continues to\n     * work in the future is to handle serialisation and deserialisation yourself, for example, by using this function\n     * and its inverse, `fluid.transforms.stringToDate`.  See the Infusion documentation for details about supported\n     * model values:\n     *\n     * http://docs.fluidproject.org/infusion/development/FrameworkConcepts.html#model-objects\n     *\n     * @param value - The Date object to be transformed into an ISO 8601 string.\n     * @returns {String} - A {String} value representing the date and time, or `undefined` if the date/time are invalid.\n     *\n     */\n    fluid.transforms.dateTimeToString = function (value) {\n        return value instanceof Date ? value.toISOString() : undefined;\n    };\n\n    fluid.defaults(\"fluid.transforms.dateTimeToString\", {\n        gradeNames: [\"fluid.standardTransformFunction\", \"fluid.lens\"],\n        invertConfiguration: \"fluid.transforms.dateToString.invert\"\n    });\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2008-2010 University of Cambridge\nCopyright 2008-2010 University of Toronto\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2010-2016 OCAD University\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\nvar fluid = fluid || fluid_3_0_0;\n\n(function ($, fluid) {\n    \"use strict\";\n\n    // $().fluid(\"selectable\", args)\n    // $().fluid(\"selectable\".that()\n    // $().fluid(\"pager.pagerBar\", args)\n    // $().fluid(\"reorderer\", options)\n\n    /** Create a \"bridge\" from code written in the Fluid standard \"that-ist\" style,\n     *  to the standard JQuery UI plugin architecture specified at http://docs.jquery.com/UI/Guidelines .\n     *  Every Fluid component corresponding to the top-level standard signature (JQueryable, options)\n     *  will automatically convert idiomatically to the JQuery UI standard via this adapter.\n     *  Any return value which is a primitive or array type will become the return value\n     *  of the \"bridged\" function - however, where this function returns a general hash\n     *  (object) this is interpreted as forming part of the Fluid \"return that\" pattern,\n     *  and the function will instead be bridged to \"return this\" as per JQuery standard,\n     *  permitting chaining to occur. However, as a courtesy, the particular \"this\" returned\n     *  will be augmented with a function that() which will allow the original return\n     *  value to be retrieved if desired.\n     *  @param {String} name The name under which the \"plugin space\" is to be injected into\n     *  JQuery\n     *  @param {Object} peer The root of the namespace corresponding to the peer object.\n     */\n\n    fluid.thatistBridge = function (name, peer) {\n\n        var togo = function (funcname) {\n            var segs = funcname.split(\".\");\n            var move = peer;\n            for (var i = 0; i < segs.length; ++i) {\n                move = move[segs[i]];\n            }\n            var args = [this];\n            if (arguments.length === 2) {\n                args = args.concat($.makeArray(arguments[1]));\n            }\n            var ret = move.apply(null, args);\n            this.that = function () {\n                return ret;\n            };\n            var type = typeof(ret);\n            return !ret || type === \"string\" || type === \"number\" || type === \"boolean\" ||\n                (ret && ret.length !== undefined) ? ret : this;\n        };\n        $.fn[name] = togo;\n        return togo;\n    };\n\n    fluid.thatistBridge(\"fluid\", fluid);\n    fluid.thatistBridge(\"fluid_3_0_0\", fluid_3_0_0);\n\n/*************************************************************************\n * Tabindex normalization - compensate for browser differences in naming\n * and function of \"tabindex\" attribute and tabbing order.\n */\n\n    // -- Private functions --\n\n\n    var normalizeTabindexName = function () {\n        return $.browser.msie ? \"tabIndex\" : \"tabindex\";\n    };\n\n    var canHaveDefaultTabindex = function (elements) {\n        if (elements.length <= 0) {\n            return false;\n        }\n\n        return $(elements[0]).is(\"a, input, button, select, area, textarea, object\");\n    };\n\n    var getValue = function (elements) {\n        if (elements.length <= 0) {\n            return undefined;\n        }\n\n        if (!fluid.tabindex.hasAttr(elements)) {\n            return canHaveDefaultTabindex(elements) ? Number(0) : undefined;\n        }\n\n        // Get the attribute and return it as a number value.\n        var value = elements.attr(normalizeTabindexName());\n        return Number(value);\n    };\n\n    var setValue = function (elements, toIndex) {\n        return elements.each(function (i, item) {\n            $(item).attr(normalizeTabindexName(), toIndex);\n        });\n    };\n\n    // -- Public API --\n\n    /**\n     * Gets the value of the tabindex attribute for the first item, or sets the tabindex value of all elements\n     * if toIndex is specified.\n     *\n     * @param {String|Number} toIndex\n     */\n    fluid.tabindex = function (target, toIndex) {\n        target = $(target);\n        if (toIndex !== null && toIndex !== undefined) {\n            return setValue(target, toIndex);\n        } else {\n            return getValue(target);\n        }\n    };\n\n    /**\n     * Removes the tabindex attribute altogether from each element.\n     */\n    fluid.tabindex.remove = function (target) {\n        target = $(target);\n        return target.each(function (i, item) {\n            $(item).removeAttr(normalizeTabindexName());\n        });\n    };\n\n    /**\n     * Determines if an element actually has a tabindex attribute present.\n     */\n    fluid.tabindex.hasAttr = function (target) {\n        target = $(target);\n        if (target.length <= 0) {\n            return false;\n        }\n        var togo = target.map(\n            function () {\n                var attributeNode = this.getAttributeNode(normalizeTabindexName());\n                return attributeNode ? attributeNode.specified : false;\n            }\n        );\n        return togo.length === 1 ? togo[0] : togo;\n    };\n\n    /**\n     * Determines if an element either has a tabindex attribute or is naturally tab-focussable.\n     */\n    fluid.tabindex.has = function (target) {\n        target = $(target);\n        return fluid.tabindex.hasAttr(target) || canHaveDefaultTabindex(target);\n    };\n\n    // Keyboard navigation\n    // Public, static constants needed by the rest of the library.\n    fluid.a11y = $.a11y || {};\n\n    fluid.a11y.orientation = {\n        HORIZONTAL: 0,\n        VERTICAL: 1,\n        BOTH: 2\n    };\n\n    var UP_DOWN_KEYMAP = {\n        next: $.ui.keyCode.DOWN,\n        previous: $.ui.keyCode.UP\n    };\n\n    var LEFT_RIGHT_KEYMAP = {\n        next: $.ui.keyCode.RIGHT,\n        previous: $.ui.keyCode.LEFT\n    };\n\n    // Private functions.\n    var unwrap = function (element) {\n        return element.jquery ? element[0] : element; // Unwrap the element if it's a jQuery.\n    };\n\n\n    var makeElementsTabFocussable = function (elements) {\n        // If each element doesn't have a tabindex, or has one set to a negative value, set it to 0.\n        elements.each(function (idx, item) {\n            item = $(item);\n            if (!item.fluid(\"tabindex.has\") || item.fluid(\"tabindex\") < 0) {\n                item.fluid(\"tabindex\", 0);\n            }\n        });\n    };\n\n    // Public API.\n    /**\n     * Makes all matched elements available in the tab order by setting their tabindices to \"0\".\n     */\n    fluid.tabbable = function (target) {\n        target = $(target);\n        makeElementsTabFocussable(target);\n    };\n\n    /***********************************************************************\n     * Selectable functionality - geometrising a set of nodes such that they\n     * can be navigated (by setting focus) using a set of directional keys\n     */\n\n    var CONTEXT_KEY = \"selectionContext\";\n    var NO_SELECTION = -32768;\n\n    var cleanUpWhenLeavingContainer = function (selectionContext) {\n        if (selectionContext.activeItemIndex !== NO_SELECTION) {\n            if (selectionContext.options.onLeaveContainer) {\n                selectionContext.options.onLeaveContainer(\n                    selectionContext.selectables[selectionContext.activeItemIndex]\n                );\n            } else if (selectionContext.options.onUnselect) {\n                selectionContext.options.onUnselect(\n                    selectionContext.selectables[selectionContext.activeItemIndex]\n                );\n            }\n        }\n\n        if (!selectionContext.options.rememberSelectionState) {\n            selectionContext.activeItemIndex = NO_SELECTION;\n        }\n    };\n\n    /**\n     * Does the work of selecting an element and delegating to the client handler.\n     */\n    var drawSelection = function (elementToSelect, handler) {\n        if (handler) {\n            handler(elementToSelect);\n        }\n    };\n\n    /**\n     * Does does the work of unselecting an element and delegating to the client handler.\n     */\n    var eraseSelection = function (selectedElement, handler) {\n        if (handler && selectedElement) {\n            handler(selectedElement);\n        }\n    };\n\n    var unselectElement = function (selectedElement, selectionContext) {\n        eraseSelection(selectedElement, selectionContext.options.onUnselect);\n    };\n\n    var selectElement = function (elementToSelect, selectionContext) {\n        // It's possible that we're being called programmatically, in which case we should clear any previous selection.\n        unselectElement(selectionContext.selectedElement(), selectionContext);\n\n        elementToSelect = unwrap(elementToSelect);\n        var newIndex = selectionContext.selectables.index(elementToSelect);\n\n        // Next check if the element is a known selectable. If not, do nothing.\n        if (newIndex === -1) {\n            return;\n        }\n\n        // Select the new element.\n        selectionContext.activeItemIndex = newIndex;\n        drawSelection(elementToSelect, selectionContext.options.onSelect);\n    };\n\n    var selectableFocusHandler = function (selectionContext) {\n        return function (evt) {\n            // FLUID-3590: newer browsers (FF 3.6, Webkit 4) have a form of \"bug\" in that they will go bananas\n            // on attempting to move focus off an element which has tabindex dynamically set to -1.\n            $(evt.target).fluid(\"tabindex\", 0);\n            selectElement(evt.target, selectionContext);\n\n            // Force focus not to bubble on some browsers.\n            return evt.stopPropagation();\n        };\n    };\n\n    var selectableBlurHandler = function (selectionContext) {\n        return function (evt) {\n            $(evt.target).fluid(\"tabindex\", selectionContext.options.selectablesTabindex);\n            unselectElement(evt.target, selectionContext);\n\n            // Force blur not to bubble on some browsers.\n            return evt.stopPropagation();\n        };\n    };\n\n    var reifyIndex = function (sc_that) {\n        var elements = sc_that.selectables;\n        if (sc_that.activeItemIndex >= elements.length) {\n            sc_that.activeItemIndex = (sc_that.options.noWrap ? elements.length - 1 : 0);\n        }\n        if (sc_that.activeItemIndex < 0 && sc_that.activeItemIndex !== NO_SELECTION) {\n            sc_that.activeItemIndex = (sc_that.options.noWrap ? 0 : elements.length - 1);\n        }\n        if (sc_that.activeItemIndex >= 0) {\n            fluid.focus(elements[sc_that.activeItemIndex]);\n        }\n    };\n\n    var prepareShift = function (selectionContext) {\n        // FLUID-3590: FF 3.6 and Safari 4.x won't fire blur() when programmatically moving focus.\n        var selElm = selectionContext.selectedElement();\n        if (selElm) {\n            fluid.blur(selElm);\n        }\n\n        unselectElement(selectionContext.selectedElement(), selectionContext);\n        if (selectionContext.activeItemIndex === NO_SELECTION) {\n            selectionContext.activeItemIndex = -1;\n        }\n    };\n\n    var focusNextElement = function (selectionContext) {\n        prepareShift(selectionContext);\n        ++selectionContext.activeItemIndex;\n        reifyIndex(selectionContext);\n    };\n\n    var focusPreviousElement = function (selectionContext) {\n        prepareShift(selectionContext);\n        --selectionContext.activeItemIndex;\n        reifyIndex(selectionContext);\n    };\n\n    var arrowKeyHandler = function (selectionContext, keyMap) {\n        return function (evt) {\n            if (evt.which === keyMap.next) {\n                focusNextElement(selectionContext);\n                evt.preventDefault();\n            } else if (evt.which === keyMap.previous) {\n                focusPreviousElement(selectionContext);\n                evt.preventDefault();\n            }\n        };\n    };\n\n    var getKeyMapForDirection = function (direction) {\n        // Determine the appropriate mapping for next and previous based on the specified direction.\n        var keyMap;\n        if (direction === fluid.a11y.orientation.HORIZONTAL) {\n            keyMap = LEFT_RIGHT_KEYMAP;\n        }\n        else if (direction === fluid.a11y.orientation.VERTICAL) {\n            // Assume vertical in any other case.\n            keyMap = UP_DOWN_KEYMAP;\n        }\n\n        return keyMap;\n    };\n\n    var tabKeyHandler = function (selectionContext) {\n        return function (evt) {\n            if (evt.which !== $.ui.keyCode.TAB) {\n                return;\n            }\n            cleanUpWhenLeavingContainer(selectionContext);\n\n            // Catch Shift-Tab and note that focus is on its way out of the container.\n            if (evt.shiftKey) {\n                selectionContext.focusIsLeavingContainer = true;\n            }\n        };\n    };\n\n    var containerFocusHandler = function (selectionContext) {\n        return function (evt) {\n            var shouldOrig = selectionContext.options.autoSelectFirstItem;\n            var shouldSelect = typeof(shouldOrig) === \"function\" ? shouldOrig() : shouldOrig;\n\n            // Override the autoselection if we're on the way out of the container.\n            if (selectionContext.focusIsLeavingContainer) {\n                shouldSelect = false;\n            }\n\n            // This target check works around the fact that sometimes focus bubbles, even though it shouldn't.\n            if (shouldSelect && evt.target === selectionContext.container.get(0)) {\n                if (selectionContext.activeItemIndex === NO_SELECTION) {\n                    selectionContext.activeItemIndex = 0;\n                }\n                fluid.focus(selectionContext.selectables[selectionContext.activeItemIndex]);\n            }\n\n            // Force focus not to bubble on some browsers.\n            return evt.stopPropagation();\n        };\n    };\n\n    var containerBlurHandler = function (selectionContext) {\n        return function (evt) {\n            selectionContext.focusIsLeavingContainer = false;\n\n            // Force blur not to bubble on some browsers.\n            return evt.stopPropagation();\n        };\n    };\n\n    var makeElementsSelectable = function (container, defaults, userOptions) {\n\n        var options = $.extend(true, {}, defaults, userOptions);\n\n        var keyMap = getKeyMapForDirection(options.direction);\n\n        var selectableElements = options.selectableElements ? options.selectableElements :\n            container.find(options.selectableSelector);\n\n        // Context stores the currently active item(undefined to start) and list of selectables.\n        var that = {\n            container: container,\n            activeItemIndex: NO_SELECTION,\n            selectables: selectableElements,\n            focusIsLeavingContainer: false,\n            options: options\n        };\n\n        that.selectablesUpdated = function (focusedItem) {\n          // Remove selectables from the tab order and add focus/blur handlers\n            if (typeof(that.options.selectablesTabindex) === \"number\") {\n                that.selectables.fluid(\"tabindex\", that.options.selectablesTabindex);\n            }\n            that.selectables.off(\"focus.\" + CONTEXT_KEY);\n            that.selectables.off(\"blur.\" + CONTEXT_KEY);\n            that.selectables.on(\"focus.\" + CONTEXT_KEY, selectableFocusHandler(that));\n            that.selectables.on(\"blur.\"  + CONTEXT_KEY, selectableBlurHandler(that));\n            if (keyMap && that.options.noBubbleListeners) {\n                that.selectables.off(\"keydown.\" + CONTEXT_KEY);\n                that.selectables.on(\"keydown.\" + CONTEXT_KEY, arrowKeyHandler(that, keyMap));\n            }\n            if (focusedItem) {\n                selectElement(focusedItem, that);\n            }\n            else {\n                reifyIndex(that);\n            }\n        };\n\n        that.refresh = function () {\n            if (!that.options.selectableSelector) {\n                fluid.fail(\"Cannot refresh selectable context which was not initialised by a selector\");\n            }\n            that.selectables = container.find(options.selectableSelector);\n            that.selectablesUpdated();\n        };\n\n        that.selectedElement = function () {\n            return that.activeItemIndex < 0 ? null : that.selectables[that.activeItemIndex];\n        };\n\n        // Add various handlers to the container.\n        if (keyMap && !that.options.noBubbleListeners) {\n            container.keydown(arrowKeyHandler(that, keyMap));\n        }\n        container.keydown(tabKeyHandler(that));\n        container.focus(containerFocusHandler(that));\n        container.blur(containerBlurHandler(that));\n\n        that.selectablesUpdated();\n\n        return that;\n    };\n\n    /**\n     * Makes all matched elements selectable with the arrow keys.\n     * Supply your own handlers object with onSelect: and onUnselect: properties for custom behaviour.\n     * Options provide configurability, including direction: and autoSelectFirstItem:\n     * Currently supported directions are jQuery.a11y.directions.HORIZONTAL and VERTICAL.\n     */\n    fluid.selectable = function (target, options) {\n        target = $(target);\n        var that = makeElementsSelectable(target, fluid.selectable.defaults, options);\n        fluid.setScopedData(target, CONTEXT_KEY, that);\n        return that;\n    };\n\n    /**\n     * Selects the specified element.\n     */\n    fluid.selectable.select = function (target, toSelect) {\n        fluid.focus(toSelect);\n    };\n\n    /**\n     * Selects the next matched element.\n     */\n    fluid.selectable.selectNext = function (target) {\n        target = $(target);\n        focusNextElement(fluid.getScopedData(target, CONTEXT_KEY));\n    };\n\n    /**\n     * Selects the previous matched element.\n     */\n    fluid.selectable.selectPrevious = function (target) {\n        target = $(target);\n        focusPreviousElement(fluid.getScopedData(target, CONTEXT_KEY));\n    };\n\n    /**\n     * Returns the currently selected item wrapped as a jQuery object.\n     */\n    fluid.selectable.currentSelection = function (target) {\n        target = $(target);\n        var that = fluid.getScopedData(target, CONTEXT_KEY);\n        return $(that.selectedElement());\n    };\n\n    fluid.selectable.defaults = {\n        direction: fluid.a11y.orientation.VERTICAL,\n        selectablesTabindex: -1,\n        autoSelectFirstItem: true,\n        rememberSelectionState: true,\n        selectableSelector: \".selectable\",\n        selectableElements: null,\n        onSelect: null,\n        onUnselect: null,\n        onLeaveContainer: null,\n        noWrap: false\n    };\n\n    /********************************************************************\n     *  Activation functionality - declaratively associating actions with\n     * a set of keyboard bindings.\n     */\n\n    var checkForModifier = function (binding, evt) {\n        // If no modifier was specified, just return true.\n        if (!binding.modifier) {\n            return true;\n        }\n\n        var modifierKey = binding.modifier;\n        var isCtrlKeyPresent = modifierKey && evt.ctrlKey;\n        var isAltKeyPresent = modifierKey && evt.altKey;\n        var isShiftKeyPresent = modifierKey && evt.shiftKey;\n\n        return isCtrlKeyPresent || isAltKeyPresent || isShiftKeyPresent;\n    };\n\n    /** Constructs a raw \"keydown\"-facing handler, given a binding entry. This\n     *  checks whether the key event genuinely triggers the event and forwards it\n     *  to any \"activateHandler\" registered in the binding.\n     */\n    var makeActivationHandler = function (binding) {\n        return function (evt) {\n            var target = evt.target;\n            if (!fluid.enabled(target)) {\n                return;\n            }\n// The following 'if' clause works in the real world, but there's a bug in the jQuery simulation\n// that causes keyboard simulation to fail in Safari, causing our tests to fail:\n//     http://ui.jquery.com/bugs/ticket/3229\n// The replacement 'if' clause works around this bug.\n// When this issue is resolved, we should revert to the original clause.\n//            if (evt.which === binding.key && binding.activateHandler && checkForModifier(binding, evt)) {\n            var code = evt.which ? evt.which : evt.keyCode;\n            if (code === binding.key && binding.activateHandler && checkForModifier(binding, evt)) {\n                var event = $.Event(\"fluid-activate\");\n                $(target).trigger(event, [binding.activateHandler]);\n                if (event.isDefaultPrevented()) {\n                    evt.preventDefault();\n                }\n            }\n        };\n    };\n\n    var makeElementsActivatable = function (elements, onActivateHandler, defaultKeys, options) {\n        // Create bindings for each default key.\n        var bindings = [];\n        $(defaultKeys).each(function (index, key) {\n            bindings.push({\n                modifier: null,\n                key: key,\n                activateHandler: onActivateHandler\n            });\n        });\n\n        // Merge with any additional key bindings.\n        if (options && options.additionalBindings) {\n            bindings = bindings.concat(options.additionalBindings);\n        }\n\n        fluid.initEnablement(elements);\n\n        // Add listeners for each key binding.\n        for (var i = 0; i < bindings.length; ++i) {\n            var binding = bindings[i];\n            elements.keydown(makeActivationHandler(binding));\n        }\n        elements.on(\"fluid-activate\", function (evt, handler) {\n            handler = handler || onActivateHandler;\n            return handler ? handler(evt) : null;\n        });\n    };\n\n    /**\n     * Makes all matched elements activatable with the Space and Enter keys.\n     * Provide your own handler function for custom behaviour.\n     * Options allow you to provide a list of additionalActivationKeys.\n     */\n    fluid.activatable = function (target, fn, options) {\n        target = $(target);\n        makeElementsActivatable(target, fn, fluid.activatable.defaults.keys, options);\n    };\n\n    /**\n     * Activates the specified element.\n     */\n    fluid.activate = function (target) {\n        $(target).trigger(\"fluid-activate\");\n    };\n\n    // Public Defaults.\n    fluid.activatable.defaults = {\n        keys: [$.ui.keyCode.ENTER, $.ui.keyCode.SPACE]\n    };\n\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2010-2016 OCAD University\nCopyright 2012-2014 Raising the Floor - US\nCopyright 2014-2016 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\n/** This file contains functions which depend on the presence of a DOM document\n *  and which depend on the contents of Fluid.js **/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    fluid.defaults(\"fluid.viewComponent\", {\n        gradeNames: [\"fluid.modelComponent\"],\n        initFunction: \"fluid.initView\",\n        argumentMap: {\n            container: 0,\n            options: 1\n        },\n        members: { // Used to allow early access to DOM binder via IoC, but to also avoid triggering evaluation of selectors\n            dom: \"@expand:fluid.initDomBinder({that}, {that}.options.selectors)\"\n        }\n    });\n\n    // unsupported, NON-API function\n    fluid.dumpSelector = function (selectable) {\n        return typeof (selectable) === \"string\" ? selectable :\n            selectable.selector ? selectable.selector : \"\";\n    };\n\n    // unsupported, NON-API function\n    // NOTE: this function represents a temporary strategy until we have more integrated IoC debugging.\n    // It preserves the 1.3 and previous framework behaviour for the 1.x releases, but provides a more informative\n    // diagnostic - in fact, it is perfectly acceptable for a component's creator to return no value and\n    // the failure is really in assumptions in fluid.initLittleComponent. Revisit this issue for 2.0\n    fluid.diagnoseFailedView = function (componentName, that, options, args) {\n        if (!that && fluid.hasGrade(options, \"fluid.viewComponent\")) {\n            var container = fluid.wrap(args[1]);\n            var message1 = \"Instantiation of view component with type \" + componentName + \" failed, since \";\n            if (!container) {\n                fluid.fail(message1 + \" container argument is empty\");\n            }\n            else if (container.length === 0) {\n                fluid.fail(message1 + \"selector \\\"\", fluid.dumpSelector(args[1]), \"\\\" did not match any markup in the document\");\n            } else {\n                fluid.fail(message1 + \" component creator function did not return a value\");\n            }\n        }\n    };\n\n    fluid.checkTryCatchParameter = function () {\n        var location = window.location || { search: \"\", protocol: \"file:\" };\n        var GETparams = location.search.slice(1).split(\"&\");\n        return fluid.find(GETparams, function (param) {\n            if (param.indexOf(\"notrycatch\") === 0) {\n                return true;\n            }\n        }) === true;\n    };\n\n    fluid.notrycatch = fluid.checkTryCatchParameter();\n\n\n    /**\n     * Wraps an object in a jQuery if it isn't already one. This function is useful since\n     * it ensures to wrap a null or otherwise falsy argument to itself, rather than the\n     * often unhelpful jQuery default of returning the overall document node.\n     *\n     * @param {Object} obj the object to wrap in a jQuery\n     * @param {jQuery} userJQuery the jQuery object to use for the wrapping, optional - use the current jQuery if absent\n     */\n    fluid.wrap = function (obj, userJQuery) {\n        userJQuery = userJQuery || $;\n        return ((!obj || obj.jquery) ? obj : userJQuery(obj));\n    };\n\n    /**\n     * If obj is a jQuery, this function will return the first DOM element within it. Otherwise, the object will be returned unchanged.\n     *\n     * @param {jQuery} obj the jQuery instance to unwrap into a pure DOM element\n     */\n    fluid.unwrap = function (obj) {\n        return obj && obj.jquery ? obj[0] : obj;\n    };\n\n    /**\n     * Fetches a single container element and returns it as a jQuery.\n     *\n     * @param {String||jQuery||element} containerSpec an id string, a single-element jQuery, or a DOM element specifying a unique container\n     * @param {Boolean} fallible <code>true</code> if an empty container is to be reported as a valid condition\n     * @return a single-element jQuery of container\n     */\n    fluid.container = function (containerSpec, fallible, userJQuery) {\n        var selector = containerSpec.selector || containerSpec;\n        if (userJQuery) {\n            containerSpec = fluid.unwrap(containerSpec);\n        }\n        var container = fluid.wrap(containerSpec, userJQuery);\n        if (fallible && (!container || container.length === 0)) {\n            return null;\n        }\n\n        if (!container || !container.jquery || container.length !== 1) {\n            if (typeof (containerSpec) !== \"string\") {\n                containerSpec = container.selector;\n            }\n            var count = container.length !== undefined ? container.length : 0;\n            fluid.fail((count > 1 ? \"More than one (\" + count + \") container elements were\"\n                    : \"No container element was\") + \" found for selector \" + containerSpec);\n        }\n        if (!fluid.isDOMNode(container[0])) {\n            fluid.fail(\"fluid.container was supplied a non-jQueryable element\");\n        }\n\n        // To address FLUID-5966, manually adding back the selector and context properties that were removed from jQuery v3.0.\n        // ( see: https://jquery.com/upgrade-guide/3.0/#breaking-change-deprecated-context-and-selector-properties-removed )\n        // In most cases the \"selector\" property will already be restored through the DOM binder;\n        // however, when a selector or pure jQuery element is supplied directly as a component's container, we need to add them\n        // if it is possible to infer them. This feature is rarely used but is crucial for the prefs framework infrastructure\n        // in Panels.js fluid.prefs.subPanel.resetDomBinder\n        container.selector = selector;\n        container.context = container.context || containerSpec.ownerDocument || document;\n\n        return container;\n    };\n\n    /**\n     * Creates a new DOM Binder instance, used to locate elements in the DOM by name.\n     *\n     * @param {Object} container the root element in which to locate named elements\n     * @param {Object} selectors a collection of named jQuery selectors\n     */\n    fluid.createDomBinder = function (container, selectors) {\n        // don't put on a typename to avoid confusing primitive visitComponentChildren\n        var that = {\n            id: fluid.allocateGuid(),\n            cache: {}\n        };\n        var userJQuery = container.constructor;\n\n        function cacheKey(name, thisContainer) {\n            return fluid.allocateSimpleId(thisContainer) + \"-\" + name;\n        }\n\n        function record(name, thisContainer, result) {\n            that.cache[cacheKey(name, thisContainer)] = result;\n        }\n\n        that.locate = function (name, localContainer) {\n            var selector, thisContainer, togo;\n\n            selector = selectors[name];\n            if (selector === undefined) {\n                return undefined;\n            }\n            thisContainer = localContainer ? $(localContainer) : container;\n            if (!thisContainer) {\n                fluid.fail(\"DOM binder invoked for selector \" + name + \" without container\");\n            }\n            if (selector === \"\") {\n                togo = thisContainer;\n            }\n            else if (!selector) {\n                togo = userJQuery();\n            }\n            else {\n                if (typeof (selector) === \"function\") {\n                    togo = userJQuery(selector.call(null, fluid.unwrap(thisContainer)));\n                } else {\n                    togo = userJQuery(selector, thisContainer);\n                }\n            }\n\n            if (!togo.selector) {\n                togo.selector = selector;\n                togo.context = thisContainer;\n            }\n            togo.selectorName = name;\n            record(name, thisContainer, togo);\n            return togo;\n        };\n        that.fastLocate = function (name, localContainer) {\n            var thisContainer = localContainer ? localContainer : container;\n            var key = cacheKey(name, thisContainer);\n            var togo = that.cache[key];\n            return togo ? togo : that.locate(name, localContainer);\n        };\n        that.clear = function () {\n            that.cache = {};\n        };\n        that.refresh = function (names, localContainer) {\n            var thisContainer = localContainer ? localContainer : container;\n            if (typeof names === \"string\") {\n                names = [names];\n            }\n            if (thisContainer.length === undefined) {\n                thisContainer = [thisContainer];\n            }\n            for (var i = 0; i < names.length; ++i) {\n                for (var j = 0; j < thisContainer.length; ++j) {\n                    that.locate(names[i], thisContainer[j]);\n                }\n            }\n        };\n        that.resolvePathSegment = that.locate;\n\n        return that;\n    };\n\n    /** Expect that jQuery selector query has resulted in a non-empty set of\n     * results. If none are found, this function will fail with a diagnostic message,\n     * with the supplied message prepended.\n     */\n    fluid.expectFilledSelector = function (result, message) {\n        if (result && result.length === 0 && result.jquery) {\n            fluid.fail(message + \": selector \\\"\" + result.selector + \"\\\" with name \" + result.selectorName +\n                       \" returned no results in context \" + fluid.dumpEl(result.context));\n        }\n    };\n\n    /**\n     * The central initialiation method called as the first act of every Fluid\n     * component. This function automatically merges user options with defaults,\n     * attaches a DOM Binder to the instance, and configures events.\n     *\n     * @param {String} componentName The unique \"name\" of the component, which will be used\n     * to fetch the default options from store. By recommendation, this should be the global\n     * name of the component's creator function.\n     * @param {jQueryable} container A specifier for the single root \"container node\" in the\n     * DOM which will house all the markup for this component.\n     * @param {Object} userOptions The configuration options for this component.\n     */\n     // 4th argument is NOT SUPPORTED, see comments for initLittleComponent\n    fluid.initView = function (componentName, containerSpec, userOptions, localOptions) {\n        var container = fluid.container(containerSpec, true);\n        fluid.expectFilledSelector(container, \"Error instantiating component with name \\\"\" + componentName);\n        if (!container) {\n            return null;\n        }\n        // Need to ensure container is set early, without relying on an IoC mechanism - rethink this with asynchrony\n        var receiver = function (that) {\n            that.container = container;\n        };\n        var that = fluid.initLittleComponent(componentName, userOptions, localOptions || {gradeNames: [\"fluid.viewComponent\"]}, receiver);\n\n        if (!that.dom) {\n            fluid.initDomBinder(that);\n        }\n        // TODO: cannot afford a mutable container - put this into proper workflow\n        var userJQuery = that.options.jQuery; // Do it a second time to correct for jQuery injection\n        // if (userJQuery) {\n        //    container = fluid.container(containerSpec, true, userJQuery);\n        // }\n        fluid.log(\"Constructing view component \" + componentName + \" with container \" + container.constructor.expando +\n            (userJQuery ? \" user jQuery \" + userJQuery.expando : \"\") + \" env: \" + $.expando);\n\n        return that;\n    };\n\n    /**\n     * Creates a new DOM Binder instance for the specified component and mixes it in.\n     *\n     * @param {Object} that the component instance to attach the new DOM Binder to\n     */\n    fluid.initDomBinder = function (that, selectors) {\n        if (!that.container) {\n            fluid.fail(\"fluid.initDomBinder called for component with typeName \" + that.typeName +\n                \" without an initialised container - this has probably resulted from placing \\\"fluid.viewComponent\\\" in incorrect position in grade merging order. \" +\n                \" Make sure to place it to the right of any non-view grades in the gradeNames list to ensure that it overrides properly: resolved gradeNames is \", that.options.gradeNames, \" for component \", that);\n        }\n        that.dom = fluid.createDomBinder(that.container, selectors || that.options.selectors || {});\n        that.locate = that.dom.locate;\n        return that.dom;\n    };\n\n    // DOM Utilities.\n\n    /**\n     * Finds the nearest ancestor of the element that matches a predicate\n     * @param {Element} element DOM element\n     * @param {Function} test A function (predicate) accepting a DOM element, returning a truthy value representing a match\n     * @return The first element parent for which the predicate returns truthy - or undefined if no parent matches\n     */\n    fluid.findAncestor = function (element, test) {\n        element = fluid.unwrap(element);\n        while (element) {\n            if (test(element)) {\n                return element;\n            }\n            element = element.parentNode;\n        }\n    };\n\n    fluid.findForm = function (node) {\n        return fluid.findAncestor(node, function (element) {\n            return element.nodeName.toLowerCase() === \"form\";\n        });\n    };\n\n    /** A utility with the same signature as jQuery.text and jQuery.html, but without the API irregularity\n     * that treats a single argument of undefined as different to no arguments */\n    // in jQuery 1.7.1, jQuery pulled the same dumb trick with $.text() that they did with $.val() previously,\n    // see comment in fluid.value below\n    fluid.each([\"text\", \"html\"], function (method) {\n        fluid[method] = function (node, newValue) {\n            node = $(node);\n            return newValue === undefined ? node[method]() : node[method](newValue);\n        };\n    });\n\n    /** A generalisation of jQuery.val to correctly handle the case of acquiring and\n     * setting the value of clustered radio button/checkbox sets, potentially, given\n     * a node corresponding to just one element.\n     */\n    fluid.value = function (nodeIn, newValue) {\n        var node = fluid.unwrap(nodeIn);\n        var multiple = false;\n        if (node.nodeType === undefined && node.length > 1) {\n            node = node[0];\n            multiple = true;\n        }\n        if (\"input\" !== node.nodeName.toLowerCase() || !/radio|checkbox/.test(node.type)) {\n            // resist changes to contract of jQuery.val() in jQuery 1.5.1 (see FLUID-4113)\n            return newValue === undefined ? $(node).val() : $(node).val(newValue);\n        }\n        var name = node.name;\n        if (name === undefined) {\n            fluid.fail(\"Cannot acquire value from node \" + fluid.dumpEl(node) + \" which does not have name attribute set\");\n        }\n        var elements;\n        if (multiple) {\n            elements = nodeIn;\n        } else {\n            elements = node.ownerDocument.getElementsByName(name);\n            var scope = fluid.findForm(node);\n            elements = $.grep(elements, function (element) {\n                if (element.name !== name) {\n                    return false;\n                }\n                return !scope || fluid.dom.isContainer(scope, element);\n            });\n        }\n        if (newValue !== undefined) {\n            if (typeof(newValue) === \"boolean\") {\n                newValue = (newValue ? \"true\" : \"false\");\n            }\n            // jQuery gets this partially right, but when dealing with radio button array will\n            // set all of their values to \"newValue\" rather than setting the checked property\n            // of the corresponding control.\n            $.each(elements, function () {\n                this.checked = (newValue instanceof Array ?\n                    newValue.indexOf(this.value) !== -1 : newValue === this.value);\n            });\n        } else { // this part jQuery will not do - extracting value from <input> array\n            var checked = $.map(elements, function (element) {\n                return element.checked ? element.value : null;\n            });\n            return node.type === \"radio\" ? checked[0] : checked;\n        }\n    };\n\n\n    fluid.BINDING_ROOT_KEY = \"fluid-binding-root\";\n\n    /** Recursively find any data stored under a given name from a node upwards\n     * in its DOM hierarchy **/\n\n    fluid.findData = function (elem, name) {\n        while (elem) {\n            var data = $.data(elem, name);\n            if (data) {\n                return data;\n            }\n            elem = elem.parentNode;\n        }\n    };\n\n    fluid.bindFossils = function (node, data, fossils) {\n        $.data(node, fluid.BINDING_ROOT_KEY, {data: data, fossils: fossils});\n    };\n\n    fluid.boundPathForNode = function (node, fossils) {\n        node = fluid.unwrap(node);\n        var key = node.name || node.id;\n        var record = fossils[key];\n        return record ? record.EL : null;\n    };\n\n   /** \"Automatically\" apply to whatever part of the data model is\n     * relevant, the changed value received at the given DOM node*/\n    fluid.applyBoundChange = function (node, newValue, applier) {\n        node = fluid.unwrap(node);\n        if (newValue === undefined) {\n            newValue = fluid.value(node);\n        }\n        if (node.nodeType === undefined && node.length > 0) {\n            node = node[0];\n        } // assume here that they share name and parent\n        var root = fluid.findData(node, fluid.BINDING_ROOT_KEY);\n        if (!root) {\n            fluid.fail(\"Bound data could not be discovered in any node above \" + fluid.dumpEl(node));\n        }\n        var name = node.name;\n        var fossil = root.fossils[name];\n        if (!fossil) {\n            fluid.fail(\"No fossil discovered for name \" + name + \" in fossil record above \" + fluid.dumpEl(node));\n        }\n        if (typeof(fossil.oldvalue) === \"boolean\") { // deal with the case of an \"isolated checkbox\"\n            newValue = newValue[0] ? true : false;\n        }\n        var EL = root.fossils[name].EL;\n        if (applier) {\n            applier.fireChangeRequest({path: EL, value: newValue, source: \"DOM:\" + node.id});\n        } else {\n            fluid.set(root.data, EL, newValue);\n        }\n    };\n\n\n    /**\n     * Returns a jQuery object given the id of a DOM node. In the case the element\n     * is not found, will return an empty list.\n     */\n    fluid.jById = function (id, dokkument) {\n        dokkument = dokkument && dokkument.nodeType === 9 ? dokkument : document;\n        var element = fluid.byId(id, dokkument);\n        var togo = element ? $(element) : [];\n        togo.selector = \"#\" + id;\n        togo.context = dokkument;\n        return togo;\n    };\n\n    /**\n     * Returns an DOM element quickly, given an id\n     *\n     * @param {Object} id the id of the DOM node to find\n     * @param {Document} dokkument the document in which it is to be found (if left empty, use the current document)\n     * @return The DOM element with this id, or null, if none exists in the document.\n     */\n    fluid.byId = function (id, dokkument) {\n        dokkument = dokkument && dokkument.nodeType === 9 ? dokkument : document;\n        var el = dokkument.getElementById(id);\n        if (el) {\n        // Use element id property here rather than attribute, to work around FLUID-3953\n            if (el.id !== id) {\n                fluid.fail(\"Problem in document structure - picked up element \" +\n                    fluid.dumpEl(el) + \" for id \" + id +\n                    \" without this id - most likely the element has a name which conflicts with this id\");\n            }\n            return el;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the id attribute from a jQuery or pure DOM element.\n     *\n     * @param {jQuery||Element} element the element to return the id attribute for\n     */\n    fluid.getId = function (element) {\n        return fluid.unwrap(element).id;\n    };\n\n    /**\n     * Allocate an id to the supplied element if it has none already, by a simple\n     * scheme resulting in ids \"fluid-id-nnnn\" where nnnn is an increasing integer.\n     */\n\n    fluid.allocateSimpleId = function (element) {\n        element = fluid.unwrap(element);\n        if (!element || fluid.isPrimitive(element)) {\n            return null;\n        }\n\n        if (!element.id) {\n            var simpleId = \"fluid-id-\" + fluid.allocateGuid();\n            element.id = simpleId;\n        }\n        return element.id;\n    };\n\n    /**\n     * Returns the document to which an element belongs, or the element itself if it is already a document\n     *\n     * @param {jQuery||Element} element The element to return the document for\n     * @return {Document} dokkument The document in which it is to be found\n     */\n    fluid.getDocument = function (element) {\n        var node = fluid.unwrap(element);\n        // DOCUMENT_NODE - guide to node types at https://developer.mozilla.org/en/docs/Web/API/Node/nodeType\n        return node.nodeType === 9 ? node : node.ownerDocument;\n    };\n\n    fluid.defaults(\"fluid.ariaLabeller\", {\n        gradeNames: [\"fluid.viewComponent\"],\n        labelAttribute: \"aria-label\",\n        liveRegionMarkup: \"<div class=\\\"liveRegion fl-hidden-accessible\\\" aria-live=\\\"polite\\\"></div>\",\n        liveRegionId: \"fluid-ariaLabeller-liveRegion\",\n        invokers: {\n            generateLiveElement: {\n                funcName: \"fluid.ariaLabeller.generateLiveElement\",\n                args: \"{that}\"\n            },\n            update: {\n                funcName: \"fluid.ariaLabeller.update\",\n                args: [\"{that}\", \"{arguments}.0\"]\n            }\n        },\n        listeners: {\n            onCreate: {\n                func: \"{that}.update\",\n                args: [null]\n            }\n        }\n    });\n\n    fluid.ariaLabeller.update = function (that, newOptions) {\n        newOptions = newOptions || that.options;\n        that.container.attr(that.options.labelAttribute, newOptions.text);\n        if (newOptions.dynamicLabel) {\n            var live = fluid.jById(that.options.liveRegionId);\n            if (live.length === 0) {\n                live = that.generateLiveElement();\n            }\n            live.text(newOptions.text);\n        }\n    };\n\n    fluid.ariaLabeller.generateLiveElement = function (that) {\n        var liveEl = $(that.options.liveRegionMarkup);\n        liveEl.prop(\"id\", that.options.liveRegionId);\n        $(\"body\").append(liveEl);\n        return liveEl;\n    };\n\n    var LABEL_KEY = \"aria-labelling\";\n\n    fluid.getAriaLabeller = function (element) {\n        element = $(element);\n        var that = fluid.getScopedData(element, LABEL_KEY);\n        return that;\n    };\n\n    /** Manages an ARIA-mediated label attached to a given DOM element. An\n     * aria-labelledby attribute and target node is fabricated in the document\n     * if they do not exist already, and a \"little component\" is returned exposing a method\n     * \"update\" that allows the text to be updated. */\n\n    fluid.updateAriaLabel = function (element, text, options) {\n        options = $.extend({}, options || {}, {text: text});\n        var that = fluid.getAriaLabeller(element);\n        if (!that) {\n            that = fluid.ariaLabeller(element, options);\n            fluid.setScopedData(element, LABEL_KEY, that);\n        } else {\n            that.update(options);\n        }\n        return that;\n    };\n\n    /** \"Global Dismissal Handler\" for the entire page. Attaches a click handler to the\n     * document root that will cause dismissal of any elements (typically dialogs) which\n     * have registered themselves. Dismissal through this route will automatically clean up\n     * the record - however, the dismisser themselves must take care to deregister in the case\n     * dismissal is triggered through the dialog interface itself. This component can also be\n     * automatically configured by fluid.deadMansBlur by means of the \"cancelByDefault\" option */\n\n    var dismissList = {};\n\n    $(document).click(function (event) {\n        var target = fluid.resolveEventTarget(event);\n        while (target) {\n            if (dismissList[target.id]) {\n                return;\n            }\n            target = target.parentNode;\n        }\n        fluid.each(dismissList, function (dismissFunc, key) {\n            dismissFunc(event);\n            delete dismissList[key];\n        });\n    });\n    // TODO: extend a configurable equivalent of the above dealing with \"focusin\" events\n\n    /** Accepts a free hash of nodes and an optional \"dismissal function\".\n     * If dismissFunc is set, this \"arms\" the dismissal system, such that when a click\n     * is received OUTSIDE any of the hierarchy covered by \"nodes\", the dismissal function\n     * will be executed.\n     */\n    fluid.globalDismissal = function (nodes, dismissFunc) {\n        fluid.each(nodes, function (node) {\n          // Don't bother to use the real id if it is from a foreign document - we will never receive events\n          // from it directly in any case - and foreign documents may be under the control of malign fiends\n          // such as tinyMCE who allocate the same id to everything\n            var id = fluid.unwrap(node).ownerDocument === document ? fluid.allocateSimpleId(node) : fluid.allocateGuid();\n            if (dismissFunc) {\n                dismissList[id] = dismissFunc;\n            }\n            else {\n                delete dismissList[id];\n            }\n        });\n    };\n\n    /** Provides an abstraction for determing the current time.\n     * This is to provide a fix for FLUID-4762, where IE6 - IE8\n     * do not support Date.now().\n     */\n    fluid.now = function () {\n        return Date.now ? Date.now() : (new Date()).getTime();\n    };\n\n\n    /** Sets an interation on a target control, which morally manages a \"blur\" for\n     * a possibly composite region.\n     * A timed blur listener is set on the control, which waits for a short period of\n     * time (options.delay, defaults to 150ms) to discover whether the reason for the\n     * blur interaction is that either a focus or click is being serviced on a nominated\n     * set of \"exclusions\" (options.exclusions, a free hash of elements or jQueries).\n     * If no such event is received within the window, options.handler will be called\n     * with the argument \"control\", to service whatever interaction is required of the\n     * blur.\n     */\n\n    fluid.deadMansBlur = function (control, options) {\n        // TODO: This should be rewritten as a proper component\n        var that = {options: $.extend(true, {}, fluid.defaults(\"fluid.deadMansBlur\"), options)};\n        that.blurPending = false;\n        that.lastCancel = 0;\n        that.canceller = function (event) {\n            fluid.log(\"Cancellation through \" + event.type + \" on \" + fluid.dumpEl(event.target));\n            that.lastCancel = fluid.now();\n            that.blurPending = false;\n        };\n        that.noteProceeded = function () {\n            fluid.globalDismissal(that.options.exclusions);\n        };\n        that.reArm = function () {\n            fluid.globalDismissal(that.options.exclusions, that.proceed);\n        };\n        that.addExclusion = function (exclusions) {\n            fluid.globalDismissal(exclusions, that.proceed);\n        };\n        that.proceed = function (event) {\n            fluid.log(\"Direct proceed through \" + event.type + \" on \" + fluid.dumpEl(event.target));\n            that.blurPending = false;\n            that.options.handler(control);\n        };\n        fluid.each(that.options.exclusions, function (exclusion) {\n            exclusion = $(exclusion);\n            fluid.each(exclusion, function (excludeEl) {\n                $(excludeEl).on(\"focusin\", that.canceller).\n                    on(\"fluid-focus\", that.canceller).\n                    click(that.canceller).mousedown(that.canceller);\n    // Mousedown is added for FLUID-4212, as a result of Chrome bug 6759, 14204\n            });\n        });\n        if (!that.options.cancelByDefault) {\n            $(control).on(\"focusout\", function (event) {\n                fluid.log(\"Starting blur timer for element \" + fluid.dumpEl(event.target));\n                var now = fluid.now();\n                fluid.log(\"back delay: \" + (now - that.lastCancel));\n                if (now - that.lastCancel > that.options.backDelay) {\n                    that.blurPending = true;\n                }\n                setTimeout(function () {\n                    if (that.blurPending) {\n                        that.options.handler(control);\n                    }\n                }, that.options.delay);\n            });\n        }\n        else {\n            that.reArm();\n        }\n        return that;\n    };\n\n    fluid.defaults(\"fluid.deadMansBlur\", {\n        gradeNames: \"fluid.function\",\n        delay: 150,\n        backDelay: 100\n    });\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2010-2011 OCAD University\nCopyright 2010-2011 Lucendo Development Ltd.\nCopyright 2013 Raising the Floor - US\nCopyright 2014-2015 Raising the Floor - International\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n    \"use strict\";\n\n    /** NOTE: All contents of this file are DEPRECATED and no entry point should be considered a supported API **/\n\n    fluid.explodeLocalisedName = function (fileName, locale, defaultLocale) {\n        var lastDot = fileName.lastIndexOf(\".\");\n        if (lastDot === -1 || lastDot === 0) {\n            lastDot = fileName.length;\n        }\n        var baseName = fileName.substring(0, lastDot);\n        var extension = fileName.substring(lastDot);\n\n        var segs = locale.split(\"_\");\n\n        var exploded = fluid.transform(segs, function (seg, index) {\n            var shortSegs = segs.slice(0, index + 1);\n            return baseName + \"_\" + shortSegs.join(\"_\") + extension;\n        });\n        if (defaultLocale) {\n            exploded.unshift(baseName + \"_\" + defaultLocale + extension);\n        }\n        return exploded;\n    };\n\n    /** Framework-global caching state for fluid.fetchResources **/\n\n    var resourceCache = {};\n\n    var pendingClass = {};\n\n    /** Accepts a hash of structures with free keys, where each entry has either\n     * href/url or nodeId set - on completion, callback will be called with the populated\n     * structure with fetched resource text in the field \"resourceText\" for each\n     * entry. Each structure may contain \"options\" holding raw options to be forwarded\n     * to jQuery.ajax().\n     */\n\n    fluid.fetchResources = function (resourceSpecs, callback, options) {\n        var that = {\n            options: fluid.copy(options || {})\n        };\n        that.resourceSpecs = resourceSpecs;\n        that.callback = callback;\n        that.operate = function () {\n            fluid.fetchResources.fetchResourcesImpl(that);\n        };\n        fluid.each(resourceSpecs, function (resourceSpec, key) {\n            resourceSpec.recurseFirer = fluid.makeEventFirer({name: \"I/O completion for resource \\\"\" + key + \"\\\"\"});\n            resourceSpec.recurseFirer.addListener(that.operate);\n            if (resourceSpec.url && !resourceSpec.href) {\n                resourceSpec.href = resourceSpec.url;\n            }\n            if (that.options.defaultLocale) {\n                resourceSpec.defaultLocale = that.options.defaultLocale;\n                if (resourceSpec.locale === undefined) {\n                    resourceSpec.locale = that.options.defaultLocale;\n                }\n            }\n        });\n        if (that.options.amalgamateClasses) {\n            fluid.fetchResources.amalgamateClasses(resourceSpecs, that.options.amalgamateClasses, that.operate);\n        }\n        fluid.fetchResources.explodeForLocales(resourceSpecs);\n        that.operate();\n        return that;\n    };\n\n    fluid.fetchResources.explodeForLocales = function (resourceSpecs) {\n        fluid.each(resourceSpecs, function (resourceSpec, key) {\n            if (resourceSpec.locale) {\n                var exploded = fluid.explodeLocalisedName(resourceSpec.href, resourceSpec.locale, resourceSpec.defaultLocale);\n                for (var i = 0; i < exploded.length; ++i) {\n                    var newKey = key + \"$localised-\" + i;\n                    var newRecord = $.extend(true, {}, resourceSpec, {\n                        href: exploded[i],\n                        localeExploded: true\n                    });\n                    resourceSpecs[newKey] = newRecord;\n                }\n                resourceSpec.localeExploded = exploded.length;\n            }\n        });\n        return resourceSpecs;\n    };\n\n    fluid.fetchResources.condenseOneResource = function (resourceSpecs, resourceSpec, key, localeCount) {\n        var localeSpecs = [resourceSpec];\n        for (var i = 0; i < localeCount; ++i) {\n            var localKey = key + \"$localised-\" + i;\n            localeSpecs.unshift(resourceSpecs[localKey]);\n            delete resourceSpecs[localKey];\n        }\n        var lastNonError = fluid.find_if(localeSpecs, function (spec) {\n            return !spec.fetchError;\n        });\n        if (lastNonError) {\n            resourceSpecs[key] = lastNonError;\n        }\n    };\n\n    fluid.fetchResources.condenseForLocales = function (resourceSpecs) {\n        fluid.each(resourceSpecs, function (resourceSpec, key) {\n            if (typeof(resourceSpec.localeExploded) === \"number\") {\n                fluid.fetchResources.condenseOneResource(resourceSpecs, resourceSpec, key, resourceSpec.localeExploded);\n            }\n        });\n    };\n\n    fluid.fetchResources.notifyResources = function (that, resourceSpecs, callback) {\n        fluid.fetchResources.condenseForLocales(resourceSpecs);\n        callback(resourceSpecs);\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    // Add \"synthetic\" elements of *this* resourceSpec list corresponding to any\n    // still pending elements matching the PROLEPTICK CLASS SPECIFICATION supplied\n    fluid.fetchResources.amalgamateClasses = function (specs, classes, operator) {\n        fluid.each(classes, function (clazz) {\n            var pending = pendingClass[clazz];\n            fluid.each(pending, function (pendingrec, canon) {\n                specs[clazz + \"!\" + canon] = pendingrec;\n                pendingrec.recurseFirer.addListener(operator);\n            });\n        });\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.fetchResources.timeSuccessCallback = function (resourceSpec) {\n        if (resourceSpec.timeSuccess && resourceSpec.options && resourceSpec.options.success) {\n            var success = resourceSpec.options.success;\n            resourceSpec.options.success = function () {\n                var startTime = new Date();\n                var ret = success.apply(null, arguments);\n                fluid.log(\"External callback for URL \" + resourceSpec.href + \" completed - callback time: \" +\n                        (new Date().getTime() - startTime.getTime()) + \"ms\");\n                return ret;\n            };\n        }\n    };\n\n    // TODO: Integrate punch-through from old Engage implementation\n    function canonUrl(url) {\n        return url;\n    }\n\n    fluid.fetchResources.clearResourceCache = function (url) {\n        if (url) {\n            delete resourceCache[canonUrl(url)];\n        }\n        else {\n            fluid.clear(resourceCache);\n        }\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.fetchResources.handleCachedRequest = function (resourceSpec, response, fetchError) {\n        var canon = canonUrl(resourceSpec.href);\n        var cached = resourceCache[canon];\n        if (cached.$$firer$$) {\n            fluid.log(\"Handling request for \" + canon + \" from cache\");\n            var fetchClass = resourceSpec.fetchClass;\n            if (fetchClass && pendingClass[fetchClass]) {\n                fluid.log(\"Clearing pendingClass entry for class \" + fetchClass);\n                delete pendingClass[fetchClass][canon];\n            }\n            var result = {response: response, fetchError: fetchError};\n            resourceCache[canon] = result;\n            cached.fire(response, fetchError);\n        }\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.fetchResources.completeRequest = function (thisSpec) {\n        thisSpec.queued = false;\n        thisSpec.completeTime = new Date();\n        fluid.log(\"Request to URL \" + thisSpec.href + \" completed - total elapsed time: \" +\n            (thisSpec.completeTime.getTime() - thisSpec.initTime.getTime()) + \"ms\");\n        thisSpec.recurseFirer.fire();\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.fetchResources.makeResourceCallback = function (thisSpec) {\n        return {\n            success: function (response) {\n                thisSpec.resourceText = response;\n                thisSpec.resourceKey = thisSpec.href;\n                if (thisSpec.forceCache) {\n                    fluid.fetchResources.handleCachedRequest(thisSpec, response);\n                }\n                fluid.fetchResources.completeRequest(thisSpec);\n            },\n            error: function (response, textStatus, errorThrown) {\n                thisSpec.fetchError = {\n                    status: response.status,\n                    textStatus: response.textStatus,\n                    errorThrown: errorThrown\n                };\n                if (thisSpec.forceCache) {\n                    fluid.fetchResources.handleCachedRequest(thisSpec, null, thisSpec.fetchError);\n                }\n                fluid.fetchResources.completeRequest(thisSpec);\n            }\n\n        };\n    };\n\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.fetchResources.issueCachedRequest = function (resourceSpec, options) {\n        var canon = canonUrl(resourceSpec.href);\n        var cached = resourceCache[canon];\n        if (!cached) {\n            fluid.log(\"First request for cached resource with url \" + canon);\n            cached = fluid.makeEventFirer({name: \"cache notifier for resource URL \" + canon});\n            cached.$$firer$$ = true;\n            resourceCache[canon] = cached;\n            var fetchClass = resourceSpec.fetchClass;\n            if (fetchClass) {\n                if (!pendingClass[fetchClass]) {\n                    pendingClass[fetchClass] = {};\n                }\n                pendingClass[fetchClass][canon] = resourceSpec;\n            }\n            options.cache = false; // TODO: Getting weird \"not modified\" issues on Firefox\n            $.ajax(options);\n        }\n        else {\n            if (!cached.$$firer$$) {\n                if (cached.response) {\n                    options.success(cached.response);\n                } else {\n                    options.error(cached.fetchError);\n                }\n            }\n            else {\n                fluid.log(\"Request for cached resource which is in flight: url \" + canon);\n                cached.addListener(function (response, fetchError) {\n                    if (response) {\n                        options.success(response);\n                    } else {\n                        options.error(fetchError);\n                    }\n                });\n            }\n        }\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    // Compose callbacks in such a way that the 2nd, marked \"external\" will be applied\n    // first if it exists, but in all cases, the first, marked internal, will be\n    // CALLED WITHOUT FAIL\n    fluid.fetchResources.composeCallbacks = function (internal, external) {\n        return external ? (internal ?\n        function () {\n            try {\n                external.apply(null, arguments);\n            }\n            catch (e) {\n                fluid.log(\"Exception applying external fetchResources callback: \" + e);\n            }\n            internal.apply(null, arguments); // call the internal callback without fail\n        } : external ) : internal;\n    };\n\n    // unsupported, NON-API function\n    fluid.fetchResources.composePolicy = function (target, source) {\n        return fluid.fetchResources.composeCallbacks(target, source);\n    };\n\n    fluid.defaults(\"fluid.fetchResources.issueRequest\", {\n        mergePolicy: {\n            success: fluid.fetchResources.composePolicy,\n            error: fluid.fetchResources.composePolicy,\n            url: \"reverse\"\n        }\n    });\n\n    // unsupported, NON-API function\n    fluid.fetchResources.issueRequest = function (resourceSpec, key) {\n        var thisCallback = fluid.fetchResources.makeResourceCallback(resourceSpec);\n        var options = {\n            url:     resourceSpec.href,\n            success: thisCallback.success,\n            error:   thisCallback.error,\n            dataType: resourceSpec.dataType || \"text\"\n        };\n        fluid.fetchResources.timeSuccessCallback(resourceSpec);\n        options = fluid.merge(fluid.defaults(\"fluid.fetchResources.issueRequest\").mergePolicy,\n                      options, resourceSpec.options);\n        resourceSpec.queued = true;\n        resourceSpec.initTime = new Date();\n        fluid.log(\"Request with key \" + key + \" queued for \" + resourceSpec.href);\n\n        if (resourceSpec.forceCache) {\n            fluid.fetchResources.issueCachedRequest(resourceSpec, options);\n        }\n        else {\n            $.ajax(options);\n        }\n    };\n\n\n    fluid.fetchResources.fetchResourcesImpl = function (that) {\n        var complete = true;\n        var allSync = true;\n        var resourceSpecs = that.resourceSpecs;\n        for (var key in resourceSpecs) {\n            var resourceSpec = resourceSpecs[key];\n            if (!resourceSpec.options || resourceSpec.options.async) {\n                allSync = false;\n            }\n            if (resourceSpec.href && !resourceSpec.completeTime) {\n                if (!resourceSpec.queued) {\n                    fluid.fetchResources.issueRequest(resourceSpec, key);\n                }\n                if (resourceSpec.queued) {\n                    complete = false;\n                }\n            }\n            else if (resourceSpec.nodeId && !resourceSpec.resourceText) {\n                var node = document.getElementById(resourceSpec.nodeId);\n                // upgrade this to somehow detect whether node is \"armoured\" somehow\n                // with comment or CDATA wrapping\n                resourceSpec.resourceText = fluid.dom.getElementText(node);\n                resourceSpec.resourceKey = resourceSpec.nodeId;\n            }\n        }\n        if (complete && that.callback && !that.callbackCalled) {\n            that.callbackCalled = true;\n            if ($.browser.mozilla && !allSync) {\n                // Defer this callback to avoid debugging problems on Firefox\n                setTimeout(function () {\n                    fluid.fetchResources.notifyResources(that, resourceSpecs, that.callback);\n                }, 1);\n            }\n            else {\n                fluid.fetchResources.notifyResources(that, resourceSpecs, that.callback);\n            }\n        }\n    };\n\n    // TODO: This framework function is a stop-gap before the \"ginger world\" is capable of\n    // asynchronous instantiation. It currently performs very poor fidelity expansion of a\n    // component's options to discover \"resources\" only held in the static environment\n    fluid.fetchResources.primeCacheFromResources = function (componentName) {\n        var resources = fluid.defaults(componentName).resources;\n        var expanded = (fluid.expandOptions ? fluid.expandOptions : fluid.identity)(fluid.copy(resources));\n        fluid.fetchResources(expanded);\n    };\n\n    /** Utilities invoking requests for expansion **/\n    fluid.registerNamespace(\"fluid.expander\");\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.expander.makeDefaultFetchOptions = function (successdisposer, failid, options) {\n        return $.extend(true, {dataType: \"text\"}, options, {\n            success: function (response, environmentdisposer) {\n                var json = JSON.parse(response);\n                environmentdisposer(successdisposer(json));\n            },\n            error: function (response, textStatus) {\n                fluid.log(\"Error fetching \" + failid + \": \" + textStatus);\n            }\n        });\n    };\n\n    /*\n     * This function is unsupported: It is not really intended for use by implementors.\n     */\n    fluid.expander.makeFetchExpander = function (options) {\n        return { expander: {\n            type: \"fluid.expander.deferredFetcher\",\n            href: options.url,\n            options: fluid.expander.makeDefaultFetchOptions(options.disposer, options.url, options.options),\n            resourceSpecCollector: \"{resourceSpecCollector}\",\n            fetchKey: options.fetchKey\n        }};\n    };\n\n    fluid.expander.deferredFetcher = function (deliverer, source, expandOptions) {\n        var expander = source.expander;\n        var spec = fluid.copy(expander);\n        // fetch the \"global\" collector specified in the external environment to receive\n        // this resourceSpec\n        var collector = fluid.expand(expander.resourceSpecCollector, expandOptions);\n        delete spec.type;\n        delete spec.resourceSpecCollector;\n        delete spec.fetchKey;\n        var environmentdisposer = function (disposed) {\n            deliverer(disposed);\n        };\n        // replace the callback which is there (taking 2 arguments) with one which\n        // directly responds to the request, passing in the result and OUR \"disposer\" -\n        // which once the user has processed the response (say, parsing JSON and repackaging)\n        // finally deposits it in the place of the expander in the tree to which this reference\n        // has been stored at the point this expander was evaluated.\n        spec.options.success = function (response) {\n            expander.options.success(response, environmentdisposer);\n        };\n        var key = expander.fetchKey || fluid.allocateGuid();\n        collector[key] = spec;\n        return fluid.NO_VALUE;\n    };\n\n\n})(jQuery, fluid_3_0_0);\n","/*\nCopyright 2011-2016 OCAD University\nCopyright 2011 Lucendo Development Ltd.\n\nLicensed under the Educational Community License (ECL), Version 2.0 or the New\nBSD license. You may not use this file except in compliance with one these\nLicenses.\n\nYou may obtain a copy of the ECL 2.0 License and BSD License at\nhttps://github.com/fluid-project/infusion/raw/master/Infusion-LICENSE.txt\n*/\n\nvar fluid_3_0_0 = fluid_3_0_0 || {};\n\n(function ($, fluid) {\n\n    \"use strict\";\n\n    /**\n     * A configurable component to allow users to load multiple resources via AJAX requests.\n     * The resources can be localised by means of options `locale`, `defaultLocale`. Once all\n     * resources are loaded, the event `onResourceLoaded` will be fired, which can be used\n     * to time the creation of components dependent on the resources.\n     *\n     * @param {Object} options\n     */\n\n    fluid.defaults(\"fluid.resourceLoader\", {\n        gradeNames: [\"fluid.component\"],\n        listeners: {\n            \"onCreate.loadResources\": {\n                listener: \"fluid.resourceLoader.loadResources\",\n                args: [\"{that}\", {expander: {func: \"{that}.resolveResources\"}}]\n            }\n        },\n        defaultLocale: null,\n        locale: null,\n        terms: {},  // Must be supplied by integrators\n        resources: {},  // Must be supplied by integrators\n        resourceOptions: {},\n        // Unsupported, non-API option\n        invokers: {\n            transformURL: {\n                funcName: \"fluid.stringTemplate\",\n                args: [\"{arguments}.0\", \"{that}.options.terms\"]\n            },\n            resolveResources: {\n                funcName: \"fluid.resourceLoader.resolveResources\",\n                args: \"{that}\"\n            }\n        },\n        events: {\n            onResourcesLoaded: null\n        }\n    });\n\n    fluid.resourceLoader.resolveResources = function (that) {\n        var mapped = fluid.transform(that.options.resources, that.transformURL);\n\n        return fluid.transform(mapped, function (url) {\n            var resourceSpec = {url: url, forceCache: true, options: that.options.resourceOptions};\n            return $.extend(resourceSpec, fluid.filterKeys(that.options, [\"defaultLocale\", \"locale\"]));\n        });\n    };\n\n    fluid.resourceLoader.loadResources = function (that, resources) {\n        fluid.fetchResources(resources, function () {\n            that.resources = resources;\n            that.events.onResourcesLoaded.fire(resources);\n        });\n    };\n\n})(jQuery, fluid_3_0_0);\n"]}